<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Video on Krishna Bhamidipati</title>
        <link>http://localhost:1313/categories/video/</link>
        <description>Recent content in Video on Krishna Bhamidipati</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 19 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/video/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>A Videographer&#39;s Guide to Hiring a Videographer</title>
        <link>http://localhost:1313/post/video/2022/videographers-guide-to-hiring-videographers/</link>
        <pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2022/videographers-guide-to-hiring-videographers/</guid>
        <description>&lt;p&gt;I learned some hard lessons about hiring a videographer in 2022 for our wedding. A friend who&amp;rsquo;s getting married asked for advice. Here&amp;rsquo;s what I shared.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2022/videographers-guide-to-hiring-videographers/pug.jpg&#34;
	width=&#34;3024&#34;
	height=&#34;3025&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;99&#34;
		data-flex-basis=&#34;239px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;communication-is-key&#34;&gt;Communication is Key
&lt;/h3&gt;&lt;p&gt;Our photographer pulled in his favorite videographer. The photographer was excellent so we extended a lot of trust.&lt;/p&gt;
&lt;p&gt;I initially called the videographer and inquired about his workflow before signing the contract. I saw his Vimeo page and the work he posted. I inquired about his recording techniques, the gear he uses, and so on.&lt;/p&gt;
&lt;p&gt;I distinctly remember asking if he would record and sync audio from the mixer during the wedding. He seemed to downplay the importance of it (&amp;ldquo;shotgun mic would be good enough&amp;rdquo;) and I deferred&amp;hellip;what a mistake that was! More on that &lt;a class=&#34;link&#34; href=&#34;##raw-footage-is-great-if-its-recorded&#34; &gt;later&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After about ten minutes, he said he had to go and that I should route future details through the photographer. It seemed like he did not wish to be directly contacted. Overall we did not hit it off like two videographers connecting to each other.&lt;/p&gt;
&lt;p&gt;In retrospect, I should have seen that the videographer didn&amp;rsquo;t understand what was important to me. Maybe he didn&amp;rsquo;t take me seriously. I knew I had qualms about moving forward, but I didn&amp;rsquo;t know how to go about it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Could I do it again, I would not have let what I knew I wanted be downplayed so easily.&lt;/strong&gt; I also would have asked better questions such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How do they record in multicam and how do they sync the angles?&lt;/li&gt;
&lt;li&gt;Who are the people that will be filming? (Are they a tight knit team or more like a body shop?)&lt;/li&gt;
&lt;li&gt;Do they keep some cameras rolling the whole time?&lt;/li&gt;
&lt;li&gt;Will you be onsite? If not, what is your role?&lt;/li&gt;
&lt;li&gt;What other types of events have you filmed?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the answers were not satisfactory or it seemed like he was not really listening to my asks, I should have had the confidence to walk away and politely share that I&amp;rsquo;m looking for a higher standard.&lt;/p&gt;
&lt;p&gt;In the end, they were largely going to do what they always do: a lather-rinse-repeat wedding job. It didn&amp;rsquo;t matter that we politely informed them (from the very beginning) I was a freelance videographer too or that I shared my site with him. I&amp;rsquo;m a &amp;ldquo;kid&amp;rdquo; getting married after all, and they&amp;rsquo;re the &amp;ldquo;experts.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Mistake #1.&lt;/p&gt;
&lt;h3 id=&#34;highlight-videos-are-not-everything&#34;&gt;Highlight Videos are not Everything
&lt;/h3&gt;&lt;p&gt;I really wanted to delegate and find a professional. Trust others. Find good talent and pay for it. It&amp;rsquo;s your wedding after all.&lt;/p&gt;
&lt;p&gt;The editing sucked. How else can I say it?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fast, jarring pans&lt;/li&gt;
&lt;li&gt;Cuts between cameras that jump forward/backward in time&lt;/li&gt;
&lt;li&gt;Out of focus subjects&lt;/li&gt;
&lt;li&gt;Boomy audio not synced with the mixer&lt;/li&gt;
&lt;li&gt;A curious, pervasive fuzzy quality in the edited videos (more on that &lt;a class=&#34;link&#34; href=&#34;#timespan-of-project-files&#34; &gt;below&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I sincerely do not believe the folks who edited the videos would have watched them if it were their own event. The job was perfunctory. They obviously claimed otherwise.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Can all these be better? Yes, absolutely. But is it horrible and not even worth watching? I disagree with that.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From this, I realized editing is inherently subjective and thus difficult to shape. This is especially true when the other person sees their many years of experience as a reason to remain rigid.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We&amp;rsquo;ve done hundreds of weddings, and we have not once received remarks like this. We understand everyone has different expectations,&amp;rdquo; BUT [insert statement that negates everything that came before the word BUT].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It was a way of invalidating my concern in a pseduo-democratic fashion, a tactful way to make you feel like &lt;strong&gt;you&amp;rsquo;re&lt;/strong&gt; the one with the problem.&lt;/p&gt;
&lt;p&gt;As a reader you may say, &amp;ldquo;Krishna, surely you reviewed their work before hiring them. Didn&amp;rsquo;t you know what you were getting into?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That is the realization: I didn&amp;rsquo;t review &lt;em&gt;all&lt;/em&gt; their work. I only reviewed what they shared&amp;hellip;the highlight videos posted on their Vimeo page. These looked good, and we also saw one of our previous friends hire them. However the highlight reels offered very little insight into how they record/sync footage for the ceremonies.&lt;/p&gt;
&lt;p&gt;When making highlight videos, you don’t sweat what you don’t record, only choose the best parts, and create something nice for 15 minutes. That&amp;rsquo;s entirely a different product from recording a two hour ceremony in multicam.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If there are multiple work products you are paying for, ask to review examples of all of them. If privacy is a concern (reasonable), ask if you can request permission from one or more of their recent clients.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mistake #2.&lt;/p&gt;
&lt;h3 id=&#34;raw-footage-is-great-if-its-recorded&#34;&gt;Raw Footage is Great, if it&amp;rsquo;s Recorded
&lt;/h3&gt;&lt;p&gt;To some extent, I reluctantly anticipated the quality of the edited videos would be a gamble. Turned out it was, but I made peace with that.&lt;/p&gt;
&lt;p&gt;As part of the contract, I had the foresight of requesting raw multicam footage of the events on a 2 TB hard drive provided by me. I specifically recall confirming that the space would be more than enough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Can you believe it? The cameras weren&amp;rsquo;t even recording the whole time during events.&lt;/strong&gt; Like even when people are talking. I synced all the raw footage provided (&lt;a class=&#34;link&#34; href=&#34;https://pluralsynchronizer.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PluralEyes&lt;/a&gt; ftw) and there are parts where only one camera is rolling. We paid for it, and we didn&amp;rsquo;t get it.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s worse, sometimes the single camera went out of focus. I specifically cited an example where a camera goes in and out of focus eight times within 45 seconds, so I can&amp;rsquo;t edit around it. Was the cameraman learning on the job or something? An out of focus camera, with no secondary angle, is not acceptable.&lt;/p&gt;
&lt;p&gt;Again, would this have been a problem if it were footage for a highlight video? Not at all. Just snip-snip, edit around it, and no one is the wiser. Sadly for me, there is no way to salvage those moments now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It&amp;rsquo;s clear to me now that filming concerts gave me a completely different mindset for shooting in multicam. Every moment is precious. These people didn&amp;rsquo;t know or care how to shoot in multicam.&lt;/strong&gt; What I didn&amp;rsquo;t realize at the time of talking to the videographer was that his downplay of recording audio from the mixer indicated a more serious lack of expertise in syncing multiple angles of video together! People tend to downplay what they don&amp;rsquo;t know/find important.&lt;/p&gt;
&lt;p&gt;At one point they argued that it takes up a lot of space to keep the cameras rolling the whole time. Isn&amp;rsquo;t that what they&amp;rsquo;re paid for? They didn&amp;rsquo;t record audio from the mixer for the main wedding ceremony either, and that is peanuts in storage compared to video. The most rational explanation is that someone forgot—or thought they knew better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you request multicam, ask if they will keep the cameras rolling the whole time. Find out how much DELTA there is between what they always do vs. what you&amp;rsquo;re asking, because otherwise the person you hire may just wing it. If they downplay or minimize the ask, it might be because it cuts into their margin and they need to hire more people, or they don&amp;rsquo;t know how.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mistake #3.&lt;/p&gt;
&lt;h3 id=&#34;timespan-of-project-files&#34;&gt;Timespan of Project Files
&lt;/h3&gt;&lt;p&gt;I also asked for the project files as part of the contract. We signed on it. Then afterwards&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Sorry, the software we use creates really big project files. So we delete the project after every export to make edits faster and save space.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What? 😲&lt;/p&gt;
&lt;p&gt;You mean to say you delete the project even before the client has received and approved the work? That&amp;rsquo;s dumbfounding. Then they patronized me with the most brilliant editing advice I have received.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I am sure you can easily load edited videos in Premiere Pro and replace any shots you want with raw files he provided.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What?? 😱&lt;/p&gt;
&lt;p&gt;THAT gave me real insight into their editing process: if you ask for a change, they must re-ingest the H264 export (which is already compressed), chop it up, do whatever, then EXPORT and compress it again. No timecode, no real syncing. This is why somehow, mysteriously, the edited videos were not as crisp as the raw footage.&lt;/p&gt;
&lt;p&gt;Mistake #4.&lt;/p&gt;
&lt;h3 id=&#34;contracts-can-break&#34;&gt;Contracts Can Break
&lt;/h3&gt;&lt;p&gt;What do you do if you&amp;rsquo;ve trusted someone with your contract and they don&amp;rsquo;t fulfill it?&lt;/p&gt;
&lt;p&gt;Nothing, really: it&amp;rsquo;s extremely disappointing to have asked for something, paid for it, and have it ignored.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You definitely held us at the highest standards, and I am extremely sorry that I couldn&amp;rsquo;t meet the expectations.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is another clever way of shifting the responsibility and making it about &amp;ldquo;me&amp;rdquo; and &amp;ldquo;my standards.&amp;rdquo; I think the &lt;em&gt;lowest&lt;/em&gt; standard was they film and capture all the raw footage. They signed on it, and they didn&amp;rsquo;t do it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I always considered myself a passionate amateur until this point, but now I realize how wide the spread in &amp;ldquo;professional&amp;rdquo; really is.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Another friend told me the other day that she never even got her edited wedding videos, just the raw footage. &lt;strong&gt;It seems the norm for a lot of wedding professionals is to be paid in full on the day of the event, leaving no accountability. It might have been tricky, but respectfully negotiating different payment terms is something we should have done.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mistake #5.&lt;/p&gt;
&lt;h3 id=&#34;moving-forward&#34;&gt;Moving Forward
&lt;/h3&gt;&lt;p&gt;I hope these reflections are useful to anyone who may be looking to hire a videographer on their own. I wish my future self advice my former self on what to look out for and what questions to ask.&lt;/p&gt;
&lt;p&gt;It really hurts to be minimized and taken advantage of. It leaves impressions that remain etched for a long time. One of the most insightful commentaries of this is &lt;a class=&#34;link&#34; href=&#34;https://youtu.be/EJJ-Pu8WsZU?t=140&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dave Chappelle: Unforgiven | Exposing Comedy Central&lt;/a&gt; at 2:20 where he describes how a grown adult stole a joke from 15 year-old Dave Chappelle (warning language). I know it will be a continous practice to internalize and overcome this. I know it will make me a better person.&lt;/p&gt;
&lt;p&gt;For now, I have what footage I have. I will be creative, work out of happiness, and make the best of it. Our wedding was magical, and I will make something magical to share to with those I love.&lt;/p&gt;
&lt;h3 id=&#34;update-one-year-later&#34;&gt;Update: One Year Later
&lt;/h3&gt;&lt;p&gt;It&amp;rsquo;s true that I have not yet re-edited the videos. Each time I tried to start, the negative feels were just too strong. That is slowly changing though.&lt;/p&gt;
&lt;p&gt;What I have observed about myself is that I have become more confident about my own abilities. Not in a way that puts others down, but in a way in which others cannot put me down so easily. I trust and value myself in a way now that I may not have been able to otherwise, and I share that value with others.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a pretty nice wedding gift from the universe.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Rclone Cloud Archival Pro Tips</title>
        <link>http://localhost:1313/post/video/2020/rclone-b2-pro-tips/</link>
        <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2020/rclone-b2-pro-tips/</guid>
        <description>&lt;h2 id=&#34;recap&#34;&gt;Recap
&lt;/h2&gt;&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/&#34; &gt;previous post&lt;/a&gt; detailed how &lt;a class=&#34;link&#34; href=&#34;https://rclone.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rclone&lt;/a&gt; can reliably upload large files with their checksums to Backblaze unlike other programs. This post will outline the workflow and some gotchas to keep in mind when doing massive data loads over the internet.&lt;/p&gt;
&lt;p&gt;With trial and error, I was able to archive 8 TB of footage from my Synology NAS to Backblaze B2 in about a month.&lt;/p&gt;
&lt;h2 id=&#34;to-keep-in-mind&#34;&gt;To Keep in Mind
&lt;/h2&gt;&lt;p&gt;First, the overall workflow.&lt;/p&gt;
&lt;h3 id=&#34;remote-to-remote-is-possible&#34;&gt;Remote to Remote is Possible
&lt;/h3&gt;&lt;p&gt;Keep in mind Rsync supports copying between two remotes directly. The computer running Rclone will stream data in RAM as it shuttles data between the two.&lt;/p&gt;
&lt;p&gt;In fact that&amp;rsquo;s what I mainly did: transferred assets from a personal B2 bucket to the organization&amp;rsquo;s new B2 bucket. Pretty neat!&lt;/p&gt;
&lt;h3 id=&#34;list-folders-syntax-lsd&#34;&gt;List Folders Syntax: &lt;code&gt;lsd&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;After setting up your remote with &lt;code&gt;rclone config&lt;/code&gt;, use the list directory command &lt;code&gt;lsd&lt;/code&gt; to double check your source/target folders.&lt;/p&gt;
&lt;p&gt;For example, if the B2 remote name is called &lt;code&gt;b2-remote1&lt;/code&gt; then the command to list the root is:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone lsd b2-remote1:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note the &lt;code&gt;:&lt;/code&gt; at the end.&lt;/p&gt;
&lt;p&gt;If a folder contains spaces, you use double quotes like this rather than backticks &lt;code&gt;\&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone lsd b2-remote1:Videos/&amp;#34;Subfolder With Spaces/&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also use trailing forward slashes &lt;code&gt;/&lt;/code&gt; instead of asterisks &lt;code&gt;*&lt;/code&gt; to indicate the files inside.&lt;/p&gt;
&lt;h3 id=&#34;consider-copy-instead-of-sync&#34;&gt;Consider &lt;code&gt;copy&lt;/code&gt; instead of &lt;code&gt;sync&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;From the docs&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rclone copy&lt;/code&gt; - Copy files from source to dest, skipping already copied.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rclone sync&lt;/code&gt; - Make source and dest identical, modifying destination only.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Depending on your intention, &lt;code&gt;copy&lt;/code&gt; may be better.&lt;/p&gt;
&lt;h3 id=&#34;expect-errors-and-verify&#34;&gt;Expect Errors and Verify
&lt;/h3&gt;&lt;p&gt;Although Rclone automatically retries upload errors (by default up to 10 times) there are few reasons why files never get uploaded. See the appendix for various scenarios.&lt;/p&gt;
&lt;p&gt;Therfore, in a nutshell, always verify your transfer after (&lt;a class=&#34;link&#34; href=&#34;#the-check-command&#34; &gt;see below&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;beware-quota-restrictions&#34;&gt;Beware Quota Restrictions
&lt;/h3&gt;&lt;p&gt;Unexpected EOF (end of file) errors can occur when streaming from a remote because of Backblaze quota restrictions.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/08/09 16:53:44 DEBUG : CAM A/private/M4ROOT/CLIP/C0001.MP4: Cancelling large file upload due to error: unexpected EOF
2018/08/09 16:53:45 DEBUG : CAM A/private/M4ROOT/CLIP/C0001.MP4: Received error: unexpected EOF - low level retry 1/10
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;double-check-the-source-supports-and-has-checksums&#34;&gt;Double Check the Source Supports (and has) Checksums
&lt;/h3&gt;&lt;p&gt;Since Backblaze only supports SHA-1 checksums, the Rclone docs indicate the source must also support SHA-1 checksums.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For a large file to be uploaded with an SHA1 checksum, the source needs to support SHA1 checksums. The local disk supports SHA1 checksums so large file transfers from local disk will have an SHA1. See &lt;a class=&#34;link&#34; href=&#34;https://rclone.org/overview/#features&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the overview&lt;/a&gt; for exactly which remotes support SHA1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So B2 to B2 syncs should always populate checksums, right? Wrong. It will only &lt;em&gt;if&lt;/em&gt; the source B2 bucket had checksums.&lt;/p&gt;
&lt;p&gt;As detailed in the &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/&#34; &gt;previous post&lt;/a&gt;, that means if the large files were copied with Rclone would they have checksums.&lt;/p&gt;
&lt;h3 id=&#34;rclone-browser-is-great-but-deprecated-for-local---remote&#34;&gt;Rclone Browser is Great (but Deprecated) for Local &amp;lt;-&amp;gt; Remote
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mmozeiko/RcloneBrowser&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rclone Browser&lt;/a&gt; is a wrapper that the same config as the CLI. Rclone Browser does not support direct remote to remote syncs, but it is good for normal use. Unfortunately the program deprecated in favor of the &lt;a class=&#34;link&#34; href=&#34;https://rclone.org/gui/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WebGUI&lt;/a&gt;, but the latter doesn&amp;rsquo;t let you yet upload things. 🤷🏾‍♂️&lt;/p&gt;
&lt;p&gt;On Mac, Rclone Browser can be installed with Homebrew via &lt;code&gt;brew cask install rclone-browser&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;-reliability-by--chunk-size-using--ram&#34;&gt;⬆︎ Reliability by ⬆︎ Chunk Size (using ⬆︎ RAM)
&lt;/h3&gt;&lt;p&gt;The default settings seem to be optimized for small files, like webpages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single part upload cutoff of 200 MB&lt;/li&gt;
&lt;li&gt;Chunk size of 96 MB&lt;/li&gt;
&lt;li&gt;Four concurrent transfers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For whatever reason, the error rate with these defaults was higher than I expected (&lt;a class=&#34;link&#34; href=&#34;#performance-logs&#34; &gt;see below&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Instead, I found better stability for large video files with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cutoff of 1G&lt;/li&gt;
&lt;li&gt;1G &amp;lt;= chunk size &amp;lt;=4G&lt;/li&gt;
&lt;li&gt;Two concurrent transfers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that all concurrent chunks are buffered into memory, so there is significantly more RAM usage with larger chunk sizes. Hence the downgrade to two transfers.&lt;/p&gt;
&lt;p&gt;More specifics in the sync section &lt;a class=&#34;link&#34; href=&#34;#the-sync-command&#34; &gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;measure-twice-cut-once-dryrun&#34;&gt;Measure Twice, Cut Once: &lt;code&gt;dryrun&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;Before discussing the &lt;code&gt;sync&lt;/code&gt; command, it&amp;rsquo;s imperative mention the &lt;code&gt;--dryrun&lt;/code&gt; flag for the following reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backblaze bills by usage/throughput&lt;/li&gt;
&lt;li&gt;B2 doesn&amp;rsquo;t support renaming files after they are uploaded&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, when running &lt;code&gt;rclone sync&lt;/code&gt; always use the &lt;code&gt;--dryrun&lt;/code&gt; option first.&lt;/p&gt;
&lt;h2 id=&#34;the-sync-command&#34;&gt;The &lt;code&gt;sync&lt;/code&gt; command
&lt;/h2&gt;&lt;p&gt;My goto &lt;code&gt;sync&lt;/code&gt; (or&lt;code&gt;copy&lt;/code&gt;) command is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rclone sync &amp;lt;source&amp;gt; &amp;lt;dest&amp;gt; --exclude .DS_Store -vv --b2-upload-cutoff 1G --b2-chunk-size 1G --transfers 2&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;explanation-of-flags&#34;&gt;Explanation of Flags
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--exclude .DS_Store&lt;/code&gt; to excluding Mac specific files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-vv&lt;/code&gt; to enable DEBUG logging for visibility into chunk retries, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--b2-upload-cutoff&lt;/code&gt; files above this size will switch to a multipart chunked transfer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--b2-chunk-size&lt;/code&gt; the size of the chunks, buffered in memory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--transfers&lt;/code&gt; number of simulatenous transfers. &lt;code&gt;b2-chunk-size&lt;/code&gt; x &lt;code&gt;transfers&lt;/code&gt; must fit in RAM&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;phased-approach-with---max-size&#34;&gt;Phased Approach with &lt;code&gt;--max-size&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;Sometimes I found it helpful to transfer all files under a certain size limit first, say 1 GB, and then re-run the command for larger files.&lt;/p&gt;
&lt;p&gt;To do so, add &lt;code&gt;--max-size 1G&lt;/code&gt; to the &lt;code&gt;rclone sync&lt;/code&gt; command.&lt;/p&gt;
&lt;h2 id=&#34;the-check-command&#34;&gt;The &lt;code&gt;check&lt;/code&gt; command
&lt;/h2&gt;&lt;p&gt;Always verify after a sync. Even if you think you don&amp;rsquo;t need to. The command is straightforward:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rclone check &amp;lt;source&amp;gt; &amp;lt;dest&amp;gt; --exclude .DS_Store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If there are discrepancies the output will look like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/09/05 07:45:04 ERROR : CAM 2/AVF_INFO/AVIN0001.BNP: File not in Local file system at /Volumes/Scratch/ToB2
2018/09/05 07:45:04 ERROR : CAM 2/AVF_INFO/AVIN0001.INP: File not in Local file system at /Volumes/Scratch/ToB2
2018/09/05 07:45:04 ERROR : CAM 2/AVF_INFO/AVIN0001.INT: File not in Local file system at /Volumes/Scratch/ToB2
2018/09/05 07:45:04 ERROR : CAM 2/AVF_INFO/PRV00001.BIN: File not in Local file system at /Volumes/Scratch/ToB2
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;use-error-output-to-create-diff-file&#34;&gt;Use error output to create diff file
&lt;/h3&gt;&lt;p&gt;By massaging the &lt;code&gt;rclone check&lt;/code&gt; standard output into a new file with just the file names, it is possible to re-sync just these files. This saves us Backblaze read transactions on the files already copied.&lt;/p&gt;
&lt;p&gt;Assuming a file &lt;code&gt;mydiff.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CAM 2/AVF_INFO/AVIN0001.BNP
CAM 2/AVF_INFO/AVIN0001.INP
CAM 2/AVF_INFO/AVIN0001.INT
CAM 2/AVF_INFO/PRV00001.BIN
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;the sync command is:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone sync &amp;lt;source&amp;gt; &amp;lt;dest&amp;gt; --files-from mydiff.txt &amp;lt;other flags&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, run &lt;code&gt;rclone check&lt;/code&gt; again on all the files.&lt;/p&gt;
&lt;h2 id=&#34;the-cleanup-command&#34;&gt;The &lt;code&gt;cleanup&lt;/code&gt; command
&lt;/h2&gt;&lt;p&gt;If your buckets are created with default settings, the file lifecyle is set to &lt;code&gt;Keep all versions&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To purge deleted files, use a similar syntax to the &lt;code&gt;lsd&lt;/code&gt; command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone lsd b2-remote1:Videos/&amp;#34;Subfolder With Spaces/&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also note that&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that &lt;code&gt;cleanup&lt;/code&gt; will remove partially uploaded files from the bucket if they are more than a day old.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;appendix&#34;&gt;Appendix
&lt;/h2&gt;&lt;h3 id=&#34;performance-logs&#34;&gt;Performance Logs
&lt;/h3&gt;&lt;p&gt;The exact command I used at first was&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rclone sync b2-krish:Footage/&amp;#34;SD Card Archives/&amp;#34; b2-org:RawFiles/&amp;#34;Offloaded Video&amp;#34; -vv --exclude .DS_Store
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and it completed, roughly 3 days later with a 5% error rate.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/08/12 19:46:55 INFO  : 
Transferred:   1.674 TBytes (6.491 MBytes/s)
Errors:                63
Checks:              2173
Transferred:         1123
Elapsed time:   75h6m1.4s
Transferring:
 *   CAM 1/PRIVATE/XDROOT/Clip/Clip0026.MXF: 99% /53.023G, 4.727M/s, 42s
...
2018/08/12 19:47:23 ERROR : Attempt 3/3 failed with 63 errors and: unexpected EOF
2018/08/12 19:47:23 Failed to sync: unexpected EOF
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Instead, by using a chunk size 1G and two max transfers (total 2G in RAM at a time) transfers were noticeably more stable.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/09/01 22:40:13 INFO  : 
Transferred:   52.430 GBytes (5.752 MBytes/s)
Errors:                 0
Checks:               232
Transferred:          776
Elapsed time:  2h35m33.8s

2018/09/01 22:40:13 DEBUG : 14 go routines active
2018/09/01 22:40:13 DEBUG : rclone: Version &amp;#34;v1.42&amp;#34; finishing with parameters [&amp;#34;rclone&amp;#34; &amp;#34;copy&amp;#34; &amp;#34;b2-org:RawFiles/Offloaded Video/&amp;#34; &amp;#34;b2-org:RawFiles/SD Cards/&amp;#34; &amp;#34;--exclude&amp;#34; &amp;#34;.DS_Store&amp;#34; &amp;#34;-vv&amp;#34; &amp;#34;--transfers&amp;#34; &amp;#34;2&amp;#34; &amp;#34;--b2-chunk-size&amp;#34; &amp;#34;1G&amp;#34; &amp;#34;--b2-upload-cutoff&amp;#34; &amp;#34;1G&amp;#34; &amp;#34;--max-size&amp;#34; &amp;#34;1G&amp;#34;]
$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;upload-cutoffs-of-5g&#34;&gt;Upload cutoffs of &amp;ldquo;5G&amp;rdquo;
&lt;/h3&gt;&lt;p&gt;During my experiments, I once tried a 5G single-part cutoff: &lt;code&gt;--b2-chunk-size 2G --b2-upload-cutoff 5G --max-size 5G&lt;/code&gt;. The docs state &lt;code&gt;This value should be set no larger than 4.657GiB (== 5GB)&lt;/code&gt; however it threw this error.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/09/03 13:56:01 Failed to copy: File size too big: 5022908174 (400 bad_request)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So apparently &lt;code&gt;5G&lt;/code&gt; is too high. &lt;code&gt;4G&lt;/code&gt; worked fine though.&lt;/p&gt;
&lt;h3 id=&#34;500-internal-server-error&#34;&gt;500 Internal Server Error
&lt;/h3&gt;&lt;p&gt;Something is wrong with Backblaze, usually a transient problem. Rclone will retry, by default up to 10 times with built-in rate limiting (pacer) as shown with the incident &lt;code&gt;a7691a3d7f71-e47fc872d7ba&lt;/code&gt; below.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2018/08/09 16:53:12 DEBUG : CAM A/private/M4ROOT/CLIP/C0002.MP4: Error sending chunk 2 (retry=true): incident id a7691a3d7f71-e47fc872d7ba (500 internal_error): &amp;amp;api.Error{Status:500, Code:&amp;#34;internal_error&amp;#34;, Message:&amp;#34;incident id a7691a3d7f71-e47fc872d7ba&amp;#34;}
2018/08/09 16:53:12 DEBUG : CAM A/private/M4ROOT/CLIP/C0002.MP4: Clearing part upload URL because of error: incident id a7691a3d7f71-e47fc872d7ba (500 internal_error)
2018/08/09 16:53:12 DEBUG : pacer: Rate limited, increasing sleep to 20ms
2018/08/09 16:53:12 DEBUG : pacer: low level retry 1/10 (error incident id a7691a3d7f71-e47fc872d7ba (500 internal_error))
2018/08/09 16:53:12 DEBUG : CAM A/private/M4ROOT/CLIP/C0002.MP4: Sending chunk 2 length 100663296
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rclone.org/docs/#subcommands&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rclone.org/docs/#subcommands&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rclone.org/b2/#sha1-checksums&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rclone.org/b2/#sha1-checksums&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rclone.org/b2/#versions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rclone.org/b2/#versions&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Lossless Trimming of XAVC-S with PlayMemories</title>
        <link>http://localhost:1313/post/video/2020/lossless-trim-with-play-memories/</link>
        <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2020/lossless-trim-with-play-memories/</guid>
        <description>&lt;h2 id=&#34;why-trim&#34;&gt;Why Trim
&lt;/h2&gt;&lt;p&gt;Sometimes it&amp;rsquo;s a live gig and I&amp;rsquo;m doing multiple things, like camera and sound. Throw in some stage delays and out of a 56 minute clip, half is not needed. On a Sony AX100 shooting at 1080p XAVCS 30fps, that&amp;rsquo;s 11 out of 22 GB extra.&lt;/p&gt;
&lt;p&gt;Now if space isn&amp;rsquo;t a concern then no need to read the rest of this.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; But in practice there are cases when this is a real use case for me.&lt;/p&gt;
&lt;p&gt;The challenge of course is how to trim the file losslessly. Yes there&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://github.com/mifi/lossless-cut&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Lossless Cut&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.fame-ring.com/smart_cutter.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FameRing SmartCutter&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;http://simplemoviex.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SimpleMovieX&lt;/a&gt; and other similar apps, but the reality is after trying these programs the MP4 container seems so vast and varied that prosumer formats aren&amp;rsquo;t properly supported by these third party tools.&lt;/p&gt;
&lt;h2 id=&#34;hello-playmemories&#34;&gt;Hello PlayMemories
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/lossless-trim-with-play-memories/playmemories-trim-1.png&#34;
	width=&#34;932&#34;
	height=&#34;674&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;138&#34;
		data-flex-basis=&#34;331px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Sony actually makes a free app called &lt;a class=&#34;link&#34; href=&#34;https://support.d-imaging.sony.co.jp/www/disoft/int/download/playmemories-home/mac/en/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PlayMemories Home&lt;/a&gt;. The UI is a little clunky, exports are single threaded, and I can&amp;rsquo;t choose the output directory of the destination file. However, at the end of the day, this is an application I can trust to trim files from the SD card—and do it well. No keyframe issues, no risk.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/lossless-trim-with-play-memories/playmemories-trim-2.png&#34;
	width=&#34;1468&#34;
	height=&#34;784&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;slow-but-useful&#34;&gt;Slow But Useful
&lt;/h2&gt;&lt;p&gt;At the end of the day, using PlayMemories to trim footage is slow and thus challenging to fold into a normal ingest workflow. However, when occassion warrants its use, it will get the job done without error.&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Of course, if you&amp;rsquo;re making a highlight reel then losing part of the performance doesn&amp;rsquo;t matter either.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Missing Checksums in NAS Cloud Archives</title>
        <link>http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/</link>
        <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/</guid>
        <description>&lt;h2 id=&#34;the-task&#34;&gt;The Task
&lt;/h2&gt;&lt;p&gt;Backblaze B2 is an incredibly cost-effective cloud-based archival platform. I had a few TBs of large file video footage stored on a Synology NAS that I wanted to archive to B2, in case anything happened to my local array.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;synology-cloud-sync&#34;&gt;Synology Cloud Sync
&lt;/h2&gt;&lt;p&gt;Synology offers a built-in tool that syncs to many cloud providers, called Cloud Sync. In fact, it worked great and I created a bunch of jobs to archive nearly 8 TBs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/synology-cloudsync-b2-1.png&#34;
	width=&#34;898&#34;
	height=&#34;525&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;410px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Cloud Sync even offers an &lt;code&gt;Advanced consistency check&lt;/code&gt; option to compare checksums! All good right?&lt;/p&gt;
&lt;h2 id=&#34;hash-me-not&#34;&gt;Hash me Not
&lt;/h2&gt;&lt;p&gt;Although I had selected the checksum option I was surprised to realize not all files uploaded had their checksums written in B2. Only the small ones did.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/synology-cloudsync-b2-2.png&#34;
	width=&#34;697&#34;
	height=&#34;379&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/synology-cloudsync-b2-4.png&#34;
	width=&#34;951&#34;
	height=&#34;679&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;140&#34;
		data-flex-basis=&#34;336px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/synology-cloudsync-b2-5.png&#34;
	width=&#34;931&#34;
	height=&#34;682&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;327px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;That meant all the actual video files didn&amp;rsquo;t have checksums sent to B2. Yikes.&lt;/p&gt;
&lt;h2 id=&#34;design-feature&#34;&gt;Design &amp;ldquo;Feature&amp;rdquo;
&lt;/h2&gt;&lt;p&gt;Not knowing this limitation was my mistake, as I did not understand the Cloud Sync documentation&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; thoroughly beforehand.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With &lt;strong&gt;Enable advanced consistency check&lt;/strong&gt; ticked, Cloud Sync compares the hash (in addition to file size and last modified time) of each file between the public cloud and the NAS to enhance the integrity check of the sync results. This will require more time and system resources, and depends on the public clouds&amp;rsquo; support for advanced attributes. Please refer to the bottom of the page for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And what the bottom of the page say?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hash values are not available for files uploaded to Backblaze B2 via b2_upload_part upload.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/missing-checksums-with-synology-b2-cloud-sync/synology-cloudsync-b2-3.png&#34;
	width=&#34;897&#34;
	height=&#34;521&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;172&#34;
		data-flex-basis=&#34;413px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;b2_upload_part&lt;/code&gt; upload&amp;hellip; After consulting the B2 API documentation&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, that command is used for uploading large files in segments. As you can see I had it set to 512 MB; the maximum is 4 GB.&lt;/p&gt;
&lt;h2 id=&#34;whose-limitation-is-it-anyway&#34;&gt;Whose Limitation is it Anyway?
&lt;/h2&gt;&lt;p&gt;To be clear, the checksum limitation is on the Synology end. Cloud Sync is simply not sending SHA-1 checksums to Backblaze. B2 in fact supports and encourages&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; sending checksums for large files— and they can even be sent at the end!&lt;/p&gt;
&lt;p&gt;So what can upload to B2 with checksums for large files?&lt;/p&gt;
&lt;h2 id=&#34;rclone-ftw&#34;&gt;Rclone FTW
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rclone.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rclone&lt;/a&gt; is a command line workhorse for syncing files with cloud storage. It&amp;rsquo;s actively maintained, and writes and verifies checksums with B2 perfectly&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;. However, it&amp;rsquo;s only for folks not afraid of the terminal.&lt;/p&gt;
&lt;p&gt;Installing &lt;code&gt;rclone&lt;/code&gt; is super simple on the Synology.&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Login via SSH as an admin&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;curl https://rclone.org/install.sh | sudo bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Verify it is installed with &lt;code&gt;rclone -V&lt;/code&gt; and &lt;code&gt;rclone -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;rclone config&lt;/code&gt; , enter cloud credentials, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How to use the &lt;code&gt;rclone sync&lt;/code&gt; and &lt;code&gt;rclone verify&lt;/code&gt; commands are deatiled in &lt;a class=&#34;link&#34; href=&#34;https://rclone.org/b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rclone B2 docs&lt;/a&gt;. Best practices of using &lt;code&gt;rclone&lt;/code&gt; with using B2 coming soon.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;If you care about checksums for files over 4 GB, don&amp;rsquo;t use Synology Cloud Sync. Instead roll up your sleeves are get cracking with &lt;code&gt;rclone&lt;/code&gt; on the Synology.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[This article was originally drafted in September 2018. At long last&amp;hellip;]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.backblaze.com/blog/the-3-2-1-backup-strategy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.backblaze.com/blog/the-3-2-1-backup-strategy/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.synology.com/en-us/knowledgebase/DSM/help/CloudSync/cloudsync&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.synology.com/en-us/knowledgebase/DSM/help/CloudSync/cloudsync&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.backblaze.com/b2/docs/b2_upload_part.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.backblaze.com/b2/docs/b2_upload_part.html&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://help.backblaze.com/hc/en-us/articles/218020298-Does-B2-require-a-SHA-1-hash-to-be-provided-with-an-upload-&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://help.backblaze.com/hc/en-us/articles/218020298-Does-B2-require-a-SHA-1-hash-to-be-provided-with-an-upload-&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rclone.org/overview/#features&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rclone.org/overview/#features&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://bitbucket.org/fusebit/plex-and-google-drive/wiki/Install%20rclone%20on%20Synology%20NAS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bitbucket.org/fusebit/plex-and-google-drive/wiki/Install%20rclone%20on%20Synology%20NAS&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Conforming FiLMiC Video for NLEs</title>
        <link>http://localhost:1313/post/video/2020/conforming-filmic-footage/</link>
        <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2020/conforming-filmic-footage/</guid>
        <description>&lt;h2 id=&#34;always-conform-iphone-footage-for-nleseven-from-filmic&#34;&gt;Always Conform iPhone Footage for NLEs—even from FiLMiC
&lt;/h2&gt;&lt;p&gt;I knew that normal iPhone videos are variable frame rate. Learned that the hard way, once when I was given a concert recorded on an iPhone to sync up to mastered audio. #superfail #ididntrecordthis&lt;/p&gt;
&lt;p&gt;But I wondered if  &lt;a class=&#34;link&#34; href=&#34;https://www.filmicpro.com/filmicpro/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FiLMiC Pro&lt;/a&gt;  footage was different? Nope, FiLMiC is also VBR.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;no-drop-frame&#34;&gt;No Drop Frame
&lt;/h2&gt;&lt;p&gt;Another thing I learned is FilMiC frame rates are non-drop frame. That is &lt;code&gt;24&lt;/code&gt; really means &amp;ldquo;shoot approximately 24 frames per second.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/conforming-filmic-footage/conforming-filmic-1.png&#34;
	width=&#34;320&#34;
	height=&#34;568&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;56&#34;
		data-flex-basis=&#34;135px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s interesting to note how minimum and maximum frame rates of the footage, as revealed by MediaInfo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/conforming-filmic-footage/conforming-filmic-2.png&#34;
	width=&#34;598&#34;
	height=&#34;845&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;169px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;one-hop-in-compressor&#34;&gt;&amp;ldquo;One Hop&amp;rdquo; in Compressor
&lt;/h2&gt;&lt;p&gt;Interestingly, &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2019/conforming-livestream-footage/&#34; &gt;unlike Wirecast footage&lt;/a&gt;, I can successfully conform and modify the framerate for FiLMiC files in one pass with Compressor. The conversion is from H.264 (FiLMiC Extreme bitrate) to ProRes 422.&lt;/p&gt;
&lt;p&gt;To do so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Drop the default ProRes preset of your choice&lt;/li&gt;
&lt;li&gt;Set the frame rate from &lt;code&gt;Automatic&lt;/code&gt; (in this case 24) to the required drop frame &lt;code&gt;23.976&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Import the transcoded file into NLE (Final Cut, etc.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2020/conforming-filmic-footage/conforming-filmic-3.png&#34;
	width=&#34;1392&#34;
	height=&#34;1006&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;138&#34;
		data-flex-basis=&#34;332px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;remember-only-compressor&#34;&gt;Remember, Only Compressor
&lt;/h2&gt;&lt;p&gt;Recall &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2019/conforming-livestream-footage/&#34; &gt;don&amp;rsquo;t use EditReady for this&lt;/a&gt;. EditReady isn&amp;rsquo;t designed for conforming since it intentionally just &amp;ldquo;adjusts the playback rate of your media.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;When you shoot video on iOS (including iPhone, iPad and iPod Touch), framerates don’t work the way they do on conventional camcorders, which use CFR (constant frame rate). That’s because iOS video recording uses VFR (variable frame rate) with only approximate targets, not exact framerates. This is true, whether you shoot on iOS with FiLMiC Pro or MoviePro. &lt;a class=&#34;link&#34; href=&#34;https://www.provideocoalition.com/filmic-pro-framerates-vfr-status-workflow-reaffirmed-at-nab-2019/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.provideocoalition.com/filmic-pro-framerates-vfr-status-workflow-reaffirmed-at-nab-2019/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Conforming Livestream Video for NLEs</title>
        <link>http://localhost:1313/post/video/2019/conforming-livestream-footage/</link>
        <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2019/conforming-livestream-footage/</guid>
        <description>&lt;h2 id=&#34;realtime-proxy-editing-via-wirecast&#34;&gt;Realtime Proxy Editing via Wirecast
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;ve recently been experimenting with realtime editing of live events. That way I can speed up turnaround times for multicam edits, especially for 2+ hour events like typical Indian classical dances and concerts.&lt;/p&gt;
&lt;p&gt;The on location setup goes as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two cameras, each recording to SD cards&lt;/li&gt;
&lt;li&gt;Feed the HDMI output of both cameras into Wirecast on a MacBook Pro&lt;/li&gt;
&lt;li&gt;Assign Wirecast keyboard shortcuts to both cameras&lt;/li&gt;
&lt;li&gt;Record to Disk at 480p ProRes 422 to an external USB 3.0 hard drive&lt;/li&gt;
&lt;li&gt;Cut between two cameras using a wireless MIDI controller and Keyboard Maestro (pretty sweet)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then at home, the workflow goes like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use DaVinci Resolve to detect the cuts and output an EDL (edit document list) with the timestamps&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Multicam sync the SD card footage along with the livestream MP4&lt;/li&gt;
&lt;li&gt;Use the EDL to cut between the HD/4K footage, using the livestream angle for reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conforming-variable-frame-rate-footage&#34;&gt;Conforming Variable Frame Rate Footage
&lt;/h2&gt;&lt;p&gt;I was already anticipating conforming the livestream footage before pulling it into the timeline, since Wirecast uses variable frame rates.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What Wirecast does is adjust frame duration so timing remains constant.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the first step is to conform the variable frame rate footage into fixed frame rate footage using Compressor. The ProRes to ProRes conversion is virtually lossless.&lt;/p&gt;
&lt;h2 id=&#34;30p-vs-2997p&#34;&gt;30p vs 29.97p
&lt;/h2&gt;&lt;p&gt;Wirecast&amp;rsquo;s default ProRes settings actually record to 30p. The Sony AX100s however record to 29.97p, our good ol&amp;rsquo; drop frame rate. This means for the same exact duration, the Wirecast file has less frames, which throws off frame precise edit lists.&lt;/p&gt;
&lt;p&gt;The easiest way to solve this would have been to change Wirecast&amp;rsquo;s ProRes preset to actually record at 29.97 fps. However, now the footage I have also needs to &lt;em&gt;change&lt;/em&gt; framerates from 30p to 29.97p.&lt;/p&gt;
&lt;p&gt;The solution? Use Compressor again for a second ProRes to ProRes render, this time from fixed 30p file to fixed 29.97p.&lt;/p&gt;
&lt;h2 id=&#34;double-check-your-work&#34;&gt;Double Check Your Work
&lt;/h2&gt;&lt;p&gt;Pro tip: check the 30p to 29.97p conforming worked correctly by ensuring:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The duration of the clips are the same (otherwise there will be audio sync issues). In my case both were 51 min and 53 sec (using regular QuickTime Player X to verify).&lt;/li&gt;
&lt;li&gt;The number of frames is &lt;em&gt;different&lt;/em&gt; between the two files. The original 30p Wirecast file had 93387 frames and the conformed 29.97p version had less, as expected, 93294.&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;haste-makes-waste&#34;&gt;Haste Makes Waste
&lt;/h2&gt;&lt;p&gt;Couldn&amp;rsquo;t we just use Compressor once and conform the 30p variable fps footage to 29.97 fixed fps footage? The &amp;ldquo;two hop&amp;rdquo; process inevitably recompresses the video twice&amp;hellip;although, again it&amp;rsquo;s ProRes and virtually lossless. (Oh and it&amp;rsquo;s just reference angle, too.)&lt;/p&gt;
&lt;p&gt;Unfortunately, combining the two conforming steps doesn&amp;rsquo;t seem to work. The famous &lt;code&gt;Failed: 3x crash service down&lt;/code&gt; error pops up within a few seconds. In fact my previous self &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/tripodninja/status/1115701921111859200&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tweeted about this error&lt;/a&gt; back in 2018, anticipating it would take me nearly a year to typing a proper writeup.&lt;/p&gt;
&lt;h2 id=&#34;dont-use-editready-for-this&#34;&gt;Don&amp;rsquo;t Use EditReady for This
&lt;/h2&gt;&lt;p&gt;EditReady has a framerate adjustment feature, but is not meant for the above use case. As the &lt;a class=&#34;link&#34; href=&#34;https://www.divergentmedia.com/support/documentation/editready#framerate-adjustment&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;manual&lt;/a&gt; states, the feature intentionally only &amp;ldquo;adjusts the playback rate of your media.&amp;rdquo; That is, EditReady makes all the frames spaced out evenly, even if some were held longer than others. The feature is basically meant for slow motion, etc.&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;In fact, if EditReady were used to adjust from 30p to 29.97p, it would stretch the video longer. The 29.97p file would have the same number of frames as the original 30p but the frames would now play back 0.1% slower.  Indeed when I tried that, the file stretched to to 51 min and 56 sec.&lt;/p&gt;
&lt;p&gt;Interestingly, when both the 30p and 29.97p EditReady exports were pulled into FCP X they claim the original duration of 51 min and 53 sec in the browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/conforming-livestream-footage/conforming-wirecast-1.png&#34;
	width=&#34;967&#34;
	height=&#34;248&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;389&#34;
		data-flex-basis=&#34;935px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;However, when added to a 29.97p multicam sequence with the other actual 29.97 footage, the incorrectly stretched 29.97 file shows up as 51 min and 56 sec!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/conforming-livestream-footage/conforming-wirecast-2.png&#34;
	width=&#34;1168&#34;
	height=&#34;638&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;439px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;So ya, save yourself the headache and conform with Compressor the first time.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Worthy mentioning this &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/tripodninja/status/1115708706300354561&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;tweet&lt;/a&gt; about checking the &lt;strong&gt;timeline frame rate&lt;/strong&gt; in DaVinci Project Settings first before starting scene detection. It can&amp;rsquo;t be changed afterwards.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/conforming-livestream-footage/conforming-wirecast-3.png&#34;
	width=&#34;225&#34;
	height=&#34;173&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;312px&#34;
	
&gt; &lt;!-- raw HTML omitted --&gt; On a side note, DaVinci doesn&amp;rsquo;t use semicolons for indicating 29.97 drop frame timecode. Fascinating and confusing both at the same time.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Forum post by Craig at Telestream. &lt;em&gt;Frame rate instability and dropped frames when recording to disk&lt;/em&gt; (scroll all the way to the end) &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=5468&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=5468&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;The frame count can be calculated from the command line using &lt;code&gt;ffprobe -v error -select_streams v:0 -show_entries stream=nb_frames -of default=nokey=1:noprint_wrappers=1 [VIDEO.MP4]&lt;/code&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.digitalrebellion.com/cineplay/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CinePlay&lt;/a&gt; and other GUIs can display the frame count as well. Special thanks to: &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/2017843/fetch-frame-count-with-ffmpeg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/2017843/fetch-frame-count-with-ffmpeg&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;Compressor instead should actually redraw/retime the footage. See this support thread with Colin from Divergent Media for more info &lt;a class=&#34;link&#34; href=&#34;https://divergentmedia.zendesk.com/hc/en-us/community/posts/360033207774-Conforming-variable-frame-rate-footage-best-practice&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://divergentmedia.zendesk.com/hc/en-us/community/posts/360033207774-Conforming-variable-frame-rate-footage-best-practice&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Adjusting Date and Time on Mac Photos Exports</title>
        <link>http://localhost:1313/post/video/2019/mac-photos-timestamps/</link>
        <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2019/mac-photos-timestamps/</guid>
        <description>&lt;h2 id=&#34;mac-photos-export-fail&#34;&gt;Mac Photos Export Fail
&lt;/h2&gt;&lt;p&gt;Maybe I&amp;rsquo;m too used to &lt;a class=&#34;link&#34; href=&#34;https://www.atlassian.com/git/tutorials/rewriting-history&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rewriting history in Git&lt;/a&gt;, but sometimes I modify the create date of my pictures and videos. Metadata.&lt;/p&gt;
&lt;p&gt;In any case, by doing this when an album is sorted chronologically, everything appears in order. I like that idea of everything organized neatly by time a lot, because that way an album&amp;rsquo;s story flows well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-1.png&#34;
	width=&#34;607&#34;
	height=&#34;567&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;107&#34;
		data-flex-basis=&#34;256px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The trouble is, when these pictures and videos are exported from Photos, re-importing them doesn&amp;rsquo;t necessarily pickup the change. This is true even when roundtripping with another Mac Photos album, let alone something like Google Photos or Flickr! How bizzare is that?&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a picture of the pre-export album.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-2.png&#34;
	width=&#34;1218&#34;
	height=&#34;754&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;161&#34;
		data-flex-basis=&#34;387px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a snap of the re-imported album, also sorted by Oldest First. Everything in red is not in the right place. The pictures are in their original pre-modification locations, and all videos have been shifted to current timestamp—year 2019!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-3.png&#34;
	width=&#34;1215&#34;
	height=&#34;758&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;For the record, I&amp;rsquo;m using Mac Photos version 3.0 and here are the settings used during export.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-4.png&#34;
	width=&#34;599&#34;
	height=&#34;318&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-5.png&#34;
	width=&#34;541&#34;
	height=&#34;336&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;161&#34;
		data-flex-basis=&#34;386px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;So what&amp;rsquo;s going on?&lt;/p&gt;
&lt;h2 id=&#34;exiftool-detective-work&#34;&gt;Exiftool Detective Work
&lt;/h2&gt;&lt;p&gt;Using &lt;code&gt;exiftool&lt;/code&gt; it appears the photos did have their adjusted timestamp written but not to all fields. Here&amp;rsquo;s the printout from the first misordered photo.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ exiftool IMG_3422.jpg | grep 201
File Modification Date/Time     : 2019:06:30 07:09:07-04:00
File Access Date/Time           : 2019:06:30 07:30:07-04:00
File Inode Change Date/Time     : 2019:06:30 07:11:15-04:00
Modify Date                     : 2017:07:01 11:35:00
Date/Time Original              : 2017:07:01 11:13:49
Create Date                     : 2017:07:01 11:13:49
Date Created                    : 2017:07:01
Digital Creation Date           : 2017:07:01
Date/Time Created               : 2017:07:01 11:13:49
Digital Creation Date/Time      : 2017:07:01 11:13:49
Create Date                     : 2017:07:01 11:13:49.785
Date/Time Original              : 2017:07:01 11:13:49.785
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The tag &lt;code&gt;Modify Date&lt;/code&gt; has our changes.&lt;/p&gt;
&lt;p&gt;As for the videos, everything gets changed to the current timestamp except &lt;code&gt;Content Create Date&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ exiftool IMG_3453.m4v | grep 201
File Modification Date/Time     : 2019:06:30 07:10:49-04:00
File Access Date/Time           : 2019:06:30 07:35:20-04:00
File Inode Change Date/Time     : 2019:06:30 07:11:15-04:00
Create Date                     : 2019:06:30 11:10:47
Modify Date                     : 2019:06:30 11:10:48
Track Create Date               : 2019:06:30 11:10:47
Track Modify Date               : 2019:06:30 11:10:48
Media Create Date               : 2019:06:30 11:10:47
Media Modify Date               : 2019:06:30 11:10:48
Content Create Date             : 2017:07:01 13:16:35-04:00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Maybe &lt;code&gt;Content Create Date&lt;/code&gt; is it? Nope. Even if the year is changed on the same file and re-exported, the &lt;code&gt;Content Create Date&lt;/code&gt; doesn&amp;rsquo;t change! (Also it looks like the tag isn&amp;rsquo;t present on videos not shot from an iPhone.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ exiftool IMG_3453\ \(1\).m4v | grep 201
File Modification Date/Time     : 2019:06:30 07:37:00-04:00
File Access Date/Time           : 2019:06:30 07:37:00-04:00
File Inode Change Date/Time     : 2019:06:30 07:37:00-04:00
Create Date                     : 2019:06:30 11:36:59
Modify Date                     : 2019:06:30 11:37:00
Track Create Date               : 2019:06:30 11:36:59
Track Modify Date               : 2019:06:30 11:37:00
Media Create Date               : 2019:06:30 11:36:59
Media Modify Date               : 2019:06:30 11:37:00
Content Create Date             : 2017:07:01 13:16:35-04:00
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;repair-commands&#34;&gt;Repair Commands
&lt;/h2&gt;&lt;p&gt;The remedy? Use &lt;code&gt;Modify Date&lt;/code&gt; tag to rewrite the &lt;code&gt;Date/Time Original&lt;/code&gt; for photos, first. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ exiftool &amp;#34;-exif:DateTimeOriginal&amp;lt;Modifydate&amp;#34; &amp;lt;pictures&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For videos, unfortunately the script must be manual since the timestamp was lost during export. Note that video timestamps must be GMT&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, so I&amp;rsquo;m adjusting four hours for EDT.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# for videos all times must be GMT zero
$ exiftool -AllDates=&amp;#39;2017:07:01 15:37:30&amp;#39; &amp;lt;video1&amp;gt; \
	&amp;amp; exiftool -AllDates=&amp;#39;2017:07:01 16:08:28&amp;#39; &amp;lt;video2&amp;gt; \
	&amp;amp; exiftool -AllDates=&amp;#39;2017:07:01 16:43:29&amp;#39; &amp;lt;video3&amp;gt; \
	...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There was one picture that was strangely troublesome even after this, probably an internal Photos library problem. For that guy I adjusted the time again in the new Photos album, exported it, ran the &lt;code&gt;exiftool&lt;/code&gt; command again, and pulled it into the new album to fix it.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;In general when rewriting timestamps of an album, I try my best to not modify video timestamps. Instead, move the pictures around and then run the bulk command for photos since videos are a manual process.&lt;/p&gt;
&lt;p&gt;P.S. Oh by the way, if you&amp;rsquo;re curious what that Sound Isolation Booth was&amp;hellip; check out the published album here on &lt;a class=&#34;link&#34; href=&#34;https://www.flickr.com/photos/143865512@N03/albums/72157709327467226&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Flickr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/mac-photos-timestamps/mac-photos-6.png&#34;
	width=&#34;1104&#34;
	height=&#34;639&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;172&#34;
		data-flex-basis=&#34;414px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Exiftool syntax modified from &lt;a class=&#34;link&#34; href=&#34;http://u88.n24.queensu.ca/exiftool/forum/index.php/topic,8349.msg42878.html#msg42878&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://u88.n24.queensu.ca/exiftool/forum/index.php/topic,8349.msg42878.html#msg42878&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Forum post on &lt;em&gt;Changing Time Zone for Video&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;http://u88.n24.queensu.ca/exiftool/forum/index.php?topic=8081.0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://u88.n24.queensu.ca/exiftool/forum/index.php?topic=8081.0&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Using RenderGarden to Multithread After Effects Exports</title>
        <link>http://localhost:1313/post/video/2019/tips-for-using-rendergarden/</link>
        <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2019/tips-for-using-rendergarden/</guid>
        <description>&lt;h2 id=&#34;intro&#34;&gt;Intro
&lt;/h2&gt;&lt;p&gt;Recently, I found myself deinterlacing footage from two Blu-ray discs using some Red Giant After Effects plugins&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The two compositions were HD 1080 59.94i files&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, 51 minutes and 94 minutes each. My jaw dropped when I saw the estimated time for just the first file start at 50 hours, and keep increase. Plenty of CPU was still available on the machine&amp;hellip;&lt;/p&gt;
&lt;p&gt;That got me searching for a way to multithread After Effects renders.&lt;/p&gt;
&lt;h2 id=&#34;hello-rendergarden&#34;&gt;Hello RenderGarden
&lt;/h2&gt;&lt;p&gt;RenderGarden by Mekajiki is a neat way to chunk and multithread renders from After Effects. It invokes &lt;code&gt;aerender&lt;/code&gt; which is a headless way of running After Effects. It costs $99 and comes with a 7 day trial.&lt;/p&gt;
&lt;p&gt;In my case I had two computers (the MacBook Pro and the iMac) with the project files accessible via a Synology NAS. I installed After Effects on both machines and procured a render-only license from Red Giant via email (less than one business day) to use the iMac as a headless render node.&lt;/p&gt;
&lt;h2 id=&#34;things-to-keep-in-mind-&#34;&gt;Things to Keep in Mind 🌼
&lt;/h2&gt;&lt;p&gt;RenderGarden&amp;rsquo;s getting started videos are quite helpful&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; and got me up and running in less than an hour. Here is a summary of some things I additionally learned from experience.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;seed is an atomic unit&lt;/strong&gt; of work. The number of seeds a composition is broken up into is set when generating the script files from After Effects. It cannot be changed afterwards.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cancelled renders&lt;/strong&gt; that are later re-seeded/restarted &lt;strong&gt;do not pickup from where they left off&lt;/strong&gt;. The file segment is overwritten and starts over from the beginning (the log file is appended to though).&lt;/li&gt;
&lt;li&gt;Having the &lt;strong&gt;Recycle Bin feature on the Synology&lt;/strong&gt; is helpful in the event of recovering accidentally deleted segments.&lt;/li&gt;
&lt;li&gt;If the &lt;strong&gt;Launch Gardener window&lt;/strong&gt; doesn&amp;rsquo;t appear after launching the app, it is &lt;strong&gt;probably hidden behind other windows&lt;/strong&gt;. Use Expose to reveal it, or click on the Python launcher in the dock. &lt;!-- raw HTML omitted --&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-2.png&#34;
	width=&#34;156&#34;
	height=&#34;84&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;185&#34;
		data-flex-basis=&#34;445px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;The Launch Gardener window has &lt;strong&gt;four types of Gardener nodes&lt;/strong&gt;.  &lt;!-- raw HTML omitted --&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-1.png&#34;
	width=&#34;493&#34;
	height=&#34;260&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;189&#34;
		data-flex-basis=&#34;455px&#34;
	
&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;ae&lt;/code&gt; node type is for actually running After Effects &lt;code&gt;aerender&lt;/code&gt; in the background.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ffmpeg&lt;/code&gt; node type is only used for post-processing conversion to H.264, etc. and the &lt;code&gt;combine&lt;/code&gt; node is to combine segments together. This was slightly confusing at first because RenderGarden technically also uses FFmpeg to stitch movie segments together, as noted in the documentation.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;notify&lt;/code&gt; node type is for some type of notification system, which I didn&amp;rsquo;t use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The folder that you select for the &lt;code&gt;ae&lt;/code&gt; node is essentially &lt;strong&gt;the Gardener watch folder&lt;/strong&gt;. It will continually scan it for work, and it can either be the parent RenderGarden folder or that of an individual composition.&lt;/li&gt;
&lt;li&gt;I find it good practice to only launch &lt;code&gt;ae&lt;/code&gt; type nodes and wait for them all to complete before running &lt;code&gt;combine&lt;/code&gt; nodes. That way I can &lt;strong&gt;inspect logs and file sizes and preview the segments for issues before combining&lt;/strong&gt; them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;For network machines&lt;/strong&gt; only running Gardener nodes, &lt;strong&gt;licensing After Effects is usually not necessary&lt;/strong&gt;. As long as the composition and render are not using proprietary codecs first like MPEG-2 or AC3 audio &lt;code&gt;aerender&lt;/code&gt; will run on the network node and the Adobe login is only needed on the primary machine. Double check the full list of formats first on this &lt;a class=&#34;link&#34; href=&#34;https://blogs.adobe.com/creativecloud/codecs-and-the-render-engine-in-after-effects-cs6/?segment=dva&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adobe blog post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;performance-benchmarks&#34;&gt;Performance Benchmarks
&lt;/h2&gt;&lt;p&gt;Since I was running renders on both the MacBook Pro (MBP) as well as the iMac, I was curious how the two would compare in terms of speed and CPU usuage. Both compositions (A and B) where seeded to eight segments.&lt;/p&gt;
&lt;p&gt;The following table is sorted by End Time ascending. As you can see both the Quad Core iMac i5 and Quad Core MBP i7 have an ideal throughput of roughly 20 frames/minute.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Comp&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Seed&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Machine&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Frames   Start&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Frames   End&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Num   Frames&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Elapsed   Mins&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Frames/Min&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;End   Time&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Graceful   End&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11508&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;570&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;20.19122807&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 1:14&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;34528&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;46037&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11510&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;831&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13.85078219&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 5:35&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;46038&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;57546&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;824&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13.96723301&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 5:38&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;23019&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;34527&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;833&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13.81632653&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 5:39&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;23018&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11510&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;847&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13.58913813&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 5:52&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;57547&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;69055&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;798&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14.42230576&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 14:37&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;8&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;80566&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;92074&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;794&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14.49496222&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 18:55&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;69056&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;80565&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11510&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;817&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14.08812729&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/5/19 19:17&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;iMac&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;42560&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;63839&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1024&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;20.78125&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/6/19 5:34&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;63840&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;85119&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1498&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14.20560748&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/7/19 1:43&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;8&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;148960&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;170239&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1575&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;13.51111111&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/7/19 3:01&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;23018&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11510&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;610&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;18.86885246&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/8/19 22:13&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;42559&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1087&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;19.57681693&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/9/19 4:43&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FALSE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21279&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1104&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;19.27536232&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/9/19 4:59&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FALSE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;23019&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;34527&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;565&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;20.3699115&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/9/19 7:39&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FALSE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11508&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;11509&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;644&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;17.87111801&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/9/19 21:09&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;iMac&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;127680&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;148959&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;998&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21.32264529&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/10/19 3:11&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TRUE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;85120&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;106399&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1021&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;20.84231146&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/10/19 3:25&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FALSE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;MBP&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;106400&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;127679&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;21280&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1082&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;19.66728281&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;4/10/19 4:27&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FALSE&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What are &amp;ldquo;Graceful&amp;rdquo; renders? Read on&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;some-idle-cpu-is-good&#34;&gt;Some Idle CPU is Good
&lt;/h3&gt;&lt;p&gt;I initially started with the RenderGarden recommendation of no more Gardeners than the number of physical cores&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, which is a maximum of four on each machines.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-5-mbp.png&#34;
	width=&#34;1680&#34;
	height=&#34;370&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;454&#34;
		data-flex-basis=&#34;1089px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;However I saw via iStat Menus that the MacBook Pro had still roughly 20% idle CPU, so I added an additional fifth node&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-6-mbp.png&#34;
	width=&#34;1680&#34;
	height=&#34;370&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;454&#34;
		data-flex-basis=&#34;1089px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Sure enough, the idle CPU was now less than 10%. However, as the table showed above, doing so dropped the throughput drops to 13 frames/minute, which even with five processes is &lt;code&gt;100 - (13*5)/(20*4) =&lt;/code&gt; 20 percent slower. I later went back to three-four nodes max, and the throughput stabilized to 20 frames/minute.&lt;/p&gt;
&lt;h3 id=&#34;imac-i5-vs-macbook-pro-i7&#34;&gt;iMac i5 vs MacBook Pro i7
&lt;/h3&gt;&lt;p&gt;To my delight, the iMac&amp;rsquo;s older i5 processor was more than enough to keep pace with the MacBook Pro&amp;rsquo;s i7. With two render nodes, it happily hummed along with comparable CPU usage. The time per frame as you can see is also about the same (two to three seconds each).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-7-imac.png&#34;
	width=&#34;1287&#34;
	height=&#34;875&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;353px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Complete specs of each machine are listed on the &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/gear/&#34; &gt;Gear&lt;/a&gt; page.&lt;/p&gt;
&lt;h2 id=&#34;adobe-licensing-user-error&#34;&gt;Adobe Licensing User Error
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Shout out to the folks at Mekajiki who even reached out to Adobe to help root cause this issue. Now that&amp;rsquo;s customer support!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The log file for a successful &lt;code&gt;ae&lt;/code&gt; segment render looks like the following.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PROGRESS:  1;34;40;09 (21280): 0 Seconds
PROGRESS:  1;34;40;09 (21280): 1 Seconds
PROGRESS:  4/7/19 3:01:44 AM EDT: Finished composition 00003 (30p).



PROGRESS:  Total Time Elapsed: 26 Hr, 15 Min
aerender version 16.1x204
PROGRESS: Launching After Effects...
PROGRESS: ...After Effects successfully launched

RENDER COMPLETE
2019-04-07 09:03:01.130557

RenderGarden end 2019-04-07 09:03:01
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The un-graceful renders however would also complete with &lt;code&gt;Finished composition&lt;/code&gt;, but nothing else would be written. The Terminal window would just stay there without writing &lt;code&gt;Total Time Elapsed ... RENDER COMPLETE ...&lt;/code&gt; etc. On some rare occassions, the filename also didn&amp;rsquo;t rename from &lt;code&gt;rendering_&lt;/code&gt; to &lt;code&gt;complete_&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I started to see these strange popup windows on the MBP but didn&amp;rsquo;t know what they meant at first.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-3.png&#34;
	width=&#34;884&#34;
	height=&#34;706&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;300px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It took me a while to realize this was because I never verified my email with by Adobe! If you notice from the table before, the ungraceful completions were (1) only on the main MacBook Pro which needed to be licensed and (2) only occured towards the end, probably when the check was failing. Opening up the actual After Effects program displayed the following prompt.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2019/tips-for-using-rendergarden/rendergarden-4.png&#34;
	width=&#34;896&#34;
	height=&#34;720&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;298px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In either case, the actual segement completed. If you encounter this situation, &lt;strong&gt;before issuing CTRL+C&lt;/strong&gt; to &amp;ldquo;gracefully&amp;rdquo; exit RenderGarden Terminal window, &lt;strong&gt;check if the file needs to be renamed&lt;/strong&gt; to &lt;code&gt;complete_&lt;/code&gt; first. Otherwise another free node may overwrite the actually completed segment.&lt;/p&gt;
&lt;p&gt;Basically, make sure you verify your email with Adobe first or you&amp;rsquo;ll be a newb like me.&lt;/p&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts
&lt;/h2&gt;&lt;p&gt;RenderGarden is amazing. If you&amp;rsquo;re planning to use After Effects for a long render, definitely check it out and procure render-only licenses for any plugins you&amp;rsquo;ll be using on the network.&lt;/p&gt;
&lt;p&gt;If it&amp;rsquo;s your first time, I suggest manually verify/scrub segments for proper length and sync issues before running &lt;code&gt;combine&lt;/code&gt; nodes.&lt;/p&gt;
&lt;p&gt;Happy gardening! 🌱&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;In particular, I used Red Giant&amp;rsquo;s Deinterlace plugin and the Deartificater plugin, the latter of which really increases render time.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Yes, interlaced H.264 is a thing. See &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Blu-ray#Video&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Blu-ray#Video&lt;/a&gt; for the full list of supported rates. The footage was from a dance recital, and 1080p is only possible at 24 fps. The original authors probably captured it at the higher frame rate for smoother motion.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Quick Start and Submitting a Render were the two main important videos I watched. &lt;a class=&#34;link&#34; href=&#34;https://www.mekajiki.com/rendergarden/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.mekajiki.com/rendergarden/tutorials/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Is there a formula to decide the best ratio of CPU cores to Seeds and Gardeners? &lt;a class=&#34;link&#34; href=&#34;https://www.mekajiki.com/rendergarden/faq/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.mekajiki.com/rendergarden/faq/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>The Quest for Media Management</title>
        <link>http://localhost:1313/post/video/2018/quest-for-media-management/</link>
        <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2018/quest-for-media-management/</guid>
        <description>&lt;h2 id=&#34;the-dream&#34;&gt;The Dream
&lt;/h2&gt;&lt;p&gt;With over twenty years of Indian classical music concert footage, I&amp;rsquo;ve always dreamt of tagging each file by raga, tala, artist, audio quality, etc. to quickly pull up footage based on smart bins. Looking for Śivarañjanī? No problem. Dhrupad? Got that too. How about all files that need audio synced up? Coming right up.&lt;/p&gt;
&lt;p&gt;Yup, the dream.&lt;/p&gt;
&lt;h2 id=&#34;a-guiding-principle&#34;&gt;A Guiding Principle
&lt;/h2&gt;&lt;p&gt;Great words from a &lt;a class=&#34;link&#34; href=&#34;https://forums.creativecow.net/thread/335/26646&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2012 discussion about media managment on Creative Cow&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The more effort you put into a MAM (media asset manager), the more value it has to your organization—and the more dependent you become upon it. If you can&amp;rsquo;t move your metadata freely in and out of a product, you are tying yourself to it. The more data you put in, the more expensive and painful it becomes to transition.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re still in the early days of metadata for media, so I think these standards are only just beginning to emerge.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is there a solution worth investing in which still leaves one&amp;rsquo;s workflow open and flexible?&lt;/p&gt;
&lt;h2 id=&#34;two-metadata-philosophies&#34;&gt;Two Metadata Philosophies
&lt;/h2&gt;&lt;p&gt;There are two approaches when tagging footage: library-based managers that tag reference footage in a catalog vs. file browser-based solutions that write metadata next to the originals as text files.&lt;/p&gt;
&lt;p&gt;Kyno, a file browser-based program, articulates this difference really well in their FAQ.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; With sidecar programs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; there is not really a concept of &amp;ldquo;inside&amp;rdquo; or &amp;ldquo;outside&amp;rdquo;&amp;hellip; which also means there is no global search of all content&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;proscons&#34;&gt;Pros/Cons
&lt;/h3&gt;&lt;p&gt;Here are the pros/cons of the two approaches.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Library-based management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Global search of all content&lt;/li&gt;
&lt;li&gt;Tag/search metadata even when footage is offline&lt;/li&gt;
&lt;li&gt;Catalog cloud footage before upload&lt;/li&gt;
&lt;li&gt;Use the catalog to download just the files you want, to save on bandwidth costs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;File-based management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Depends on files being present locally&lt;/li&gt;
&lt;li&gt;Metadata is easier to share/backup (plaintext files are compatible on all systems)&lt;/li&gt;
&lt;li&gt;Sidecar content can also be searched via regular file searches&lt;/li&gt;
&lt;li&gt;No concept of &amp;ldquo;global searches&amp;rdquo; because the application does not itself store metadata&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;whats-right-for-me&#34;&gt;What&amp;rsquo;s right for me?
&lt;/h3&gt;&lt;p&gt;In my mind, file-based management seems best suited for preparing an edit. It is perfect for working with local drives, NAS drives, and even tagging footage while it&amp;rsquo;s still on SD cards.&lt;/p&gt;
&lt;p&gt;As a cloud storage user and road warrior, I however want to have the ability to find footage when it&amp;rsquo;s not on my local machine and present it to stakeholders. The ability to browse and tag footage that is offline/in the cloud makes &lt;strong&gt;library-based management&lt;/strong&gt; exactly what I&amp;rsquo;m looking for.&lt;/p&gt;
&lt;p&gt;Your use case may vary, so the best programs of both types will still be considered below.&lt;/p&gt;
&lt;h2 id=&#34;two-kids-on-the-block&#34;&gt;Two Kids on the Block
&lt;/h2&gt;&lt;h3 id=&#34;kyno-file-based&#34;&gt;Kyno (File-based)
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://lesspain.software/kyno/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kyno&lt;/a&gt; is a really beautiful metadata tagging program. It writes all its metadata to JSON files hidden in the same folder as the original asset. The UI is a refreshing change from Adobe Bridge, and is PC/Mac compatible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/kyno-screenshot.png&#34;
	width=&#34;995&#34;
	height=&#34;401&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Kyno UI&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Kyno is in active development and bundles many features that are helpful for preparing an edit like transcoding, batch timecode changes, and so on. In that sense, Kyno could be a formidable replacement replacement your current offloading workflow.&lt;/p&gt;
&lt;p&gt;Kyno doesn&amp;rsquo;t lock its metadata inside itself offers FCP X and Premiere exports. The advanced version will also export to Excel, etc.&lt;/p&gt;
&lt;p&gt;Kyno&amp;rsquo;s pricing starts at $159. There is no subscription, but after 1 year you have you pay for another year of software updates.&lt;/p&gt;
&lt;h3 id=&#34;keyflow-pro-catalog-based&#34;&gt;KeyFlow Pro (Catalog-based)
&lt;/h3&gt;&lt;p&gt;KeyFlow Pro blew me out of the water. It definitely seems like a more-mature sibling of Kyno, and is particularly Mac-centric supporting popular NLE exports.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clean and modern interface, indicates active product development. It&amp;rsquo;s received a lot of critical acclaim too.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Roundtrips with FCP X like a boss. &lt;em&gt;Drag and drop from KeyFlow to FCP X and back.&lt;/em&gt; &lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/metadata-keyflowpro-1.png&#34;
	width=&#34;626&#34;
	height=&#34;334&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;KeyFlow Pro&amp;rsquo;s Integration with FCP X&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;For the Adobe folks, it supports Premiere exports. It can open FCP X libraries directly too.&lt;/li&gt;
&lt;li&gt;Subtitle import with SRT &lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/metadata-keyflowpro-2.png&#34;
	width=&#34;675&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;KeyFlow Pro&amp;rsquo;s Integration with FCP X&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;432px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Generate proxy footage so you can take low res version of video files on the road!
&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/keyflowpro-encoder-options.png&#34;
	width=&#34;706&#34;
	height=&#34;316&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;KeyFlow Pro Encoder Options&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;223&#34;
		data-flex-basis=&#34;536px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KeyFlow Pro 2&amp;rsquo;s pricing model is really attractive at $50 on the Mac App Store. In-App Purchases for client/server collaboration more, but since I&amp;rsquo;m a single user I would simply park the library file on Dropbox and let it sync that way across my machines.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;KeyFlow Pro 2&lt;/strong&gt; is now part of my software team, and I can&amp;rsquo;t wait to use it more and more. It has a lot of features for the price, and I feel like I&amp;rsquo;m just beginning to scratch the surface of what it can do. Their documentation isn&amp;rsquo;t always super polished (grammatical mistakes/typos, for example) but that&amp;rsquo;s something I will live with.&lt;/p&gt;
&lt;p&gt;Time will tell if a file-based solution like Kyno will also find a place.&lt;/p&gt;
&lt;h2 id=&#34;appendix&#34;&gt;Appendix
&lt;/h2&gt;&lt;p&gt;Here are some first attempts reviewing various other metadata management programs, aka the &amp;ldquo;No Thanks List.&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;nles&#34;&gt;NLEs
&lt;/h3&gt;&lt;p&gt;Sometimes, I&amp;rsquo;ve found people advocate using editing programs&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; for their media management as well. I find this to be too limiting for a few reasons.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/fcpx-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;FCP X Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FCP X&lt;/strong&gt;, for example, has undergone many iterations since its original 64-bit debut, and the support for multiple libraries in 10.1&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt; was a real game changer for organizing footage. Yet, FCP X isn&amp;rsquo;t ideal for media management.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The layout of FCP X seems optimized for editing, rather than cataloguing media. While the Organize workspace is nice (^⇧1) I still find there is a lot of wasted screen space. Also, as soon as the clip width is increased (to see/add markers, etc.) it becomes very difficult to see other clips!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Metadata is difficult to export outside of FCP X.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Risk of accidentally modifying old projects! Projects cannot be locked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There&amp;rsquo;s only one window for all libraries. Since previously-open libraries reappear on launch, closing and reopening them to keep content relevant is a little tedious.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/davinci-resolve-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;DaVinci Resolve Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DaVinci Resolve&lt;/strong&gt; suffers from similar limitations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metadata is locked within the program until export.&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:9&#34;&gt;&lt;a href=&#34;#fn:9&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Metadata is exported as CSV files.&lt;/li&gt;
&lt;li&gt;Relinking media does not recursively search in folders for matches, which makes moving footage between drives extremely difficult.&lt;/li&gt;
&lt;li&gt;Does not allow for manual relinking to renamed files (unlike FCP X).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, I find NLEs best for organizing metadata when working on a specific deliverable, but not for providing a landscape of one&amp;rsquo;s total media assets.&lt;/p&gt;
&lt;h3 id=&#34;bulletproof-catalog-based&#34;&gt;BulletProof (Catalog-based)
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/red-giant-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Red Giant Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;BulletProof was once a shiny new app from Red Giant. Red Giant makes awesome software and plugins, and I&amp;rsquo;m a heavy user of their &lt;a class=&#34;link&#34; href=&#34;https://www.redgiant.com/products/shooter-suite/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shooter Suite&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;BulletProof however was only designed for offloading footage from cards and did not support linking to reference media. Terabytes of existing footage on network drives can&amp;rsquo;t really be copied somewhere else.&lt;/p&gt;
&lt;p&gt;It also had some video playback issues and lacked the ability of &lt;em&gt;relinking&lt;/em&gt; files in the catalog. Makes it difficult to move media to different folders/drives. No support for smart bins either.&lt;/p&gt;
&lt;p&gt;As of June 8, 2015 (v12.7.0 of the Shooter Suite), the application is retired, [due to lack of public interest](&lt;a class=&#34;link&#34; href=&#34;https://www.redgiant.com/products/shooter-suite/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.redgiant.com/products/shooter-suite/downloads/&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;http://www.provideocoalition.com/fare-thee-well-red-giant-bulletproof%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.provideocoalition.com/fare-thee-well-red-giant-bulletproof)&lt;/a&gt;. It basically seems like it was whittled down into Offload, which is still part of the Suite. RIP.&lt;/p&gt;
&lt;h3 id=&#34;adobe-bridge-file-based&#34;&gt;Adobe Bridge (File-based)
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/adobe-bridge-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Adobe Prelude Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Adobe Bridge is a file browser with XMP metadata tagging capabilities. Bridge was really attractive financially, since it is completely free for life.&lt;sup id=&#34;fnref:10&#34;&gt;&lt;a href=&#34;#fn:10&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;10&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Bridge &lt;strong&gt;fails for making destructive edits to MOV files&lt;/strong&gt; by embedding XMP metadata inside the container, among other formats. See below how the checksum of the file changes after a tag is applied.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/metadata-adobe-bridge.gif&#34;
	width=&#34;836&#34;
	height=&#34;802&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Checksum of video file changes after Adobe Bridge writes embedded XMP metadata&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;104&#34;
		data-flex-basis=&#34;250px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;While &lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/&#34; &gt;FCP X is unaffected by these embedded XMP changes&lt;/a&gt;&lt;/strong&gt;, modification of the original asset throws a major wrench in any kind of NAS/cloud archival strategy. Any type of resync will unneccessarily rewrite GBs of data for a few KB of metadata.&lt;/p&gt;
&lt;p&gt;XMP sidecars are also difficult to import into FCP X, so Bridge stays within the Adobe ecosystem. Let&amp;rsquo;s find another program.&lt;/p&gt;
&lt;h3 id=&#34;adobe-prelude-catalogfile-hybrid&#34;&gt;Adobe Prelude (Catalog/File hybrid)
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/adobe-prelude-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Adobe Prelude Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Prelude is a particularly curious application. Like Adobe Bridge, its fatal flaw is that it &lt;strong&gt;writes XMP metadata &lt;em&gt;inside&lt;/em&gt; MOV containers&lt;/strong&gt;, and this cannot be changed.&lt;sup id=&#34;fnref:11&#34;&gt;&lt;a href=&#34;#fn:11&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;11&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:12&#34;&gt;&lt;a href=&#34;#fn:12&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;12&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:13&#34;&gt;&lt;a href=&#34;#fn:13&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;13&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:14&#34;&gt;&lt;a href=&#34;#fn:14&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;14&lt;/a&gt;&lt;/sup&gt; Also note the &amp;ldquo;Write XMP ID to Files On Import&amp;rdquo; option does not have any bearing on this behavior.&lt;sup id=&#34;fnref:15&#34;&gt;&lt;a href=&#34;#fn:15&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;15&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Prelude also has the concept of projects, so each project is like a catalog. However, the project itself doesn&amp;rsquo;t store any metadata—it needs to read the XMP inside/beside each file to do so! Thus, Prelude needs all files at loading.&lt;/p&gt;
&lt;p&gt;Prelude is essentially like a poor man&amp;rsquo;s Premiere with some metadata features built-in. So long, farewell.&lt;/p&gt;
&lt;h3 id=&#34;hedge-file-based&#34;&gt;Hedge (File-based)
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/hedge-logo.png&#34;
	width=&#34;83&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hedge Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;265px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Hedge is a modern, media offloading application. Its polished UI is really beautiful.&lt;/p&gt;
&lt;p&gt;Hedge has the ability to write MHL metadata files on export (inspired by Silverstack). It does not have a browser for viewing footage, however, it does come with a &lt;a class=&#34;link&#34; href=&#34;https://medium.hedgeformac.com/why-we-need-a-sidecar-for-offloads-4c5d2c783d5d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spotlight plugin that will read the MHL&lt;/a&gt; plaintext files for searching metadata.&lt;/p&gt;
&lt;p&gt;Hedge&amp;rsquo;s main limitation as a media manager is it only tags media it imports and &lt;strong&gt;cannot tag existing footage&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;silverstack-catalog-based&#34;&gt;Silverstack (Catalog-based)
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://pomfort.com/silverstack/overview.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Silverstack&lt;/a&gt; by Pomfort is a swiss-army knife for media management and &lt;em&gt;markets&lt;/em&gt; itself as that. It however fell short for a few reasons.&lt;/p&gt;
&lt;p&gt;Silverstack provides checksum-based card offloading, ProRes transcoding, and other features like audio syncing, report genreation, and so on. Like Kyno, it&amp;rsquo;s the combination of many programs put together.&lt;/p&gt;
&lt;p&gt;The sheer number of formats Silverstack exports is mind boggling (see them in the GIF below). They definitely seem to be targeting professional broadcasting stations and major feature films. It&amp;rsquo;s really nice how the trial allows you to download a sample library with media assets pre-populated.&lt;/p&gt;
&lt;p&gt;Silverstack dropped the ball for me when it &lt;strong&gt;did not export its tags as FCP X keywords&lt;/strong&gt;. The program exports metadata like camera and labels to FCP X, but not tags—hopefully yet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/metadata-silverstack-export.gif&#34;
	width=&#34;1276&#34;
	height=&#34;877&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Exporting FCP XML with Silverstack&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s alright for me, since their yearly subscription starts at $399. 🤤&lt;/p&gt;
&lt;h3 id=&#34;tagspaces-file-based&#34;&gt;TagSpaces (File-based)
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/quest-for-media-management/tagspaces-logo.png&#34;
	width=&#34;75&#34;
	height=&#34;75&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;TagSpaces Logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.tagspaces.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TagSpaces&lt;/a&gt; is an open-source, cross-platform tagging program. It&amp;rsquo;s not particularly meant for video, but for tagging any kind of file in general.&lt;/p&gt;
&lt;p&gt;The UI is implemented in JavaScript and HTML5 and has special modes for previewing video and pictures. The metadata by default is appended to the filename, but the PRO version writes to &lt;a class=&#34;link&#34; href=&#34;https://www.tagspaces.org/products/pro/#tagSidecarSaving&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sidecar files&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TagSpaces could be a really interesting competitor to Kyno, granted it may take some work to get it setup. It fell off the list, however, since it &lt;strong&gt;currently has no means of exporting its metadata&lt;/strong&gt; to FCP X or Premiere. Maybe someone will contribute that feature one day as an extension, though it seems unlikely.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[This article was originally drafted in January 2016. As you can see, it has been quite a quest&amp;hellip;]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Explanation of Kyno&amp;rsquo;s role as a media management system &lt;a class=&#34;link&#34; href=&#34;https://lesspain.software/kyno/pages/faq/is-kyno-a-media-asset-management-system&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://lesspain.software/kyno/pages/faq/is-kyno-a-media-asset-management-system&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;KeyFlow Pro 2 review, April 2018 &lt;a class=&#34;link&#34; href=&#34;https://visualsproducer.wordpress.com/2018/04/23/keyflow-pro-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://visualsproducer.wordpress.com/2018/04/23/keyflow-pro-2/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Small Workgroup Asset Management Using KeyFlow Pro, June 2017 &lt;a class=&#34;link&#34; href=&#34;https://www.provideocoalition.com/matt-geller-small-workgroup-asset-management-using-keyflow-pro/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.provideocoalition.com/matt-geller-small-workgroup-asset-management-using-keyflow-pro/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;First Look: KeyFlow Pro v1.8 by Larry Jordan, June 2017 &lt;a class=&#34;link&#34; href=&#34;https://larryjordan.com/articles/first-look-keyflow-pro-v1-8/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://larryjordan.com/articles/first-look-keyflow-pro-v1-8/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;Edit Faster and More Efficiently with FCPX’s Metadata &lt;a class=&#34;link&#34; href=&#34;https://blog.frame.io/2018/01/31/fcpx-metadata/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.frame.io/2018/01/31/fcpx-metadata/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;How to Use Libraries in Final Cut Pro X version 10.1 &lt;a class=&#34;link&#34; href=&#34;http://www.izzyvideo.com/final-cut-pro-x-libraries/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.izzyvideo.com/final-cut-pro-x-libraries/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;
&lt;p&gt;Write Metadata [from DaVinci Resolve] back to files? &lt;a class=&#34;link&#34; href=&#34;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;amp;t=66127&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;t=66127&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;
&lt;p&gt;Exporting Metadata from Resolve to Premiere &lt;a class=&#34;link&#34; href=&#34;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;amp;t=50031&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;t=50031&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;
&lt;p&gt;Metadata Import/Export [with DaVinci Resolve] &amp;amp; XMP &lt;a class=&#34;link&#34; href=&#34;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;amp;t=59160&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forum.blackmagicdesign.com/viewtopic.php?f=21&amp;t=59160&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:9&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:10&#34;&gt;
&lt;p&gt;It’s True: Adobe Bridge CC Is 100% Free for You to Download &amp;amp; Use &lt;a class=&#34;link&#34; href=&#34;https://prodesigntools.com/free-adobe-bridge-cc.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://prodesigntools.com/free-adobe-bridge-cc.html&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:10&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:11&#34;&gt;
&lt;p&gt;Helpful summary of which containers support embedded XMP metadata &lt;a class=&#34;link&#34; href=&#34;https://forums.adobe.com/message/7518406&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forums.adobe.com/message/7518406&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:11&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:12&#34;&gt;
&lt;p&gt;Official XMP Specification Whitepaper from Adobe, lists each format and whether or not the codec writes to sidecar XMP files &lt;a class=&#34;link&#34; href=&#34;https://wwwimages2.adobe.com/content/dam/acom/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2016-08/XMPSpecificationPart3.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wwwimages2.adobe.com/content/dam/acom/en/devnet/xmp/pdfs/XMP%20SDK%20Release%20cc-2016-08/XMPSpecificationPart3.pdf&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:12&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:13&#34;&gt;
&lt;p&gt;&amp;ldquo;For some formats such as QuickTime (.mov) the XMP information is written into the media file. For formats that don&amp;rsquo;t support writing to the media file, like MXF, the XMP is written into a sidecar file. The sidecar file is stored at the same location as the media file.&amp;rdquo; &lt;a class=&#34;link&#34; href=&#34;https://forums.adobe.com/thread/1074392?start=0&amp;amp;tstart=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forums.adobe.com/thread/1074392?start=0&amp;tstart=0&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:13&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:14&#34;&gt;
&lt;p&gt;Adobe forums &lt;a class=&#34;link&#34; href=&#34;https://forums.adobe.com/thread/1837913&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anyway to default saving prelude metadata outside the video file&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:14&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:15&#34;&gt;
&lt;p&gt;&amp;ldquo;The Write XMP IDs To Files On Import preference only controls whether unique ID values are automatically written to files during import. This preference does not control whether XMP metadata is written to a file under other circumstances, such as when you edit metadata in the Metadata panel.&amp;rdquo; &lt;a class=&#34;link&#34; href=&#34;https://helpx.adobe.com/prelude/using/prelude-set-preferences.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://helpx.adobe.com/prelude/using/prelude-set-preferences.html&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:15&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Using an Apogee ONE for Livestream Audio</title>
        <link>http://localhost:1313/post/video/2018/rerouting-an-apogee-one-with-loopback/</link>
        <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2018/rerouting-an-apogee-one-with-loopback/</guid>
        <description>&lt;h2 id=&#34;the-scenario&#34;&gt;The Scenario
&lt;/h2&gt;&lt;p&gt;Earlier this year, I was livestreaming a music concert where there was no access to the soundboard&amp;rsquo;s mic output. It was a low-key, unlisted stream for family and friends, but I still wanted a find a way to improve the audio quality rather than using the camera&amp;rsquo;s built-in mic.&lt;/p&gt;
&lt;p&gt;I had my Apogee ONE with me, and it has an excellent built-in omni condenser mic. I connected it via USB and it was detected successfully in Wirecast. The latency was negligible, and so the stream was setup to use the camera&amp;rsquo;s video (via the Blackmagic Mini Recorder) and the Apogee&amp;rsquo;s audio.&lt;/p&gt;
&lt;p&gt;The only trouble was, since the Apogee ONE appears as a stereo input, the omni mic is only on the L channel and the R channel is blank. Viewers of the stream would only hear audio coming out of the left channel.&lt;/p&gt;
&lt;h2 id=&#34;loopback-and-audio-hijack-pro&#34;&gt;Loopback and Audio Hijack Pro
&lt;/h2&gt;&lt;p&gt;Using a combination of Rogue Amoeba&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://rogueamoeba.com/loopback/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Loopback&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://rogueamoeba.com/audiohijack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Audio Hijack Pro&lt;/a&gt; the Apogee ONE&amp;rsquo;s omni mic can be re-routed to a new virtual audio device for Wirecast.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, create a new virtual audio interface in Loopback.
&lt;img src=&#34;http://localhost:1313/post/video/2018/rerouting-an-apogee-one-with-loopback/loopback-apogee-1.png&#34;
	width=&#34;884&#34;
	height=&#34;710&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;298px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Next, create a new &lt;strong&gt;Session&lt;/strong&gt; in Audio Hijack Pro.&lt;/li&gt;
&lt;li&gt;Select the Apogee One as the &lt;strong&gt;Input Device&lt;/strong&gt;. Under the &lt;strong&gt;Advanced&lt;/strong&gt; settings, choose &lt;strong&gt;Channel 1&lt;/strong&gt; for &lt;em&gt;both the left and right channels&lt;/em&gt;. This will setup dual channel mono.
&lt;img src=&#34;http://localhost:1313/post/video/2018/rerouting-an-apogee-one-with-loopback/loopback-apogee-2.png&#34;
	width=&#34;344&#34;
	height=&#34;238&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;144&#34;
		data-flex-basis=&#34;346px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Add a new &lt;strong&gt;Output Device&lt;/strong&gt; directly to the right of the input device. It will automatically connect. Select the virtual audio device under &lt;strong&gt;Audio Device&lt;/strong&gt;.
&lt;img src=&#34;http://localhost:1313/post/video/2018/rerouting-an-apogee-one-with-loopback/loopback-apogee-3.png&#34;
	width=&#34;465&#34;
	height=&#34;206&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;225&#34;
		data-flex-basis=&#34;541px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Use Wirecast (or similar) to add the virtual audio device onto a new, active layer. It should be receiving audio on both the L and R channels.&lt;/li&gt;
&lt;li&gt;Mute the original camera audio on the other layer and start streaming.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;what-about-soundflower&#34;&gt;What About Soundflower?
&lt;/h2&gt;&lt;p&gt;Loopback and Audio Hijack Pro cost $130 bundled, so the first question might be to try &lt;a class=&#34;link&#34; href=&#34;https://github.com/mattingalls/Soundflower&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Soundflower&lt;/a&gt; instead since it&amp;rsquo;s free. Soundflower is powerful and has been around for a long time &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; and it&amp;rsquo;s definitely worth a try.&lt;/p&gt;
&lt;p&gt;Personally, I have found Soundflower&amp;rsquo;s interface less-intuitive than Audio Hijack&amp;rsquo;s. I was in a pinch to setup the livestream—a live show that was behind schedule—and was so grateful for the UX of Loopback and Audio Hijack to just work, and work perfectly. Worth every dollar.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;History of Soundflower &lt;a class=&#34;link&#34; href=&#34;https://rogueamoeba.com/freebies/soundflower/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://rogueamoeba.com/freebies/soundflower/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Resizing Video with After Effects and Instant 4K</title>
        <link>http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/</link>
        <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/</guid>
        <description>&lt;h2 id=&#34;upconverting-480p-footage&#34;&gt;Upconverting 480p Footage
&lt;/h2&gt;&lt;p&gt;This May, I tried something new and recorded a HD Wirecast livestream to disk as ProRes 422 @ 480p to help save on disk space/throughput.&lt;/p&gt;
&lt;p&gt;All of the other raw, camera footage was in 1080p and I wondered if there was some way to &amp;ldquo;upconvert&amp;rdquo; the low res footage. (I especially needed to do so because some of the raw camera files got corrupted, and the livestream was the only way to salvage that angle.)&lt;/p&gt;
&lt;h2 id=&#34;instant-4k-plugin-and-after-effects&#34;&gt;Instant 4K Plugin and After Effects
&lt;/h2&gt;&lt;p&gt;Despite the name, the &lt;strong&gt;Instant 4K&lt;/strong&gt; plugin is more like &amp;ldquo;Up to 4K.&amp;rdquo; The plugin is part of the &lt;a class=&#34;link&#34; href=&#34;https://www.redgiant.com/products/shooter-suite&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Red Giant Shooter Suite&lt;/a&gt; bundle and comes with support for Adobe Premiere and Adobe After Effects. From what I understand, the plugin uses some advanced interpolation algorithms to redraw each frame of the video as it expands it.&lt;/p&gt;
&lt;p&gt;I used Adobe After Effects CC 2018 and rendered out to ProRes 422.&lt;/p&gt;
&lt;h2 id=&#34;ab-video-comparison&#34;&gt;A/B Video Comparison
&lt;/h2&gt;&lt;p&gt;&amp;ldquo;Seeing is believing.&amp;rdquo; Here&amp;rsquo;s a before/after test with the original 480 footage&lt;/p&gt;
&lt;h3 id=&#34;still-frames&#34;&gt;Still Frames
&lt;/h3&gt;&lt;p&gt;Both files were opened in QuickTime Player X, and the 480p window was stretched to the same size as the 1080p window.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Below is a looping slideshow of the before/after still frames (image cropped to make it easier to see).&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Notice the difference in the clarity (text at top, violin bow) and richness of color (red blouse). This is &lt;em&gt;even with&lt;/em&gt; the inherent compression in the screenshot.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;running-video&#34;&gt;Running Video
&lt;/h3&gt;&lt;p&gt;If you have a 1920x1080 display, here&amp;rsquo;s a video clip also.&lt;/p&gt;
&lt;p&gt;Both files were played in QT X at the same time via ⌘+Enter and are toggled back and forth with ⌘+` (filename changes at the top) during playback. The screen capture was exported as ProRes 4444 (from Camtasia 2) and compressed to H.264 by EditReady using default settings (visually lossless). The eight second clip is 24 MB.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s definitely some compression in the H.264 render (for example in the color red), but even then there&amp;rsquo;s a noticable difference in the clarity in the Instant 4K version. The greatest quality loss is likely in the screen capture (rather than Edit Ready), but it&amp;rsquo;s still a useful test. Real-world delivery formats will be compressed, after all!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: if you&amp;rsquo;re hard to impress, you&amp;rsquo;ll definitely be underwhelmed when viewing this video at smaller screen resolutions. Be sure your display resolution &amp;gt; 1080p and use the HTML viewer to maximize it fullscreen.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;video controls
      preload=&#34;none&#34; poster=&#34;./resizing-prores-poster.png&#34;&gt;
        &lt;source src=&#34;./Instant4KPlugin-Before480After1080-H264.mov&#34; type=&#34;video/mp4&#34;&gt;Your browser does not support the video tag.
    &lt;/video&gt;
&lt;/div&gt;



&lt;p&gt;There&amp;rsquo;s nothing like looking at the original uncompressed footage though, so feel free to &lt;a class=&#34;link&#34; href=&#34;https://f000.backblazeb2.com/file/TripodVideoNinja/Instant4KPlugin-ProRes422-Resizing-Experiments.zip&#34; &gt;download the raw ProRes 422 videos&lt;/a&gt; to do your own comparison (190 MB).&lt;/p&gt;
&lt;h2 id=&#34;plugin-workflow-and-screenshots&#34;&gt;Plugin Workflow and Screenshots
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Drag and drop the footage into After Effects.&lt;/li&gt;
&lt;li&gt;Right-click a video file and create a new composition from it.&lt;/li&gt;
&lt;li&gt;Right-click the composition and select &lt;strong&gt;Composition Settings&lt;/strong&gt;. Change the &lt;strong&gt;Preset&lt;/strong&gt; to the target resolution (e.g. &lt;strong&gt;HDTV 1080 29.97&lt;/strong&gt; with &lt;strong&gt;Square Pixels&lt;/strong&gt;). The source video should now be smaller than the canvas size. &lt;img src=&#34;http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/after-effects-resize-settings-1.png&#34;
	width=&#34;700&#34;
	height=&#34;642&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;109&#34;
		data-flex-basis=&#34;261px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;strong&gt;Effects &amp;amp; Presets&lt;/strong&gt; dropdown to find the **Red Giant Shooter Suite ** section. Drag and drop the &lt;code&gt;Instant 4K&lt;/code&gt; plugin into the composition&amp;rsquo;s viewer to apply. It should automatically resize to the canvas size!&lt;/li&gt;
&lt;li&gt;Adjust the plugin settings as desired. I personally use &lt;strong&gt;Filter Type Best, Sharpness 6, Quality 10, and Anti-aliasing 3&lt;/strong&gt;, based on Red Giant&amp;rsquo;s Getting Started with Instant 4K video&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Select the composition and choose &lt;strong&gt;Composition &amp;gt; Add to Render Queue&lt;/strong&gt; from the menubar. Use &lt;strong&gt;Render Settings &amp;gt; Best Settings&lt;/strong&gt; using the small drop down. &lt;img src=&#34;http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/after-effects-resize-settings-2.png&#34;
	width=&#34;225&#34;
	height=&#34;199&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;271px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Create a new &lt;strong&gt;Output Module&lt;/strong&gt; to export to &lt;strong&gt;ProRes 422&lt;/strong&gt;. &lt;img src=&#34;http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/after-effects-resize-settings-3.png&#34;
	width=&#34;872&#34;
	height=&#34;588&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;355px&#34;
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For reference, the 17 second video clip earlier took 3 minutes and 43 seconds to export on the 2011 iMac with 12 GB of RAM. That is, &lt;strong&gt;13x&lt;/strong&gt;!&lt;/p&gt;
&lt;h2 id=&#34;ram-requirements&#34;&gt;RAM Requirements
&lt;/h2&gt;&lt;p&gt;Resizing ProRes footage apparently can&amp;rsquo;t be done on all machines. Here&amp;rsquo;s why.&lt;/p&gt;
&lt;h3 id=&#34;are-you-hongry-for-ram&#34;&gt;Are You Hongry for RAM?
&lt;/h3&gt;&lt;p&gt;Little did I know how incredibly RAM-intensive resizing footage is. This problem was particularly intensified by the sheer length of the video files: some were nearly 2 hours x 1 GB/min = 120 GB (classical music concert footage).&lt;/p&gt;
&lt;p&gt;The 2011 MBP actually &lt;em&gt;ran out of RAM&lt;/em&gt;. Like kaput. I tried a few things like increasing After Effect&amp;rsquo;s memory allocation, etc. but it was all essentially the same. Anything larger than 30 minutes would crash. Queuing up multiple renders wouldn&amp;rsquo;t work, because the program would need to be restarted before each one. The laptop was already maxxed out with 8 GB RAM.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/resizing-videos-in-after-effects/after-effects-mbp-resize-crash.gif&#34;
	width=&#34;1680&#34;
	height=&#34;1050&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This is when I remembered that nice desktop in the basement.&lt;/p&gt;
&lt;h3 id=&#34;return-of-the-imac&#34;&gt;Return of the iMac
&lt;/h3&gt;&lt;p&gt;Unlike the MBP, the iMac has four RAM slots. Both machines had 8 GB total at the start, but the iMac impressively cranked out the footage. It would seem that somehow this older iMac is just more stable, perhaps by virtue of it being a desktop.&lt;/p&gt;
&lt;p&gt;Eventually the iMac also started freezing up for the larger files. However after upgrading the machine to 12 GB—two 2 GB chips and two 4 GB chips—it was invincible.&lt;/p&gt;
&lt;h3 id=&#34;observations-on-ram-pressure&#34;&gt;Observations on RAM Pressure
&lt;/h3&gt;&lt;p&gt;One thing I noticed was even after a render is complete, After Effects typically still holds onto the RAM. Some of it can be purged by manually by selecting &lt;strong&gt;Edit &amp;gt; Purge &amp;gt; All Memory &amp;amp; Disk Cache&amp;hellip;&lt;/strong&gt; but it&amp;rsquo;s my observation that the RAM is only released completely after closing the program. Exiting the program usually takes a while too, sometimes of upwards of 2 minutes as it slowly siphons the RAM back.&lt;/p&gt;
&lt;p&gt;On the iMac with 12 GB RAM however, I had no trouble queueing up multiple renders.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[Updated Sep. 16, 2018 with detailed After Effects walkthrough.]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[Updated Sep. 26, 2018 with fast-loading ProRes 422 picture and video samples.]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The 853x480 file could only be resized to 1920x1079 in QuickTime Player X because of roundoff error. Hence the slight 1 pixel height difference when cycling between the two files.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;This slideshow is not a GIF. It&amp;rsquo;s rendered with Javascript with two PNG images, in order to minimize compression losses.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Red Giant&amp;rsquo;s video guide for the Instant 4K plugin, from where my default settings were taken from. &lt;a class=&#34;link&#34; href=&#34;https://www.redgiant.com/tutorial/getting-started-with-instant-4k/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.redgiant.com/tutorial/getting-started-with-instant-4k/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Livestream Lessons Learned, Again</title>
        <link>http://localhost:1313/post/video/2018/livestreaming-lessons-re-learned/</link>
        <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2018/livestreaming-lessons-re-learned/</guid>
        <description>&lt;h2 id=&#34;always-record-to-an-external-hard-drive&#34;&gt;Always Record to an External Hard Drive
&lt;/h2&gt;&lt;p&gt;Apparently I forgot &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2016/live-streaming-lessons/&#34; &gt;my own advice&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Use fast external disks as the destination.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even if recording to an uncompressed format like ProRes, always use a different drive than the OS&amp;rsquo; hard drive.&lt;/p&gt;
&lt;p&gt;Even if it&amp;rsquo;s an SSD.&lt;/p&gt;
&lt;h2 id=&#34;what-happened&#34;&gt;What Happened?
&lt;/h2&gt;&lt;p&gt;The result was particularly bad. Large dropped frames, audio/video sync issues, the works. And by works, I mean it&amp;rsquo;s going to be a ton of work to cleanup too.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t catch the error until after coming home, because all I was paying attention to was the CPU usage. I wasn&amp;rsquo;t even streaming and merely using Wirecast as a multicam monitor. CPU usage was always around 30%, and so I thought, &amp;ldquo;Oh we&amp;rsquo;re doing really good.&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;wirecast-record-to-disk-best-practices&#34;&gt;Wirecast Record to Disk Best Practices
&lt;/h2&gt;&lt;p&gt;Here are the recommendations from Craig over on a post&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; at the Wirecast forums from Nov 2017:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Make sure you have the best possible throughput. Avoid using the system disk.&lt;/li&gt;
&lt;li&gt;Separate internal SCSI drives are OK.&lt;/li&gt;
&lt;li&gt;Avoid using USB2 drives.&lt;/li&gt;
&lt;li&gt;If USB3 it should, ideally, be the only device on the bus. Even separate ports may be on the same bus.&lt;/li&gt;
&lt;li&gt;Best is to use SSD or RAID0 striped drives. 7200 RPM disks may be OK though.&lt;/li&gt;
&lt;li&gt;Avoid spinning disks below 7200rpm&lt;/li&gt;
&lt;li&gt;Keep CPU below 80% and below 70% is even better.&lt;/li&gt;
&lt;li&gt;Make sure the drive never gets filled beyond 80% capacity. Especially for spinning disks, they can slow as they fill.&lt;/li&gt;
&lt;li&gt;Make sure you&amp;rsquo;re not confusing variable frame rate with dropped frames. Wirecast records a variable frame rate to avoid dropped frames and keep motion smooth.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re going to do post editing consider using MJPEG MOV instead of H.264.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Interestingly, another forum post&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; suggests USB3 can be temperamental. One person had dropped frames from a bad cable!&lt;/p&gt;
&lt;h2 id=&#34;why-it-worked-last-month&#34;&gt;Why It Worked Last Month
&lt;/h2&gt;&lt;p&gt;Back in May 2018 (during the All-Night concert), I was connected via Thunderbolt to a RAID 0 striped LaCie 4 TB drive. Recording the livestream + HDV camera via Wirecast worked just fine.&lt;/p&gt;
&lt;p&gt;However this time, the internal Scratch disk was actually on the same physical SSD as the OS. It did have 500 GB free, but free space was irrelevant.&lt;/p&gt;
&lt;h2 id=&#34;one-strike-and-youre-out-to-make-it-better-next-time&#34;&gt;One Strike and You&amp;rsquo;re Out&amp;hellip; to Make it Better Next Time
&lt;/h2&gt;&lt;p&gt;Not recording to a dedicated, write disk is a fatal flaw. Let&amp;rsquo;s put on that growth mindset, shall we?&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Dropped Frames when recording to disc &lt;a class=&#34;link&#34; href=&#34;https://telestreamforum.forumbee.com/r/m2knvp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://telestreamforum.forumbee.com/r/m2knvp&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;ISO Dropping Frames &lt;a class=&#34;link&#34; href=&#34;https://telestreamforum.forumbee.com/t/80tr9x/iso-dropping-frames&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://telestreamforum.forumbee.com/t/80tr9x/iso-dropping-frames&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Persisting Finder Labels in Cloud Storage</title>
        <link>http://localhost:1313/post/video/2018/cloud-storage-and-finder-folder-icons/</link>
        <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2018/cloud-storage-and-finder-folder-icons/</guid>
        <description>&lt;h2 id=&#34;finder-folder-icons-vs-bucket-storage&#34;&gt;Finder Folder Icons vs. Bucket Storage
&lt;/h2&gt;&lt;p&gt;I often use Finder labels colors to manage media, specifically colors. These can easily indicate statuses: green for complete, blue for &amp;ldquo;cold storage&amp;rdquo; projects, red for abandoned projects, etc. These labels however are not supported on many popular bucket storage, e.g. Amazon S3 and Backblaze B2.&lt;/p&gt;
&lt;p&gt;What this means is one day, when I decide to restore a project, all the Finder folder colors will be gone. Instead, I&amp;rsquo;d drain a lot of time trying to remember where the project was. It&amp;rsquo;s almost like losing a document that&amp;rsquo;s never saved! Ya, that kind of feeling.&lt;/p&gt;
&lt;p&gt;What about if we wrote our own script to do that instead?&lt;/p&gt;
&lt;p&gt;Check it out on &lt;a class=&#34;link&#34; href=&#34;https://github.com/NaanProphet/finder-folder-icons&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;lets-go-automator&#34;&gt;Let&amp;rsquo;s Go, Automator
&lt;/h2&gt;&lt;p&gt;Automator Services are awesome. This little guy can be triggered in any application from a single folder. Here&amp;rsquo;s the overview:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy the workflow into &lt;code&gt;~/Library/Services/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tag folders with Finder colors (green, orange, etc.)&lt;/li&gt;
&lt;li&gt;Invoke the &lt;code&gt;Convert Finder Labels to Icons&lt;/code&gt; service (e.g. from Finder&amp;rsquo;s context menu)&lt;/li&gt;
&lt;li&gt;A little gear will spin the menu bar as the workflow executes&lt;/li&gt;
&lt;li&gt;The script writes a file &lt;code&gt;green.icon.png&lt;/code&gt;, &lt;code&gt;orange.icon.png&lt;/code&gt; etc. into all folders with labels, and sets the icon of the folder to that new icon (to indicate it did work)&lt;/li&gt;
&lt;li&gt;Folders are archived in bucket storage. The icon and label are lost, but the &lt;code&gt;png&lt;/code&gt; file remains!&lt;/li&gt;
&lt;li&gt;After restoring from bucket storage, run the program on the parent folder again.&lt;/li&gt;
&lt;li&gt;The script sets the icon of the folder based on the &lt;code&gt;png&lt;/code&gt; file and also sets the Finder label again!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/cloud-storage-and-finder-folder-icons/finder-folder-icons-2.png&#34;
	width=&#34;997&#34;
	height=&#34;916&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;108&#34;
		data-flex-basis=&#34;261px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This approach is rock solid! Automator only provides the folder list, which means the shell script can be invoked on a single folder for testing.&lt;/p&gt;
&lt;p&gt;Furthermore, since the &lt;code&gt;png&lt;/code&gt; file is named with the same color, the status of projects is easily understood browsing around the storage bucket, without needed to download and run the script.&lt;/p&gt;
&lt;p&gt;The only tradeoffs are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is not an automatic process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In order to completely remove a color, the icon, label, and &lt;code&gt;png&lt;/code&gt; file must be manually deleted. (Changing a label to another color is supported automatically.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;appendix-but-what-about&#34;&gt;Appendix: But what about&amp;hellip;
&lt;/h2&gt;&lt;p&gt;Automator wasn&amp;rsquo;t the first idea! Here are some others that didn&amp;rsquo;t work out.&lt;/p&gt;
&lt;h3 id=&#34;folder-actions&#34;&gt;Folder Actions
&lt;/h3&gt;&lt;p&gt;OS X comes built-in with Folder Actions that can trigger scripts when something changes inside a folder. However, Folder Actions cannot recursively monitor a folder, so any solution would require adding an action for each subfolder. Too cumbersome.&lt;/p&gt;
&lt;h3 id=&#34;hazel&#34;&gt;Hazel
&lt;/h3&gt;&lt;p&gt;Hazel is an amazing piece of software that scans folders and can perform tasks automatically. Using Hazel, it&amp;rsquo;s possible to script up a trigger to convert our Finder tag/color to an icon file, and restore that icon file automatically.&lt;/p&gt;
&lt;p&gt;The workflow would look something like this, either triggering a shell script, Automator action, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2018/cloud-storage-and-finder-folder-icons/finder-folder-icons-1.png&#34;
	width=&#34;795&#34;
	height=&#34;622&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;306px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;However, after numerous attempts, Hazel seems a bit buggy for this particular effort. It doesn&amp;rsquo;t always detect when a folder&amp;rsquo;s color label has changed, and even when the log says it does the rules don&amp;rsquo;t fire. The same script run manually however does work!&lt;/p&gt;
&lt;p&gt;Several support pages on Hazel&amp;rsquo;s forum also indicate bugs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.noodlesoft.com/forums/viewtopic.php?f=4&amp;amp;t=5578#p17183&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rules frequency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.noodlesoft.com/forums/viewtopic.php?f=4&amp;amp;t=6767&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Add file to iTunes when added to folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.noodlesoft.com/forums/viewtopic.php?f=4&amp;amp;t=1618#p6643&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hazel Rules Not working&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: by default, the output of the shell scripts is not written to the Hazel log. To do so &lt;a class=&#34;link&#34; href=&#34;https://www.noodlesoft.com/forums/viewtopic.php?f=4&amp;amp;t=296&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;run Hazel in Debug Mode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So although Hazel could do the job, it doesn&amp;rsquo;t seem stable enough.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Best Practices for Large Web Transfers</title>
        <link>http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/</link>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/</guid>
        <description>&lt;h2 id=&#34;the-challenge&#34;&gt;The Challenge
&lt;/h2&gt;&lt;p&gt;Sometimes, when collaborating on projects virtually, file storage becomes a problem. Professional studios can probably run highly performant SFTP servers or bucket storage systems, but when you&amp;rsquo;re working with other freelancers on tight budgets—who may not be as tech savvy—a 30 GB file starts becoming a big problem.&lt;/p&gt;
&lt;h2 id=&#34;free-simple-file-sends&#34;&gt;Free, Simple File Sends
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://filemail.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Filemail.com&lt;/a&gt; is a really convenient web service that allows for sends of up to 50 GB at a time in their free tier. Receipients can either download files in the web browser or can torrent them for convenient pause/resumes.&lt;/p&gt;
&lt;p&gt;Filemail is typically the service I&amp;rsquo;ve asked others to send me raw video files through.&lt;/p&gt;
&lt;p&gt;And I always ask the files be zipped up &lt;em&gt;first&lt;/em&gt;&amp;hellip; why?&lt;/p&gt;
&lt;h2 id=&#34;repairing-http-header-corruption&#34;&gt;Repairing HTTP Header Corruption
&lt;/h2&gt;&lt;p&gt;One time, a person sent raw MTS (MPEG Transport Stream) video files from an AVCHD camera.  I did ask them to zip it up first, but for whatever reason that was overlooked. &amp;ldquo;How bad could it be?&amp;rdquo; I thought. I&amp;rsquo;d already downloaded about 40 GB of footage!&lt;/p&gt;
&lt;p&gt;I fired up &lt;a class=&#34;link&#34; href=&#34;https://www.divergentmedia.com/editready&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Edit Ready&lt;/a&gt; to rewrap the MPEG-2 Transport Stream into a MOV container for editing. However, the conversion would keep failing after a certain point&amp;hellip;&lt;/p&gt;
&lt;p&gt;I reached out the main man of Divergent Media, Colin McFadden, and he replied back super promptly with the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At that point in the file where it fails, there&amp;rsquo;s a hunk of HTTP header, which definitely shouldn&amp;rsquo;t be in an MTS file.  Seems like something went really wrong in however these were transferred.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sure enough, there was some &lt;code&gt;Content Disposition&lt;/code&gt; HTTP headers slapped in between!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/mts-header-1.png&#34;
	width=&#34;1773&#34;
	height=&#34;1059&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Deleting these with a hex editor and rewrapping the new file did the trick beautifully!&lt;/p&gt;
&lt;p&gt;Interestingly (and this could very well be my own error) not all the headers were the same length: 444 bytes, 428 bytes, 456 bytes, and 453 bytes. Screenshots of the other three are below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/mts-header-2.png&#34;
	width=&#34;1773&#34;
	height=&#34;1059&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/mts-header-3.png&#34;
	width=&#34;1773&#34;
	height=&#34;1058&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;402px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/best-practices-for-large-web-transfers/mts-header-4.png&#34;
	width=&#34;1773&#34;
	height=&#34;1058&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;402px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;always-zip&#34;&gt;Always Zip
&lt;/h2&gt;&lt;p&gt;Take home lesson? Always ask files to be zipped before sending through web upload services. Compression isn&amp;rsquo;t important really—storage-only zips or tars would do just fine.&lt;/p&gt;
&lt;p&gt;And to salvage footage, don&amp;rsquo;t be afraid to open a hex editor!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Repairing H.264 Interlaced Footage</title>
        <link>http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/</link>
        <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/</guid>
        <description>&lt;h2 id=&#34;the-rub&#34;&gt;The Rub
&lt;/h2&gt;&lt;p&gt;We&amp;rsquo;ll start with a quote from Larry Jordan:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X.264 and H.264 should only be used when creating files for the web. If you plan to edit the resulting file, convert it to ProRes instead. AVCHD files compressed into H.264 for editing will look just awful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oops.&lt;/p&gt;
&lt;h2 id=&#34;the-flawed-setup&#34;&gt;The Flawed Setup
&lt;/h2&gt;&lt;p&gt;I still use a Sony FX7 for some setups. It has a Firewire out which makes it perfect for livestreaming.&lt;/p&gt;
&lt;p&gt;For this event, I wanted to (1) use the FX7 for livestreaming and (2) also record the raw HDV video itself for editing afterwards.&lt;/p&gt;
&lt;p&gt;In order to avoid those awful MiniDV tapes—whose tape changes I feared also might cause the live feed to that meant recording to disk. It wasn&amp;rsquo;t possible to share the video source with both Wirecast and ScopeBox, so I thought, &amp;ldquo;Hey, why not try recording straight to disk in Wirecast instead?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;While &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/post/video/2016/live-streaming-lessons/&#34; &gt;this post&lt;/a&gt; details many other general livestreaming lessons learned, there are a few major downsides to relying on Wirecast for raw footage which I now realize. Wirecast doesn&amp;rsquo;t know how to &amp;ldquo;automatically&amp;rdquo; record as HDV; instead it manually requires setting the codec format, frame rate, etc. which felt too easy for me to mess up. For example: since HDV is technically a 4:3 1440x1080 image that&amp;rsquo;s then stretched out, I wasn&amp;rsquo;t sure whether I should record to 1920x1080 or 1440x1080.&lt;/p&gt;
&lt;p&gt;So rather than deal with all that I said instead, &amp;ldquo;Let&amp;rsquo;s just save H.264 in Wirecast to disk!&amp;rdquo; (It was a pretty neat setup actually, using two Wirecast documents open simultaneously, one for the livestream and one just for the camera&amp;rsquo;s archive stream.) Just in case 1080p would create an upscale, I thought going 720p would be better.&lt;/p&gt;
&lt;p&gt;Thus the Nightmare Before Recording began.&lt;/p&gt;
&lt;h2 id=&#34;the-rescue-contenders&#34;&gt;The Rescue Contenders
&lt;/h2&gt;&lt;p&gt;Three approaches to &amp;ldquo;uncomb&amp;rdquo;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; the baked in interlaced footage were tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://handbrake.fr&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Handbrake&lt;/a&gt; (v 0.10.5 x86_64)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.apple.com/final-cut-pro/compressor/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Compressor 4&lt;/a&gt; via forcing the field order to interlaced&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.phyx.biz/phyxcleaner.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PHYX Cleaner plugin&lt;/a&gt; as suggested on a Wirecast forum&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of these three, &lt;strong&gt;Compressor was the clear winner&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-compressor-trick&#34;&gt;The Compressor Trick
&lt;/h2&gt;&lt;p&gt;Compressor, it seems, has a handy feature that allows &amp;ldquo;forcing&amp;rdquo; an input file&amp;rsquo;s field order. By carefully clicking on the input file&amp;rsquo;s box, the Inspector window on the right shows a little section called &lt;strong&gt;File Properties&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/compressor-force-field-order.png&#34;
	width=&#34;1104&#34;
	height=&#34;915&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;289px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Since the file is actually H.264, Compressor reads the metadata and selects Progressive by default. Changing this to &lt;strong&gt;Top First&lt;/strong&gt; forces it to treat it as interlaced (since HDV is top field first).&lt;/p&gt;
&lt;h2 id=&#34;deinterlace-tests&#34;&gt;Deinterlace Tests
&lt;/h2&gt;&lt;p&gt;All files, a total of 2.68 GB, are available &lt;a class=&#34;link&#34; href=&#34;https://f000.backblazeb2.com/file/TripodVideoNinja/HDV-Deinterlace-Repair-Experiments.zip&#34; &gt;here&lt;/a&gt; for reference. Compressing them for web would precisely alter what we&amp;rsquo;re trying to observe!&lt;/p&gt;
&lt;p&gt;Note: please be considerate and only download them sparingly as needed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1080iHDVSavedAs720pH264Clip1.mov&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;57 second clip, 30 MB.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Output file&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Size&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Program used&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Result&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Apple Devices HD (Best Quality).m4v&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;49M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;BEST&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Apple ProRes 422 Retiming Better.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;498M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Apple ProRes 422 Stock.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;498M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;H.264 for Archival.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;94M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;BEST&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDecombBob.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;30M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDecombBob60fps.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;30M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDecombBobTff.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;31M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDeinterflaceBobTff.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;37M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDeinterlaceBob.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;36M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HandbrakeHighProfileDeinterlaceBob60fps.mp4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;36M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Handbrake&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PhyxCleanerMasterFileH264.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;49M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PHYX + FCPX&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;OK&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PhyxCleanerMasterFileProRes.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;499M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PHYX + FCPX&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;OK&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Up to 4K Stock.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;69M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;OK&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;x264 Jan Ozer-esque.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;48M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor + x264&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;x264 Larry Jordan-esque.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;47M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor + x264&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;FAIL&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;From these experiments, it seems &lt;strong&gt;Handbrake&amp;rsquo;s decombing/deinterlacing algorithms can&amp;rsquo;t be forced on progressive video files&lt;/strong&gt;. Even forcing the footage with &lt;code&gt;tff&lt;/code&gt; as top-field-first&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; yielded zero discernible difference. Handbrake&amp;rsquo;s just meant to work on actual interlaced footage.&lt;/p&gt;
&lt;p&gt;Also interesting to note is Handbrake seems to start video earlier from the GOP, even though the file itself started many frames later. Hence the audio is blank at the beginning of the output render file!&lt;/p&gt;
&lt;p&gt;PHYX Cleaner&amp;rsquo;s output was better than the original, but it&amp;rsquo;s still rather comby. Both H.264 and ProRes master files appear identical in deinterlacing quality. Perhaps the plugin can be refined further from the stock plugin settings, but even if that were the case there are so many disadvantages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it&amp;rsquo;s a paid plugin&lt;/li&gt;
&lt;li&gt;each clip would require a separate Project in FCPX&lt;/li&gt;
&lt;li&gt;exporting from FCPX can&amp;rsquo;t be batched easily (like Compressor)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Compressor however is the clear champion! In particular, the only passing Compressor renders were by &lt;strong&gt;forcing the field order &lt;em&gt;and&lt;/em&gt; using Apple&amp;rsquo;s stock H.264 codec&lt;/strong&gt;. Forcing the field order and using an x264 codec&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; made no difference—and rather looked like the poor output from Handbrake (likely because Handbrake uses x264 too).&lt;/p&gt;
&lt;h2 id=&#34;summary-of-repair-solution&#34;&gt;Summary of Repair Solution
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1080iHDVSavedAs720pH264Clip2.mov&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Final confirmation with a 11 sec, 9 MB segment instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Original&lt;/strong&gt; &lt;em&gt;especially note the combing during fast hand movements&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;video controls
      preload=&#34;none&#34; poster=&#34;./deinterlace-clip2-better-retiming-poster.png&#34;&gt;
        &lt;source src=&#34;./1080iHDVSavedAs720pH264Clip2.mov&#34; type=&#34;video/mp4&#34;&gt;Your browser does not support the video tag.
    &lt;/video&gt;
&lt;/div&gt;



&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Output file&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Size&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Program used&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Result&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Up to 4K Stock.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;BEST&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Up to 4K Better Retiming.mov&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;14M&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Compressor&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;BEST&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It&amp;rsquo;s hard for me to tell if there&amp;rsquo;s an appreciable difference between the two retiming settings, but for sure the combing is no more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repaired (Up to 4K Better Retiming)&lt;/strong&gt; &lt;em&gt;look Ma, no lines!&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;video controls
      preload=&#34;none&#34; poster=&#34;./deinterlace-clip2-orig-poster.png&#34;&gt;
        &lt;source src=&#34;./1080iHDVSavedAs720pH264Clip2-Up-to-4K-Better-Retiming.mov&#34; type=&#34;video/mp4&#34;&gt;Your browser does not support the video tag.
    &lt;/video&gt;
&lt;/div&gt;



&lt;p&gt;So at the end of the day, &lt;strong&gt;forcing Compressor&amp;rsquo;s input field order &lt;em&gt;and&lt;/em&gt; exporting using Apple&amp;rsquo;s H.264 codec works like a champ&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Phew!&lt;/p&gt;
&lt;h2 id=&#34;appendix-custom-encoding-presets-tried&#34;&gt;Appendix: Custom Encoding Presets Tried
&lt;/h2&gt;&lt;p&gt;Details of all the presets used. All audio settings left as default.&lt;/p&gt;
&lt;h3 id=&#34;x264-larry-jordan-esque-compressor&#34;&gt;x264 Larry Jordan-esque (Compressor)
&lt;/h3&gt;&lt;p&gt;Inspired by: &lt;a class=&#34;link&#34; href=&#34;https://larryjordan.com/articles/compressor-x264-improve-video/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://larryjordan.com/articles/compressor-x264-improve-video/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QuickTime settings
&lt;ul&gt;
&lt;li&gt;Compression Type set to x264 Encoder&lt;/li&gt;
&lt;li&gt;Key Frames set to Automatic (instead of Every 24 frames)&lt;/li&gt;
&lt;li&gt;Data Rate set to Automatic (instead of 6400 kbps)&lt;/li&gt;
&lt;li&gt;Encoding set to Best quality (Multi-pass)&lt;/li&gt;
&lt;li&gt;Quality moved to High&lt;/li&gt;
&lt;li&gt;Options &amp;hellip;
&lt;ul&gt;
&lt;li&gt;Flags &amp;gt; crf turned on. Everything else left as is&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Retiming quality set to Better (Motion Adaptive)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-01.png&#34;
	width=&#34;878&#34;
	height=&#34;690&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;305px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-02.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-03.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-04.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-05.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-06.png&#34;
	width=&#34;455&#34;
	height=&#34;1034&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;44&#34;
		data-flex-basis=&#34;105px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/jordanx264-07.png&#34;
	width=&#34;455&#34;
	height=&#34;1034&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;44&#34;
		data-flex-basis=&#34;105px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;x264-jan-ozer-esque-compressor&#34;&gt;x264 Jan Ozer-esque (Compressor)
&lt;/h3&gt;&lt;p&gt;Inspired by: &lt;a class=&#34;link&#34; href=&#34;http://www.streaminglearningcenter.com/articles/first-look-apple-compressor-41.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.streaminglearningcenter.com/articles/first-look-apple-compressor-41.html&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;http://www.streaminglearningcenter.com/articles/encoding-with-the-x264-codec-with-compressor-4.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.streaminglearningcenter.com/articles/encoding-with-the-x264-codec-with-compressor-4.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QuickTimeSettings
&lt;ul&gt;
&lt;li&gt;Set Compression Type to x264 Encoder&lt;/li&gt;
&lt;li&gt;Options &amp;hellip; &amp;gt; Load preset &amp;gt; Use Library native preset/tune
&lt;ul&gt;
&lt;li&gt;x264 preset left as Medium (default)&lt;/li&gt;
&lt;li&gt;x264 tune left as None&lt;/li&gt;
&lt;li&gt;Hit OK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;H.264 Profile limit left as up to High Profile
&lt;ul&gt;
&lt;li&gt;Hit OK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Changed Key Frames to Automatic&lt;/li&gt;
&lt;li&gt;Compressor Quality to High&lt;/li&gt;
&lt;li&gt;Encoding to Best quality (Multi-pass)&lt;/li&gt;
&lt;li&gt;Data Rate set to Automatic (instead of 6400 kbps)&lt;/li&gt;
&lt;li&gt;Hit OK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Retiming quality set to Better (Motion Adaptive)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-01.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-02.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-03.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-04.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-05.png&#34;
	width=&#34;690&#34;
	height=&#34;616&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;112&#34;
		data-flex-basis=&#34;268px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-06.png&#34;
	width=&#34;878&#34;
	height=&#34;690&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;305px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-07.png&#34;
	width=&#34;455&#34;
	height=&#34;1034&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;44&#34;
		data-flex-basis=&#34;105px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/ozerx264-08.png&#34;
	width=&#34;455&#34;
	height=&#34;1034&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;44&#34;
		data-flex-basis=&#34;105px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;x264-deinterlace-handbrake&#34;&gt;x264 Deinterlace (HandBrake)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Started with High Profile&lt;/li&gt;
&lt;li&gt;Picture Settings &amp;gt; Filters
&lt;ul&gt;
&lt;li&gt;Deinterlace: Bob&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-01.png&#34;
	width=&#34;519&#34;
	height=&#34;307&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-02.png&#34;
	width=&#34;1269&#34;
	height=&#34;758&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-03.png&#34;
	width=&#34;686&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;310px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;x264-decomb-handbrake&#34;&gt;x264 Decomb (HandBrake)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Started with High Profile&lt;/li&gt;
&lt;li&gt;Picture Settings &amp;gt; Filters
&lt;ul&gt;
&lt;li&gt;Decomb: Bob&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-04.png&#34;
	width=&#34;519&#34;
	height=&#34;307&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;169&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-05.png&#34;
	width=&#34;1269&#34;
	height=&#34;758&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;167&#34;
		data-flex-basis=&#34;401px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-06.png&#34;
	width=&#34;686&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;310px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;x264-deinterlace-top-field-first-handbrake&#34;&gt;x264 Deinterlace, Top Field First (HandBrake)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Started with High Profile&lt;/li&gt;
&lt;li&gt;Picture Settings &amp;gt; Filters
&lt;ul&gt;
&lt;li&gt;Deinterlace: Bob&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;:tff&lt;/code&gt; under Additional Options&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-07.png&#34;
	width=&#34;686&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;310px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;x264-decomb-top-field-first-handbrake&#34;&gt;x264 Decomb, Top Field First (HandBrake)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Started with High Profile&lt;/li&gt;
&lt;li&gt;Picture Settings &amp;gt; Filters
&lt;ul&gt;
&lt;li&gt;Decomb: Bob&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;:tff&lt;/code&gt; under Additional Options&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/hbx264-08.png&#34;
	width=&#34;686&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;310px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;apple-prores-422-compressor&#34;&gt;Apple ProRes 422 (Compressor)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Started with stock preset&lt;/li&gt;
&lt;li&gt;Retiming quality set to Better (Motion Adaptive)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/prores-01.png&#34;
	width=&#34;1222&#34;
	height=&#34;1034&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;283px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;h264-for-archival-compressor&#34;&gt;H.264 for Archival (Compressor)
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Duplicate stock Up to 4K preset (can be found under either Publish to Vimeo or Publish to YouTube)&lt;/li&gt;
&lt;li&gt;Rename as H.264 for Archival&lt;/li&gt;
&lt;li&gt;Change Data rate from Web publishing (19531 kbps) to Computer playback (29296 kbps). Note rates listed in Compressor are for actual 4K footage and will be smaller for 720p footage.&lt;/li&gt;
&lt;li&gt;Change retiming quality from Fast to Better (Motion Adaptive)&lt;/li&gt;
&lt;li&gt;Change audio from AAC to Linear PCM 48kHz, Best Quality, 16-bit Little Endian (the Intel Default)&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/upto4k-01.png&#34;
	width=&#34;1267&#34;
	height=&#34;869&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/upto4k-02.png&#34;
	width=&#34;878&#34;
	height=&#34;690&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;127&#34;
		data-flex-basis=&#34;305px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/upto4k-03.png&#34;
	width=&#34;1267&#34;
	height=&#34;869&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/upto4k-04.png&#34;
	width=&#34;1267&#34;
	height=&#34;869&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;phyx-cleaner&#34;&gt;PHYX Cleaner
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2017/repairing-h264-interlaced-footage/phyx-cleaner-deinterlace-settings.png&#34;
	width=&#34;2032&#34;
	height=&#34;1169&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;417px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Examples of combing &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Interlaced_video#Interlacing_problems&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Interlaced_video#Interlacing_problems&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Recorded Interlaced Source as Progressive file - now what? &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=23213&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=23213&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Tip to use &lt;code&gt;:tff&lt;/code&gt; in Handbrake &lt;a class=&#34;link&#34; href=&#34;http://stackoverflow.com/questions/9287122/how-do-i-set-the-interlaced-flag-on-an-mkv-file-so-that-vlc-can-automatically-pl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://stackoverflow.com/questions/9287122/how-do-i-set-the-interlaced-flag-on-an-mkv-file-so-that-vlc-can-automatically-pl&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://larryjordan.com/articles/compressor-x264-improve-video/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://larryjordan.com/articles/compressor-x264-improve-video/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://larryjordan.com/articles/it-aint-the-endian-of-the-world/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://larryjordan.com/articles/it-aint-the-endian-of-the-world/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>How to Add Timecode to MP4 Files</title>
        <link>http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/</link>
        <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/</guid>
        <description>&lt;h2 id=&#34;where-has-timecode-gone&#34;&gt;Where Has Timecode Gone?
&lt;/h2&gt;&lt;p&gt;Newer, prosumer codecs these days like Sony XAVC-S don&amp;rsquo;t seem to record video with timecode. It&amp;rsquo;s one of the chief drawbacks that knocks the otherwise brilliant Sony AX100 from solid professional use. Timecode tracks can save mountains of time when editing multicamera shots, relinking media files, trimming clips precisely and so on—which, ostensibly, most home video footage won&amp;rsquo;t call upon.&lt;/p&gt;
&lt;p&gt;Prosumer camera codecs like AVCHD and XAVC-S write H.264 video in MP4 containers. H.264 is a compressed video format originally intended for delivery, not editing, but its role has slowly evolved. Prosumer cameras really benefit from the compression because then 4 hrs of 4K can still fit on a 128 GB SD card.&lt;/p&gt;
&lt;p&gt;MP4 containers don&amp;rsquo;t traditionally support timecode which may help to explain why the recent trend in dropping timecode. Although &lt;a class=&#34;link&#34; href=&#34;https://developer.apple.com/library/mac/technotes/tn2174/_index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Apple supports timecode in MP4 containers&lt;/a&gt; since 2013, &lt;a class=&#34;link&#34; href=&#34;https://www.digitalrebellion.com/blog/posts/how_to_create_timecode_tracks_for_h.264_movies_in_compressor&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;other software may exhibit side-effects reading timecode-rich MP4s&lt;/a&gt; if they do not expect it.&lt;/p&gt;
&lt;h2 id=&#34;mov-to-the-rescue&#34;&gt;MOV to the Rescue
&lt;/h2&gt;&lt;p&gt;MOV containers are like the Swiss army knife of containers. Unlike MP4, MOV supports timecode tracks full out, and rewrapping from MP4 to MOV can be done in a number of ways! But which are robust and which go bust?&lt;/p&gt;
&lt;p&gt;Short answer: EditReady is the most robust rewrapper out there, and can even be scripted from the command line. Read on for the details and why others didn&amp;rsquo;t cut it (no pun intended).&lt;/p&gt;
&lt;h2 id=&#34;the-setup&#34;&gt;The Setup
&lt;/h2&gt;&lt;p&gt;The following tests were performed using AVCHD files already in MOV format as imported on a MBP with Photos. They however, did not have timecode.&lt;/p&gt;
&lt;p&gt;After timecode was added to the MOV container, the file was opened with QuickTime Player 7 and Compressor 4 to verify timecode. The file was then transcoded with Compressor to check its integrity.&lt;/p&gt;
&lt;h2 id=&#34;editready-lives-up-to-its-name&#34;&gt;EditReady Lives up to Its Name
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.divergentmedia.com/editready&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;EditReady&lt;/a&gt; is a champion at rewrapping footage. Divergent Media makes excellent products and their customer service is bar none. When I had written regarding the ghost render, Colin at Divergent Media explained:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Compressor isn&amp;rsquo;t good at recovering from bad frames, so that&amp;rsquo;s the mostly likely problem. You hit one bad segment and it just gives up. EditReady is a little better about moving past those segments. It could have been a bad SD card or something during the original shoot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;EditReady&amp;rsquo;s algorithms can correct this, so it&amp;rsquo;s really the most versatile program out there. Rewrapping with EditReady makes Compressor super, super happy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/edit-ready-rewrap-window.png&#34;
	width=&#34;750&#34;
	height=&#34;509&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;147&#34;
		data-flex-basis=&#34;353px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;EditReady&amp;rsquo;s rewrap affected the FCP X date at first, but turns out it was because there were conflicting dates inside the container&amp;rsquo;s metadata!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/rewrap-editready-file-dates.png&#34;
	width=&#34;756&#34;
	height=&#34;113&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;669&#34;
		data-flex-basis=&#34;1605px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;EditReady&amp;rsquo;s Metadata window calls this to your attention and allows you to select and/or set which date you would like.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-metadata-date-conflict-resolution.gif&#34;
	width=&#34;726&#34;
	height=&#34;457&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;381px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;As you can see the original file does not have any timecode. By default, EditReady will preserve timecode if present, but not generate it if absent on the original. However, clicking the + icon in the upper right allows one to add a timecode tag as well! (By default, if the field is blank, timecode will start at &lt;code&gt;00:00:00:00&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-metadata-add-timecode.gif&#34;
	width=&#34;726&#34;
	height=&#34;457&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;381px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The size of the rewrapped, timecode footage is the same within a few bytes. Strangely enough, QuickTime Player 7 did crash a few times when scrubbing both.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-test-original-stats.png&#34;
	width=&#34;299&#34;
	height=&#34;384&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;186px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-rewrap-stats.png&#34;
	width=&#34;299&#34;
	height=&#34;382&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;78&#34;
		data-flex-basis=&#34;187px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The rewrapped video however was larger in the number of frames: without timecode generation, it was &lt;code&gt;159165&lt;/code&gt; frames instead of &lt;code&gt;159164&lt;/code&gt; and with timecode it was &lt;code&gt;159166&lt;/code&gt;. Thinking this might have been the potential missing frame correction, I checked against another clip that rendered properly in Compressor, but the EditReady rewrap (without timecode) was again greater in frames: &lt;code&gt;174150&lt;/code&gt; vs &lt;code&gt;174149&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/rewrap-original-frame-count.png&#34;
	width=&#34;1008&#34;
	height=&#34;422&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;573px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-rewrap-one-extra-frame.png&#34;
	width=&#34;999&#34;
	height=&#34;440&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;227&#34;
		data-flex-basis=&#34;544px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-rewrap-two-extra-frames.png&#34;
	width=&#34;1021&#34;
	height=&#34;442&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;230&#34;
		data-flex-basis=&#34;554px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;While the cause is unknown (roundoff error maybe?), the implication of the change in number of frames is clear: rewrapping footage will make relinking offline media a nightmare! Attempting to relink the timecode version with the original brings this lovely dialog:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/editready-rewrap-frame-change-relinking.png&#34;
	width=&#34;532&#34;
	height=&#34;324&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;164&#34;
		data-flex-basis=&#34;394px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Thus, always rewrap footage first before beginning editing.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;At the end of the day, EditReady is the most reliable way of rewrapping and adding timecode to any footage. Repairing even small nicks from original footage, it serves a a trustworthy partner in the initial post-processing logging and transfer workflow.&lt;/p&gt;
&lt;h2 id=&#34;appendix-the-b-list&#34;&gt;Appendix: The &amp;ldquo;B&amp;rdquo; List
&lt;/h2&gt;&lt;p&gt;Sometimes &amp;ldquo;B&amp;rdquo; is generous. Here&amp;rsquo;s what doesn&amp;rsquo;t work.&lt;/p&gt;
&lt;h3 id=&#34;ffmpeg-woes&#34;&gt;ffmpeg Woes
&lt;/h3&gt;&lt;p&gt;ffmpeg is the open source king for video compression. Many programs like Handbrake are built on it, so I was excited to learn it can add timecode as well! To rewrap a container with timecode the syntax is like so:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ffmpeg -i Day_1.mov -codec copy -timecode 04:25:50.00 Day_1.ffmpeg.mov&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note: the timecode seems to be automatically calculated based on the framerate of the video track. Also, by default, ffmpeg only preserves 1 video and 1 audio track.&lt;/p&gt;
&lt;p&gt;While ffmpeg successfully added timecode, the resulting file was a disaster for editing. The file systematically quits @ 20 seconds on any render in Compressor, suggesting some kind of container corruption.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-ffmpeg-compressor-fail.png&#34;
	width=&#34;979&#34;
	height=&#34;321&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Timecode added by ffmpeg fails to render with Compressor&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;304&#34;
		data-flex-basis=&#34;731px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, although the file did play in QuickTime Player X and QuickTime Player 7, &lt;strong&gt;scrubbing the playhead sometimes caused the application to crash&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-ffmpeg-qt7-scrubbing-fail.png&#34;
	width=&#34;632&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Timecode added by ffmpeg crashes during QT7 scrubbing&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;404px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The file crashed when scrubbing in Compressor as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-ffmpeg-compressor42-scrubbing-fail.png&#34;
	width=&#34;632&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Cannot scrub ffmped rewrapped file&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;404px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Lastly, the first frame is often black. Note in particular the strange, red vertical lines in Compressor&amp;rsquo;s preview window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-ffmpeg-compressor-black-screen.png&#34;
	width=&#34;1436&#34;
	height=&#34;724&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Black opening frame in Compressor&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;476px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;In a way, ffmpeg is a video delivery king, but perhaps not an editing king.&lt;/p&gt;
&lt;h3 id=&#34;videotoolshed-mp4-to-quicktime&#34;&gt;VideoToolShed MP4 to QuickTime
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.videotoolshed.com/product/66/mp4-to-quicktime/3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Videotoolshed&amp;rsquo;s MP4 to QuickTime&lt;/a&gt; was another contender, but starting from version 6 the program uses ffmpeg under the hood, to increase compatibility with other programs. So it too exhibits the same problems and failed to render with Compressor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-mp4toqt61-compressor-fail.png&#34;
	width=&#34;979&#34;
	height=&#34;338&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Timecode added by mp4toqt61 fails to render with Compressor&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;289&#34;
		data-flex-basis=&#34;695px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Also, the VideoToolShed GUI is very rough around the edges:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only detects MP4 files. So to add timecode to existing MOVs, the files first have to be renamed to trick the program to open them.&lt;/li&gt;
&lt;li&gt;When processing the program won&amp;rsquo;t come back to the foreground. Hovering with the mouse shows the little color pinwheel&amp;hellip;&lt;/li&gt;
&lt;li&gt;Files also can&amp;rsquo;t be dragged and dropped, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So ya, the little things—and some big things as well.&lt;/p&gt;
&lt;h3 id=&#34;cineplay&#34;&gt;CinePlay
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.digitalrebellion.com/cineplay/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CinePlay by Digital Rebellion&lt;/a&gt; is almost like QuickTime X Pro and could serve as a solid competitor to &lt;a class=&#34;link&#34; href=&#34;http://simplemoviex.com/SimpleMovieX/index.var&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SimpleMovieX&lt;/a&gt;. CinePlay offers numerous vital features for editing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timecode display&lt;/li&gt;
&lt;li&gt;Text input of timecode location&lt;/li&gt;
&lt;li&gt;Add markers and annotations—including drawings! (Chapters not visible automatically in Compressor/FCP X, but can be exported to text files and imported manually)&lt;/li&gt;
&lt;li&gt;Set ins and outs (standard FCP7 keyboard shortcuts)&lt;/li&gt;
&lt;li&gt;Many others like video rotation, timecode and titlesafe overlays, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moreover, CinePlay&amp;rsquo;s Export window offers a rewrapping option (&lt;a class=&#34;link&#34; href=&#34;https://www.digitalrebellion.com/blog/posts/rewrapping_mp4_to_mov_with_cineplay&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;see their own blog post here&lt;/a&gt;) which automatically adds NDF timecode starting at 00:00:00:00—perfect for changing MP4 containers to MOV. The process however cannot be scripted from the CLI, but could be, in principle, via AppleScript to queue multiple files for export at at time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-rewrap-export.png&#34;
	width=&#34;712&#34;
	height=&#34;487&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;146&#34;
		data-flex-basis=&#34;350px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The rewrapped MOV itself appears to have full structural integrity. No funny glitches and crashes when processing the file. It does however start with a black image sometimes—but unlike the ffmpeg one, this doesn&amp;rsquo;t show any funny red lines in Compressor&amp;rsquo;s preview window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-black-screen-timecode-starts-at-zero.png&#34;
	width=&#34;1072&#34;
	height=&#34;759&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-compressor-black-screen.png&#34;
	width=&#34;1436&#34;
	height=&#34;780&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;It also passes the Compressor test: no crash at the lovely 20 second mark.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-compressor-success.png&#34;
	width=&#34;1436&#34;
	height=&#34;808&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The rewrapped MOV is roughly the same size, within a few bytes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/timecode-test-original-stats.png&#34;
	width=&#34;299&#34;
	height=&#34;384&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;186px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-rewrap-stats.png&#34;
	width=&#34;299&#34;
	height=&#34;371&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;80&#34;
		data-flex-basis=&#34;193px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;However, while the original was &lt;code&gt;159164&lt;/code&gt; frames, the rewrapped one is &lt;code&gt;159111&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/rewrap-original-frame-count.png&#34;
	width=&#34;1008&#34;
	height=&#34;422&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;573px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-rewrap-missing-frames.png&#34;
	width=&#34;1009&#34;
	height=&#34;415&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;583px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The first setback is CinePlay changes the File Creation Date of the file (i.e. the one that&amp;rsquo;s read from &lt;code&gt;GetFileInfo&lt;/code&gt; from the Terminal) so the date in FCP X is changed from the original to the date of the rewrapping. Also note, though how the timecode duration &lt;em&gt;appears&lt;/em&gt; longer in FCP X. This I reckon is because the timecode track is NDF but the FR is 29.97, and/or some metadata is incorrect in CinePlay&amp;rsquo;s rewrap. (In Compressor, the last frame&amp;rsquo;s timecode is &lt;code&gt;01:28:23:21&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/rewrap-editready-file-dates.png&#34;
	width=&#34;756&#34;
	height=&#34;113&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;669&#34;
		data-flex-basis=&#34;1605px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Also, the frame rate of the rewrapped footage is no longer 29.97 but instead 30, as told to Compressor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-changes-framerate-metadata.png&#34;
	width=&#34;1436&#34;
	height=&#34;920&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;156&#34;
		data-flex-basis=&#34;374px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Another rather serious hiccup was&amp;hellip; the Compressor render never completed!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/rewrapping-and-adding-timecode-to-mp4s/cineplay-compressor-hang-bad-file.png&#34;
	width=&#34;1436&#34;
	height=&#34;836&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Turns out the original movie file I inherited was somehow corrupt. (Photos probably isn&amp;rsquo;t the best tool to import AVCHD footage.) Not CinePlay&amp;rsquo;s fault at all but it does knock it out of first place for fault tolerance!&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[Updated July 5, 2019 with wording and ordering changes.]&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Livestreaming Lessons Learned</title>
        <link>http://localhost:1313/post/video/2016/live-streaming-lessons/</link>
        <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2016/live-streaming-lessons/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;Last May, for Chhandayan&amp;rsquo;s All-Night Concert 2015 in NYC, I cut between two cameras in the livestream for the first time. Little did I know, there was a lot to learn.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what I&amp;rsquo;d do differently next time.&lt;/p&gt;
&lt;h2 id=&#34;transfer-sd-card-footage-with-a-separate-laptop&#34;&gt;Transfer SD Card Footage with a Separate Laptop
&lt;/h2&gt;&lt;p&gt;Red Giant&amp;rsquo;s neat software &lt;a class=&#34;link&#34; href=&#34;http://www.redgiant.com/products/offload/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Offload&lt;/a&gt; made it really simple to transfer footage from the Sony AX100 cam. Since it also compares checksums of these giant video files, I suspect it spiked the CPU and caused some dropped frames—especially since Wirecast was writing to the same disk!&lt;/p&gt;
&lt;p&gt;Best to use another machine like a MacBook Air to dump SD footage. Any machine with a fast, built-in or USB 3.0 SD card reader really.&lt;/p&gt;
&lt;h2 id=&#34;always-ingest-hdv-cams-as-uncompressed-hdmi-outputs&#34;&gt;Always Ingest HDV Cams as Uncompressed HDMI Outputs
&lt;/h2&gt;&lt;p&gt;If the streaming laptop had another Thunderbolt port, this would have been a no-brainer a long time ago: rock two &lt;a class=&#34;link&#34; href=&#34;https://www.blackmagicdesign.com/products/ultrastudiothunderbolt/techspecs/W-DLUS-04&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Blackmagic Mini Recorder&lt;/a&gt;s via Thunderbolt and call it a day. However my &lt;a class=&#34;link&#34; href=&#34;http://www.everymac.com/systems/apple/macbook_pro/specs/macbook-pro-core-i7-2.6-15-mid-2012-unibody-usb3-specs.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2012 MacBook Pro 9,1&lt;/a&gt; has only one port, and the Mini Recorder is an endpoint with no daisy chaining (why o why).&lt;/p&gt;
&lt;p&gt;When the livestream source is HDV over FireWire, the camera actually compresses the video before it sends it over &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;; DV video on the other hand, is at a low enough bitrate to be uncompressed. So compressed HDV has to be &lt;em&gt;decompressed&lt;/em&gt; by the receiving side, i.e. Wirecast, which takes a few milliseconds. This makes the HDV FireWire feed lag slightly behind the other HDMI camera and creates an audio-video sync problem—especially when cutting/mixing with another camera live.&lt;/p&gt;
&lt;p&gt;Forums at Telestream suggest HDV video always lags uncompressed video/audio streams, but some users don&amp;rsquo;t experience significant lag when using HDV as the only source for both audio and video (probably the case for me because of the MBP&amp;rsquo;s high specs)&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example of the AV sync issue. The stationary center cam is HDV via FireWire and the panning closeup cam is uncompressed HDMI via a Blackmagic Mini Recorder. Audio is not switched and is always taken from the closeup camera (fed from the mixer). Note how the center cam&amp;rsquo;s video is approximately 0.5 sec behind the audio—i.e. the time for the data to decompress!!&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/150565246&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;vimeo video&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&amp;ldquo;Is it possible to delay the video of one source so that it&amp;rsquo;s in sync with the other?&amp;rdquo; &lt;del&gt;Although Wirecast allows for an audio delay offset, there&amp;rsquo;s no &amp;ldquo;source offset&amp;rdquo; option. One way might be to pipe the video through VLC to timeshift it with the play/pause button&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;, but that&amp;rsquo;s not precise enough here to say the least for starters.&lt;/del&gt; [Update] As of &lt;a class=&#34;link&#34; href=&#34;https://telestreamforum.forumbee.com/t/h48sty/wirecast-7-0-released-june-29-2016&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wirecast 7.0&lt;/a&gt;, sources now have a separate video delay feature. It would probably take some tuning though to get it right, and still might not be worth it since the decompression would still result in higher CPU usage.&lt;/p&gt;
&lt;p&gt;The solution? Thankfully now&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;, unlike when it was first released in 2011&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;, the &lt;a class=&#34;link&#34; href=&#34;https://www.blackmagicdesign.com/products/intensity&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Blackmagic Intensity Shuttle USB 3.0&lt;/a&gt; is compatible with Macs! Both are recognized by Wirecast which means one camera can use it via HDMI as a streaming input using Desktop Video 10.5.4 (released January 5, 2016). It&amp;rsquo;s also the goto workflow at Harvard University Athletics (in fact, they use two Mini Recorders and one Intensity Shuttle USB on a MBP with success)!&lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;wirecasts-record-to-disk--edit-grade-footage&#34;&gt;Wirecast&amp;rsquo;s &lt;em&gt;Record To Disk&lt;/em&gt; ≠ Edit Grade Footage
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Wirecast drops frames and even adjusts the &lt;em&gt;frame rate&lt;/em&gt; on the fly&lt;sup id=&#34;fnref:9&#34;&gt;&lt;a href=&#34;#fn:9&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;9&lt;/a&gt;&lt;/sup&gt; to serve live content.&lt;/strong&gt; In live video, performance takes priority over data integrity. Dropping a few frames here or there won&amp;rsquo;t make a visible difference to the end user. Wirecast does exactly this, typically around 80% CPU usage&lt;sup id=&#34;fnref:10&#34;&gt;&lt;a href=&#34;#fn:10&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;10&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:11&#34;&gt;&lt;a href=&#34;#fn:11&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;11&lt;/a&gt;&lt;/sup&gt;. However for frame-precise editing and multitrack syncing of any kind, every frame is vital. So using &lt;em&gt;Record to Disk&lt;/em&gt; is not the right tool for raw footage at all.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wirecast won&amp;rsquo;t save timecode.&lt;/strong&gt; Kinda makes sense, given the dropped frames. This makes it impossible to detect drops via any kind of timecode-break detection program. Thus the saved stream is super tedious to chop and fix if it is to be synced with another track.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;There&amp;rsquo;s no way to save HDV footage &lt;em&gt;as&lt;/em&gt; HDV footage in Wirecast.&lt;/strong&gt; It&amp;rsquo;s no &lt;a class=&#34;link&#34; href=&#34;http://www.divergentmedia.com/scopebox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ScopeBox&lt;/a&gt;. As far as I can tell, the incoming stream would have to be &lt;em&gt;recompressed&lt;/em&gt; on the fly to some other format like H.264, which causes more CPU cycles.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Better would be to either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Save to MiniDV tape and transfer afterwards.&lt;/strong&gt; Cumbersome, but it technically works. Tapes are about $3 each on Amazon and transferring after takes time, but the main setback is sporadic dropouts during captures when every moment counts. (Stay in school folks.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Save to disk via FireWire and leave the HDMI for streaming.&lt;/strong&gt; ScopeBox has been my tried and tested approach for &amp;gt; 5 years, and it preserves timecode. (&lt;em&gt;Maybe&lt;/em&gt; the streaming laptop could even handle it if it saved to a separate disk&amp;hellip;saving an m2t stream doesn&amp;rsquo;t take much CPU.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Save to disk via Wirecast using uncompressed formats like ProRes.&lt;/strong&gt; The way this works is by opening a separate, simultaneous project that only has the input from the HDV camera&amp;rsquo;s HDMI output. The file size is kind of overkill, but this approach could definitely work if another laptop is not available. However the inherent risk of dropped frames is still lingering, and timecode is is still not saved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: recording to SSD via &lt;a class=&#34;link&#34; href=&#34;https://www.blackmagicdesign.com/products/hyperdeckshuttle&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Blackmagic HyperDeck Shuttle&lt;/a&gt; won&amp;rsquo;t work, because we need the uncompressed HDMI output for the livestream and the camera has only 1 HDMI output.&lt;/p&gt;
&lt;h2 id=&#34;best-practices-for-record-to-disk&#34;&gt;Best Practices for &lt;em&gt;Record To Disk&lt;/em&gt;
&lt;/h2&gt;&lt;p&gt;Saving the livestream feed to disk is still helpful. Such footage is &lt;em&gt;not&lt;/em&gt; a substitute for actual footage from the camera but can be used for quick YouTube posts or as a rough outline for post-production work. (For example, cuts can be detected automatically using programs like &lt;a class=&#34;link&#34; href=&#34;https://www.digitalrebellion.com/promedia/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Edit Detector&lt;/a&gt; and applied to post-production timelines, saving hours of multicam editing work.)&lt;/p&gt;
&lt;p&gt;When doing so the following tricks minimize dropped frames:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Either save in ProRes or in the same format as the livestream.&lt;/strong&gt; As this Wirecast forum post&lt;sup id=&#34;fnref:12&#34;&gt;&lt;a href=&#34;#fn:12&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;12&lt;/a&gt;&lt;/sup&gt; explains, each output format results in an additional real time encoder thus more CPU usage. H.264 can be particularly CPU intensive, especially when the settings specified cannot take advantage of hardware codecs. ProRes however is extremely light on the CPU, since it&amp;rsquo;s uncompressed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Use fast external disks as the destination.&lt;/strong&gt; As the same post&lt;sup id=&#34;fnref1:12&#34;&gt;&lt;a href=&#34;#fn:12&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;12&lt;/a&gt;&lt;/sup&gt; explains, writing to disk on slow external drives can also result in dropped frames. I find writing to the same internal disk can also cause performance degredation, interfering with the livestream. However USB 3 and Lightning drives have more than enough bandwidth and don&amp;rsquo;t spike CPU usage—even for ProRes. And that&amp;rsquo;s a good thing, because ProRes files can run really big! Here&amp;rsquo;s a rough guide for choosing the right size drive.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Codec&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Resolution&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Size on Disk&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ProRes 422&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1080p&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1.02 GB/min = 61.2 GB/hr&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ProRes 422&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;720p&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.53 GB/min = 31.8 GB/hr&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ProRes 422&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;480p&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;0.36 GB/min = 21.6 GB/hr&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Split files often.&lt;/strong&gt; Rather than saving a single five-hour file to disk, start/stop the file recording for each song, set, etc. Doing so limits inevitable dropped frames to a smaller percentage of the duration of the video, making audio drift less noticable and increasing the chance for multicam syncing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[Updated Feb. 4, 2017 with additional Wirecast Record to Disk information.]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[Updated May 14, 2018 with renamed titles, edits, and updated Wirecast best practices.]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=8362&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=8362&lt;/a&gt; &lt;code&gt;HDV, because it&#39;s a GOP based codec, takes longer to decode than the audio, hence the sync delay.&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Confirms HDV buffering on output of ~ 1 sec. &lt;a class=&#34;link&#34; href=&#34;https://obsproject.com/forum/threads/ability-to-synchronize-cameras.23166/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://obsproject.com/forum/threads/ability-to-synchronize-cameras.23166/&lt;/a&gt; &lt;code&gt;Now I&#39;m using also HDV cameras - Canon HX-A1 and Sony Z1. They are connected via firewire*, attached using Video source plugin (as it&#39;s m2ts (mpeg2) stream so can&#39;t be used directly at least in old OBS codebase). But this cameras has about 1 second of lag on firewire output, and that&#39;s how it works by design on most hdv cameras.&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Another thread on explaining HDV video lag. &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=10289&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=10289&lt;/a&gt; &lt;code&gt;HDV will lag because of the time it takes to decode the codec. Make sure your camera is in DV mode. Audio will tend to be ahead of the video from HDV camera due to the aforementioned lag.&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=13312&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=13312&lt;/a&gt; &lt;code&gt;HDV decode would lag behind HDMI/SDI input decode. Additionally HDV video may decode ahead of HDV audio. As others have mentioned I would not mix the two if sync were critical.&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=44&amp;amp;threadid=10185&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=44&amp;threadid=10185&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;Looks like public beta for the Blackmagic Intensity Shuttle USB 3.0 support started with &lt;a class=&#34;link&#34; href=&#34;https://www.blackmagicdesign.com/support/readme/201836592e384a54a140e0bbfad03a63&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Desktop Video 9.7.3 on June 16, 2013&lt;/a&gt; but was &lt;a class=&#34;link&#34; href=&#34;http://forum.blackmagicdesign.com/viewtopic.php?f=11&amp;amp;t=22926&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;still in beta through May 28, 2014&lt;/a&gt; at least.&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;
&lt;p&gt;Intensity Shuttle USB 3.0 unsupported on Macs initially &lt;a class=&#34;link&#34; href=&#34;http://forum.blackmagicdesign.com/viewtopic.php?f=3&amp;amp;t=3518&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.blackmagicdesign.com/viewtopic.php?f=3&amp;t=3518&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://stretchinternet.com/blog/2013/07/high-definition-three-camera-inputs-one-laptop-3500/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://stretchinternet.com/blog/2013/07/high-definition-three-camera-inputs-one-laptop-3500/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;
&lt;p&gt;Wirecast recommends always keeping the CPU under 80% &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=18511&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=18511&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:9&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:10&#34;&gt;
&lt;p&gt;Wirecast frame rate loss suggested around 85-90% CPU &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=19731&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=19731&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:10&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:11&#34;&gt;
&lt;p&gt;This Wirecast post suggests frame rate loss one says 80% CPU &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=17012&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=17012&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:11&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:12&#34;&gt;
&lt;p&gt;Another 80% CPU, also external HD very little impact on disk &lt;a class=&#34;link&#34; href=&#34;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=16048&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;threadid=16048&lt;/a&gt; &lt;code&gt;Basically streaming and recording are using the same encoder rather than two encoders in that case...CPU above 80% can result in problems. External hard drives have very little impact with overall CPU use. Apple ProRes is a professional post production codec. H.264 is generally not best for post workflow. It can take significant CPU resources to encode (and decode in post).&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:12&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:12&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>FCP X 10.2.2 Unaffected by XMP Metadata Changes</title>
        <link>http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/</link>
        <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;There is quite a bit of literature&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; on the net how Adobe applications can embed XMP metadata and modify original footage on import—wreaking havoc for other NLEs like FCP. Posts range as far back as 2011, the year FCP X was released, to even one in mid 2014. However, for those that roundtrip between FCP X and Adobe with XMP metadata, turns out things have changed—for the better!&lt;/p&gt;
&lt;p&gt;The takeaway of all them, rightly so, was to uncheck the nasty &lt;strong&gt;Write XMP ID to Files in Import&lt;/strong&gt; setting in Adobe Premiere, After Effects, etc. which is on by default! &lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Write XMP ID To Files On Import option tells Premiere Pro to add a single piece of XMP metadata to the source file itself. This is basically a unique identifying number that can then be used by the various applications that understand XMP metadata [namely, the Adobe Suite] to tell which files is being used where. So, yes, it does modify the source file. If you don&amp;rsquo;t want that to happen, then make sure that checkbox is unchecked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By unchecking this option, the checksums and file sizes of the raw assets do not change, and projects in other NLEs like FCP X will not force re-linking because of an incompatible media file.&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup
&lt;/h2&gt;&lt;p&gt;The following experiment was conducted using the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15&amp;quot; Mid 2012 MBP 9,1&lt;/li&gt;
&lt;li&gt;OS X 10.11.1 El Capitan, released 2015-09-30&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;FCP X 10.2.2, released 2015-09-04&lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Adobe Premiere Pro CC 2015 9.1.0(174) Build &amp;ldquo;Original Gravity&amp;rdquo;&lt;sup id=&#34;fnref:9&#34;&gt;&lt;a href=&#34;#fn:9&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;XAVC-S 720p MOV file from a Sony AX100&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;procedure&#34;&gt;Procedure
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Import video (as a linked file) into FCP X.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/fcp-xmp-initial-import.png&#34;
	width=&#34;1476&#34;
	height=&#34;801&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S MOV file imported into FCP X&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;442px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Use &lt;a class=&#34;link&#34; href=&#34;http://www.sno.phy.queensu.ca/~phil/exiftool/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExifTool&lt;/a&gt; and save linked file metadata. Note the System File Date/Time values at the top.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   $ exiftool -api largefilesupport=1 -G1 XAVCS-sample.mov
   ​	[ExifTool]      ExifTool Version Number         : 10.08
   ​	[System]        File Name                       : XAVCS-sample.mov
   ​	[System]        Directory                       : /Volumes/Scratch/est
   ​	[System]        File Size                       : 3156 MB
   ​	[System]        File Modification Date/Time     : 2014:05:22 03:25:30-04:00
   ​	[System]        File Access Date/Time           : 2016:01:09 20:28:35-05:00
   ​	[System]        File Inode Change Date/Time     : 2016:01:09 19:47:23-05:00
   ​	[System]        File Permissions                : rwxrwxrwx
   ​	[File]          File Type                       : MOV
   ​	[File]          File Type Extension             : mov
   ​	[File]          MIME Type                       : video/quicktime
   ​	[QuickTime]     Major Brand                     : Apple QuickTime (.MOV/QT)
   ​	[QuickTime]     Minor Version                   : 2005.3.0
   ​	[QuickTime]     Compatible Brands               : qt
   ​	[QuickTime]     Movie Data Size                 : 3307975773
   ​	[QuickTime]     Movie Data Offset               : 48
   ​	[QuickTime]     Movie Header Version            : 0
   ​	[QuickTime]     Create Date                     : 2014:05:11 04:50:09
   ​	[QuickTime]     Modify Date                     : 2014:05:11 05:31:53
   ​	[QuickTime]     Time Scale                      : 600
   ​	[QuickTime]     Duration                        : 0:41:43
   ​	[QuickTime]     Preferred Rate                  : 1
   ​	[QuickTime]     Preferred Volume                : 100.00%
   ​	[QuickTime]     Preview Time                    : 0 s
   ​	[QuickTime]     Preview Duration                : 0 s
   ​	[QuickTime]     Poster Time                     : 0 s
   ​	[QuickTime]     Selection Time                  : 0 s
   ​	[QuickTime]     Selection Duration              : 0 s
   ​	[QuickTime]     Current Time                    : 0 s
   ​	[QuickTime]     Next Track ID                   : 3
   ​	[Track1]        Track Header Version            : 0
   ​	[Track1]        Track Create Date               : 2014:05:11 04:50:09
   ​	[Track1]        Track Modify Date               : 2014:05:11 05:31:53
   ​	[Track1]        Track ID                        : 1
   ​	[Track1]        Track Duration                  : 0:41:43
   ​	[Track1]        Track Layer                     : 0
   ​	[Track1]        Track Volume                    : 100.00%
   ​	[Track1]        Image Width                     : 1280
   ​	[Track1]        Image Height                    : 720
   ​	[Track1]        Graphics Mode                   : ditherCopy
   ​	[Track1]        Op Color                        : 32768 32768 32768
   ​	[Track1]        Compressor ID                   : avc1
   ​	[Track1]        Vendor ID                       : Apple
   ​	[Track1]        Source Image Width              : 1280
   ​	[Track1]        Source Image Height             : 720
   ​	[Track1]        X Resolution                    : 72
   ​	[Track1]        Y Resolution                    : 72
   ​	[Track1]        Compressor Name                 : H.264
   ​	[Track1]        Bit Depth                       : 24
   ​	[Track1]        Video Frame Rate                : 29.87
   ​	[Track2]        Matrix Structure                : 1 0 0 0 1 0 0 0 1
   ​	[Track2]        Media Header Version            : 0
   ​	[Track2]        Media Create Date               : 2014:05:11 04:50:09
   ​	[Track2]        Media Modify Date               : 2014:05:11 05:31:53
   ​	[Track2]        Media Time Scale                : 44100
   ​	[Track2]        Media Duration                  : 0:41:43
   ​	[Track2]        Balance                         : 0
   ​	[Track2]        Handler Class                   : Data Handler
   ​	[Track2]        Handler Type                    : Alias Data
   ​	[Track2]        Handler Vendor ID               : Apple
   ​	[Track2]        Handler Description             : Apple Alias Data Handler
   ​	[Track2]        Audio Format                    : mp4a
   ​	[Track2]        Audio Channels                  : 2
   ​	[Track2]        Audio Bits Per Sample           : 16
   ​	[Track2]        Audio Sample Rate               : 44100
   ​	[Track2]        Purchase File Format            : mp4a
   ​	[Composite]     Avg Bitrate                     : 10.6 Mbps
   ​	[Composite]     Image Size                      : 1280x720
   ​	[Composite]     Megapixels                      : 0.922
   ​	[Composite]     Rotation                        : 0
   ​	$
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Launch Premiere Pro. Enable the setting in Preferences to &lt;strong&gt;Write XMP ID to Files in Import&lt;/strong&gt; which is now &lt;em&gt;off by default!!&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/fcp-xmp-premiere-settings.png&#34;
	width=&#34;879&#34;
	height=&#34;819&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Enable Write XMP ID to Files on Import Setting in Premiere Pro&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;107&#34;
		data-flex-basis=&#34;257px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Import the same clip into Premiere Pro.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/fcp-xmp-premiere-import.png&#34;
	width=&#34;1162&#34;
	height=&#34;860&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S MOV file imported into Premiere Pro&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;135&#34;
		data-flex-basis=&#34;324px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Run &lt;a class=&#34;link&#34; href=&#34;http://www.sno.phy.queensu.ca/~phil/exiftool/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExifTool&lt;/a&gt; again to confirm the file has been modified. Note how the System File Date/Time values are updated and the new XMP info at the bottom!&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   $ exiftool -api largefilesupport=1 -G1 XAVCS-sample.mov
   ​	[ExifTool]      ExifTool Version Number         : 10.08
   ​	[System]        File Name                       : XAVCS-sample.mov
   ​	[System]        Directory                       : /Volumes/Scratch/est
   ​	[System]        File Size                       : 3156 MB
   ​	[System]        File Modification Date/Time     : 2016:01:09 20:30:04-05:00
   ​	[System]        File Access Date/Time           : 2016:01:09 20:30:22-05:00
   ​	[System]        File Inode Change Date/Time     : 2016:01:09 20:30:04-05:00
   ​	[System]        File Permissions                : rwxrwxrwx
   ​	[File]          File Type                       : MOV
   ​	[File]          File Type Extension             : mov
   ​	[File]          MIME Type                       : video/quicktime
   ​	[QuickTime]     Major Brand                     : Apple QuickTime (.MOV/QT)
   ​	[QuickTime]     Minor Version                   : 2005.3.0
   ​	[QuickTime]     Compatible Brands               : qt
   ​	[QuickTime]     Movie Data Size                 : 3307975773
   ​	[QuickTime]     Movie Data Offset               : 48
   ​	[QuickTime]     Movie Header Version            : 0
   ​	[QuickTime]     Time Scale                      : 600
   ​	[QuickTime]     Duration                        : 0:41:43
   ​	[QuickTime]     Preferred Rate                  : 1
   ​	[QuickTime]     Preferred Volume                : 100.00%
   ​	[QuickTime]     Preview Time                    : 0 s
   ​	[QuickTime]     Preview Duration                : 0 s
   ​	[QuickTime]     Poster Time                     : 0 s
   ​	[QuickTime]     Selection Time                  : 0 s
   ​	[QuickTime]     Selection Duration              : 0 s
   ​	[QuickTime]     Current Time                    : 0 s
   ​	[QuickTime]     Next Track ID                   : 3
   ​	[Track1]        Track Header Version            : 0
   ​	[Track1]        Track Create Date               : 2014:05:11 04:50:09
   ​	[Track1]        Track Modify Date               : 2014:05:11 05:31:53
   ​	[Track1]        Track ID                        : 1
   ​	[Track1]        Track Duration                  : 0:41:43
   ​	[Track1]        Track Layer                     : 0
   ​	[Track1]        Track Volume                    : 100.00%
   ​	[Track1]        Image Width                     : 1280
   ​	[Track1]        Image Height                    : 720
   ​	[Track1]        Graphics Mode                   : ditherCopy
   ​	[Track1]        Op Color                        : 32768 32768 32768
   ​	[Track1]        Compressor ID                   : avc1
   ​	[Track1]        Vendor ID                       : Apple
   ​	[Track1]        Source Image Width              : 1280
   ​	[Track1]        Source Image Height             : 720
   ​	[Track1]        X Resolution                    : 72
   ​	[Track1]        Y Resolution                    : 72
   ​	[Track1]        Compressor Name                 : H.264
   ​	[Track1]        Bit Depth                       : 24
   ​	[Track2]        Matrix Structure                : 1 0 0 0 1 0 0 0 1
   ​	[Track2]        Media Header Version            : 0
   ​	[Track2]        Media Create Date               : 2014:05:11 04:50:09
   ​	[Track2]        Media Modify Date               : 2014:05:11 05:31:53
   ​	[Track2]        Media Time Scale                : 44100
   ​	[Track2]        Media Duration                  : 0:41:43
   ​	[Track2]        Balance                         : 0
   ​	[Track2]        Handler Class                   : Data Handler
   ​	[Track2]        Handler Type                    : Alias Data
   ​	[Track2]        Handler Vendor ID               : Apple
   ​	[Track2]        Handler Description             : Apple Alias Data Handler
   ​	[Track2]        Audio Format                    : mp4a
   ​	[Track2]        Audio Channels                  : 2
   ​	[Track2]        Audio Bits Per Sample           : 16
   ​	[Track2]        Purchase File Format            : mp4a
   ​	[XMP-x]         XMP Toolkit                     : Adobe XMP Core 5.6-c111 79.158325, 2015/09/10-01:10:20
   ​	[XMP-xmp]       Create Date                     : 2014:05:11 04:50:09Z
   ​	[XMP-xmp]       Modify Date                     : 2016:01:09 20:30:03-05:00
   ​	[XMP-xmp]       Metadata Date                   : 2016:01:09 20:30:04-05:00
   ​	[XMP-xmpDM]     Video Alpha Mode                : None
   ​	[XMP-xmpDM]     Audio Sample Rate               : 44100
   ​	[XMP-xmpDM]     Audio Sample Type               : Compressed
   ​	[XMP-xmpDM]     Audio Channel Type              : Stereo
   ​	[XMP-xmpDM]     Video Frame Rate                : 29.970030
   ​	[XMP-xmpDM]     Duration Value                  : 1502300
   ​	[XMP-xmpDM]     Duration Scale                  : 0.00166666666666667
   ​	[XMP-xmpDM]     Video Frame Size W              : 1280
   ​	[XMP-xmpDM]     Video Frame Size H              : 720
   ​	[XMP-xmpDM]     Video Frame Size Unit           : pixel
   ​	[XMP-xmpMM]     Instance ID                     : xmp.iid:f876396c-36cd-46bb-8e10-198ec05bf13c
   ​	[XMP-xmpMM]     Document ID                     : xmp.did:0b184efa-54f1-404a-91a9-e1a5be69375d
   ​	[XMP-xmpMM]     Original Document ID            : xmp.did:0b184efa-54f1-404a-91a9-e1a5be69375d
   ​	[XMP-xmpMM]     History Action                  : saved, saved
   ​	[XMP-xmpMM]     History Instance ID             : xmp.iid:4b09e22c-62ee-4df5-b4c0-c6ae3db78df7, xmp.iid:f876396c-36cd-46bb-8e10-198ec05bf13c
   ​	[XMP-xmpMM]     History When                    : 2016:01:09 20:30:03-05:00, 2016:01:09 20:30:04-05:00
   ​	[XMP-xmpMM]     History Software Agent          : Adobe Premiere Pro CC (Macintosh), Adobe Premiere Pro CC (Macintosh)
   ​	[XMP-xmpMM]     History Changed                 : /, /metadata
   ​	[Composite]     Avg Bitrate                     : 10.6 Mbps
   ​	[Composite]     Image Size                      : 1280x720
   ​	[Composite]     Megapixels                      : 0.922
   ​	[Composite]     Rotation                        : 0
   ​	$
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Switch back to FCP X. No red media missing icon! Perhaps FCP X is working off the audio and video track lengths themselves, which did not change (as the ExifTool printouts showed).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/fcpx-unaffected-by-xmp/fcp-xmp-great-success.png&#34;
	width=&#34;1476&#34;
	height=&#34;801&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Modified file still linked and scrubs in FCP X&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;442px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;a-whole-new-world&#34;&gt;A Whole New World
&lt;/h2&gt;&lt;p&gt;While it&amp;rsquo;d be nice to know which version of FCP X finally became immune to embedded XMP metadata changes, the fact is 10.2.2 now is. Doing so opens a fresh range of possibilities for those organizing footage and roundtripping the Adobe and Apple ecosystems.&lt;/p&gt;
&lt;p&gt;Some people wait a lifetime for a moment like this.&lt;/p&gt;
&lt;p&gt;Indescribable feelings.&lt;/p&gt;
&lt;p&gt;Hit the road, Jack!&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[Updated September 28, 2018 wording changes for clarity.]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h2&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forums.creativecow.net/thread/335/13900&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2011-08-15 Opening clips in Premiere Pro makes them go offline in FCX&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forums.creativecow.net/thread/344/13891&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2012-07-17 Relinking this!&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forums.creativecow.net/thread/344/19594&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2012-04-19 https://forums.creativecow.net/thread/344/19594&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://wolfcrow.com/blog/how-to-transfer-a-project-from-final-cut-pro-to-after-effects/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2013-06-21 How to Transfer a Project from Final Cut Pro to After Effects&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://larryjordan.com/articles/fcpx-relinking/#comment-24001&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2014-06-25 FCP X: Relinking Media [u] (see comment by SadMac)&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;Understanding &amp;ldquo;Write XMP ID to Files on Import&amp;rdquo; &lt;a class=&#34;link&#34; href=&#34;https://forums.adobe.com/thread/682174&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forums.adobe.com/thread/682174&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/OS_X_El_Capitan#Releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/OS_X_El_Capitan#Releases&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Final_Cut_Pro_X#Evolution&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Final_Cut_Pro_X#Evolution&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Adobe_Premiere_Pro#Release_history&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Adobe_Premiere_Pro#Release_history&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:9&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Renaming MP4 to M4V to open with QT7 &amp; Compressor</title>
        <link>http://localhost:1313/post/video/2016/masquerading-mp4-files/</link>
        <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2016/masquerading-mp4-files/</guid>
        <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction
&lt;/h3&gt;&lt;p&gt;For a long time, Sony&amp;rsquo;s XAVC-S codec was completely a mystery to me. It was the new format the Sony CX900 and AX100 use, and when those cameras originally shipped, the files could not be edited natively with FCP X. (&lt;a class=&#34;link&#34; href=&#34;https://support.apple.com/en-us/HT202252&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Version 10.2 added that functionality&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;What was particularly perplexing was after the software update, QuickTime Player X and FCP X would open the files, but QuickTime Player 7 and Compressor 4.2 wouldn&amp;rsquo;t. QT7 was understandably written on legacy 32-bit frameworks&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, but shouldn&amp;rsquo;t Compressor 4.2 use the same new 64-bit frameworks (AVFoundation, CoreMediaIO, etc.) that QT X and FCP X used?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-failure-qt7-open.png&#34;
	width=&#34;532&#34;
	height=&#34;265&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S MP4 file unrecognized by QuickTime Player 7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;481px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-failure-streamclip-open-anyway.png&#34;
	width=&#34;833&#34;
	height=&#34;684&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;MPEG Streamclip further complains on Open Anyway&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;121&#34;
		data-flex-basis=&#34;292px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-failure-compressor4-open.png&#34;
	width=&#34;1222&#34;
	height=&#34;950&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S MP4 file unrecognized by Compressor 4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;128&#34;
		data-flex-basis=&#34;308px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Invalid sample description&amp;rdquo; &amp;hellip; &amp;ldquo;can&amp;rsquo;t find video or audio tracks&amp;rdquo; &amp;hellip; very interesting. Almost suggests the programs can&amp;rsquo;t read some header metadata. Thanks to the folks folks at Divergent Media, now I know XAVC-S is just H.264 video inside the container.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; Should be no reason QT7 can&amp;rsquo;t open it.&lt;/p&gt;
&lt;p&gt;Indeed that&amp;rsquo;s the case!&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution
&lt;/h3&gt;&lt;p&gt;The fix? Rename the extension from &lt;code&gt;mp4&lt;/code&gt; to &lt;code&gt;m4v&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now QT7, Compressor 4, and MPEG Streamclip all open the file once again. Hooray!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-success-qt7-m4v.png&#34;
	width=&#34;1072&#34;
	height=&#34;759&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S as M4V successfully recognized by QuickTime Player 7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;141&#34;
		data-flex-basis=&#34;338px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-success-streamclip-m4v.png&#34;
	width=&#34;805&#34;
	height=&#34;656&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S as M4V successfully recognized by MPEG Streamclip&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;294px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/post/video/2016/masquerading-mp4-files/xavcs-success-compressor4-m4v.png&#34;
	width=&#34;1222&#34;
	height=&#34;978&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Sony XAVC-S as M4V successfully recognized by Compressor 4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;124&#34;
		data-flex-basis=&#34;299px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;This means Final Cut Pro 7 will open such renamed files too, like QT7.&lt;/p&gt;
&lt;h3 id=&#34;but-why&#34;&gt;But Why?
&lt;/h3&gt;&lt;p&gt;Um, ya.&lt;/p&gt;
&lt;p&gt;My guess is, in the old days any file that ended in MP4 was thought to conform the MP4 standard. Makes sense, right? That implies the audio stream for MP4 files should be AAC, MP3 or a few other audio codecs.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; In that bucket list is &lt;em&gt;not&lt;/em&gt; PCM audio! This strict convention is what I surmise QT7 and Compressor 4.2 adhere to and therefore could not open the XAVC-S file from the video camera.&lt;/p&gt;
&lt;p&gt;The renaming hint came from a StackExchange&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; and FFMPEG page&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; after searching for the QT7 error message &lt;code&gt;An invalid sample description was found in the movie&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the OP&amp;rsquo;s case, a masquerading MP4 file contained both AAC and AC3 audio tracks—the latter which is not allowed per the MP4 spec. It&amp;rsquo;s interesting to note Handbrake (version 0.10.2 x86_64 (2015061100)) now automatically renames the destination file extension from &lt;code&gt;mp4&lt;/code&gt; to &lt;code&gt;m4v&lt;/code&gt; upon adding an AC3 audio track! It seems programs like VLC, which have always played the file, and now QT X and FCP X, probably do not give much importance to the actual file extension but instead to the stream data inside and are thus more lenient.&lt;/p&gt;
&lt;h3 id=&#34;m4v-is-like-apples-new-mov&#34;&gt;M4V is like Apple&amp;rsquo;s New MOV
&lt;/h3&gt;&lt;p&gt;Like the standard quicktime &lt;code&gt;mov&lt;/code&gt; container, &lt;code&gt;m4v&lt;/code&gt; seems to have more for flexibility for packaging MP4 streams—in this case, for PCM audio. After all, like &lt;code&gt;mov&lt;/code&gt;, the &lt;code&gt;m4v&lt;/code&gt; container is developed by Apple.&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;For a long time, I placed the emphasis on the &lt;strong&gt;v&lt;/strong&gt; of m4&lt;strong&gt;v&lt;/strong&gt;—that it&amp;rsquo;s MP4 &lt;strong&gt;v&lt;/strong&gt;ideo. But in a way, perhaps the emphasis is really on the &lt;strong&gt;4&lt;/strong&gt;: it&amp;rsquo;s like m&lt;strong&gt;o&lt;/strong&gt;v but just with the middle letter changed for mp&lt;strong&gt;4&lt;/strong&gt; files.&lt;/p&gt;
&lt;h3 id=&#34;appendix&#34;&gt;Appendix
&lt;/h3&gt;&lt;h4 id=&#34;xavc-s-sample-file&#34;&gt;XAVC-S sample file
&lt;/h4&gt;&lt;p&gt;For posterity! Original 50 MB video file from the Sony AX-100 camera available &lt;a class=&#34;link&#34; href=&#34;https://f000.backblazeb2.com/file/TripodVideoNinja/XAVCS-4K-29.97fps.MP4.zip&#34; &gt;here&lt;/a&gt; for download and experimentation.&lt;/p&gt;
&lt;p&gt;Audio credit: &lt;em&gt;Raga Pahadi - Alaap&lt;/em&gt; by Ashwin Batish from album &lt;a class=&#34;link&#34; href=&#34;https://player.spotify.com/album/0hAFpAvn7T1rAXD62ge5Ut&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;Morning Meditation Ragas on Sitar&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;xavc-s-stream-info&#34;&gt;XAVC-S Stream Info
&lt;/h4&gt;&lt;p&gt;Stream information from the original 4K MP4 file from the Sony AX-100 using &lt;code&gt;ffprobe -show_streams&lt;/code&gt;. Note how the H.264 profile is &lt;em&gt;High&lt;/em&gt; but the audio is PCM 48 kHz 16-bit.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Krish-MBP-2012-en1:Desktop Krish$ ffprobe -show_streams XAVCS-4K-29.97fps.MP4
ffprobe version 2.8 Copyright (c) 2007-2015 the FFmpeg developers
  built with Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
  configuration: --prefix=/usr/local/Cellar/ffmpeg/2.8 --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-opencl --enable-libx264 --enable-libmp3lame --enable-libvo-aacenc --enable-libxvid --enable-vda
  libavutil      54. 31.100 / 54. 31.100
  libavcodec     56. 60.100 / 56. 60.100
  libavformat    56. 40.101 / 56. 40.101
  libavdevice    56.  4.100 / 56.  4.100
  libavfilter     5. 40.101 /  5. 40.101
  libavresample   2.  1.  0 /  2.  1.  0
  libswscale      3.  1.101 /  3.  1.101
  libswresample   1.  2.101 /  1.  2.101
  libpostproc    53.  3.100 / 53.  3.100
Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &amp;#39;XAVCS-4K-29.97fps.MP4&amp;#39;:
  Metadata:
    major_brand     : XAVC
    minor_version   : 16785407
    compatible_brands: XAVCmp42iso2
    creation_time   : 2016-01-09 00:44:11
  Duration: 00:00:07.01, start: 0.000000, bitrate: 55039 kb/s
    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv, bt709/bt709/iec61966-2-4), 3840x2160 [SAR 1:1 DAR 16:9], 53251 kb/s, 29.97 fps, 29.97 tbr, 30k tbn, 59.94 tbc (default)
    Metadata:
      creation_time   : 2016-01-09 00:44:11
      handler_name    : Video Media Handler
      encoder         : AVC Coding
    Stream #0:1(und): Audio: pcm_s16be (twos / 0x736F7774), 48000 Hz, 2 channels, s16, 1536 kb/s (default)
    Metadata:
      creation_time   : 2016-01-09 00:44:11
      handler_name    : Sound Media Handler
    Stream #0:2(und): Data: none (rtmd / 0x646D7472), 245 kb/s (default)
    Metadata:
      creation_time   : 2016-01-09 00:44:11
      handler_name    : Non-Real Time Metadata
Unsupported codec with id 0 for input stream 2
[STREAM]
index=0
codec_name=h264
codec_long_name=H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
profile=High
codec_type=video
codec_time_base=1001/60000
codec_tag_string=avc1
codec_tag=0x31637661
width=3840
height=2160
coded_width=3840
coded_height=2160
has_b_frames=1
sample_aspect_ratio=1:1
display_aspect_ratio=16:9
pix_fmt=yuv420p
level=51
color_range=tv
color_space=bt709
color_transfer=iec61966-2-4
color_primaries=bt709
chroma_location=left
timecode=N/A
refs=2
is_avc=1
nal_length_size=4
id=N/A
r_frame_rate=30000/1001
avg_frame_rate=30000/1001
time_base=1/30000
start_pts=2002
start_time=0.066733
duration_ts=210210
duration=7.007000
bit_rate=53251849
max_bit_rate=N/A
bits_per_raw_sample=8
nb_frames=210
nb_read_frames=N/A
nb_read_packets=N/A
DISPOSITION:default=1
DISPOSITION:dub=0
DISPOSITION:original=0
DISPOSITION:comment=0
DISPOSITION:lyrics=0
DISPOSITION:karaoke=0
DISPOSITION:forced=0
DISPOSITION:hearing_impaired=0
DISPOSITION:visual_impaired=0
DISPOSITION:clean_effects=0
DISPOSITION:attached_pic=0
TAG:creation_time=2016-01-09 00:44:11
TAG:language=und
TAG:handler_name=Video Media Handler
TAG:encoder=AVC Coding
[/STREAM]
[STREAM]
index=1
codec_name=pcm_s16be
codec_long_name=PCM signed 16-bit big-endian
profile=unknown
codec_type=audio
codec_time_base=1/48000
codec_tag_string=twos
codec_tag=0x736f7774
sample_fmt=s16
sample_rate=48000
channels=2
channel_layout=unknown
bits_per_sample=16
id=N/A
r_frame_rate=0/0
avg_frame_rate=0/0
time_base=1/48000
start_pts=0
start_time=0.000000
duration_ts=336336
duration=7.007000
bit_rate=1536000
max_bit_rate=N/A
bits_per_raw_sample=N/A
nb_frames=336336
nb_read_frames=N/A
nb_read_packets=N/A
DISPOSITION:default=1
DISPOSITION:dub=0
DISPOSITION:original=0
DISPOSITION:comment=0
DISPOSITION:lyrics=0
DISPOSITION:karaoke=0
DISPOSITION:forced=0
DISPOSITION:hearing_impaired=0
DISPOSITION:visual_impaired=0
DISPOSITION:clean_effects=0
DISPOSITION:attached_pic=0
TAG:creation_time=2016-01-09 00:44:11
TAG:language=und
TAG:handler_name=Sound Media Handler
[/STREAM]
[STREAM]
index=2
codec_name=unknown
codec_long_name=unknown
profile=unknown
codec_type=data
codec_time_base=0/1
codec_tag_string=rtmd
codec_tag=0x646d7472
id=N/A
r_frame_rate=0/0
avg_frame_rate=0/0
time_base=1/30000
start_pts=0
start_time=0.000000
duration_ts=210210
duration=7.007000
bit_rate=245514
max_bit_rate=N/A
bits_per_raw_sample=N/A
nb_frames=210
nb_read_frames=N/A
nb_read_packets=N/A
DISPOSITION:default=1
DISPOSITION:dub=0
DISPOSITION:original=0
DISPOSITION:comment=0
DISPOSITION:lyrics=0
DISPOSITION:karaoke=0
DISPOSITION:forced=0
DISPOSITION:hearing_impaired=0
DISPOSITION:visual_impaired=0
DISPOSITION:clean_effects=0
DISPOSITION:attached_pic=0
TAG:creation_time=2016-01-09 00:44:11
TAG:language=und
TAG:handler_name=Non-Real Time Metadata
[/STREAM]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;history&#34;&gt;History
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;[Updated September 28, 2018 wording changes for clarity.]&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;footnotes&#34;&gt;Footnotes
&lt;/h3&gt;&lt;p&gt;Shout out to Divergent Media for creating such awesome software—and informative articles!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.divergentmedia.com/blog/dealing-with-codecs-on-modern-macs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dealing with Codecs on Modern Macs&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.divergentmedia.com/blog/understand-xavc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Understand XAVC&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/MPEG-4_Part_14#Data_streams&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MPEG-4 Part 14&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://superuser.com/a/130076/542965&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How do I fix Handbrake mp4s that produce Error -2041 when loaded in QuickTime?&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://forum.handbrake.fr/viewtopic.php?p=15470#p15470&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Quicktime error: invalid sample description&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/M4V&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;M4V&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Reverse Engineering XAVC-S XML Files</title>
        <link>http://localhost:1313/post/video/2016/reverse-engineering-xavcs-xml/</link>
        <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/video/2016/reverse-engineering-xavcs-xml/</guid>
        <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;Many new Sony video cameras (like the &lt;a class=&#34;link&#34; href=&#34;http://www.sony.com/electronics/handycam-camcorders/fdr-ax100&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FDR-AX100&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;http://www.sony.com/electronics/handycam-camcorders/hdr-cx900&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HDR-CX900&lt;/a&gt;) record into the XAVC-S format. XAVC-S writes to MP4 containers, and alongside them sit nice little XML files with metadata. The following is what I&amp;rsquo;ve unearthed from poking around the SD card.&lt;/p&gt;
&lt;p&gt;This post mainly serves as a log of observations.&lt;/p&gt;
&lt;h2 id=&#34;test-setup&#34;&gt;Test Setup
&lt;/h2&gt;&lt;p&gt;The AX100 has three FPS settings when recording to the XAVC-S HD file format (60p, 30p and 24p) and two when recording to XAVS-S 4K (30p and 24p).&lt;/p&gt;
&lt;p&gt;For this test there were five shots:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XAVC-S HD, 60 fps&lt;/li&gt;
&lt;li&gt;XAVC-S HD, 30 fps&lt;/li&gt;
&lt;li&gt;XAVC-S HD, 24 fps&lt;/li&gt;
&lt;li&gt;XAVC-S 4K, 30 fps&lt;/li&gt;
&lt;li&gt;XAVC-S 4K, 24 fps&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mediaproxml&#34;&gt;MEDIAPRO.XML
&lt;/h2&gt;&lt;p&gt;This file is located inside the &lt;code&gt;PRIVATE/M4ROOT/&lt;/code&gt; folder and contains a &lt;strong&gt;summary of all files on the card and their bitrates&lt;/strong&gt;. The resolution is inside the &lt;code&gt;videoType&lt;/code&gt; attribute i.e. &lt;code&gt;1920_1080&lt;/code&gt; for HD and &lt;code&gt;3840_2160&lt;/code&gt; for 4K. Note how &lt;code&gt;@L41&lt;/code&gt; and &lt;code&gt;@L42&lt;/code&gt; seem to indicate 50 Mbps and &lt;code&gt;@L51&lt;/code&gt; indicates 60 Mbps.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;MediaProfile xmlns=&amp;#34;http://xmlns.sony.net/pro/metadata/mediaprofile&amp;#34; createdAt=&amp;#34;2016-01-03T06:10:17-04:00&amp;#34; version=&amp;#34;2.10&amp;#34;&amp;gt;
	&amp;lt;Properties&amp;gt;
		&amp;lt;System systemId=&amp;#34;784B87FFFEBA9815&amp;#34; systemKind=&amp;#34;FDR-AX100&amp;#34; masterVersion=&amp;#34;XAVC-M4@1.10.00&amp;#34;/&amp;gt;
		&amp;lt;Attached mediaId=&amp;#34;1EEAD341907305C09815784B87FFFEBA&amp;#34; mediaKind=&amp;#34;AffordableMemoryCard&amp;#34; mediaName=&amp;#34;&amp;#34;/&amp;gt;
	&amp;lt;/Properties&amp;gt;
	&amp;lt;Contents&amp;gt;
		&amp;lt;Material uri=&amp;#34;./CLIP/C0001.MP4&amp;#34; type=&amp;#34;MP4&amp;#34; videoType=&amp;#34;AVC_1920_1080_HP@L42&amp;#34; audioType=&amp;#34;LPCM16&amp;#34; fps=&amp;#34;59.94p&amp;#34; dur=&amp;#34;210&amp;#34; ch=&amp;#34;2&amp;#34; aspectRatio=&amp;#34;16:9&amp;#34; offset=&amp;#34;0&amp;#34; umid=&amp;#34;060A2B340101010501010D43130000004E41F241907305CE784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./CLIP/C0001M01.XML&amp;#34; type=&amp;#34;XML&amp;#34;/&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./THMBNL/C0001T01.JPG&amp;#34; type=&amp;#34;JPG&amp;#34;/&amp;gt;
		&amp;lt;/Material&amp;gt;
		&amp;lt;Material uri=&amp;#34;./CLIP/C0002.MP4&amp;#34; type=&amp;#34;MP4&amp;#34; videoType=&amp;#34;AVC_1920_1080_HP@L41&amp;#34; audioType=&amp;#34;LPCM16&amp;#34; fps=&amp;#34;29.97p&amp;#34; dur=&amp;#34;165&amp;#34; ch=&amp;#34;2&amp;#34; aspectRatio=&amp;#34;16:9&amp;#34; offset=&amp;#34;0&amp;#34; umid=&amp;#34;060A2B340101010501010D431300000008DF1242907305DF784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./CLIP/C0002M01.XML&amp;#34; type=&amp;#34;XML&amp;#34;/&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./THMBNL/C0002T01.JPG&amp;#34; type=&amp;#34;JPG&amp;#34;/&amp;gt;
		&amp;lt;/Material&amp;gt;
		&amp;lt;Material uri=&amp;#34;./CLIP/C0003.MP4&amp;#34; type=&amp;#34;MP4&amp;#34; videoType=&amp;#34;AVC_1920_1080_HP@L41&amp;#34; audioType=&amp;#34;LPCM16&amp;#34; fps=&amp;#34;23.98p&amp;#34; dur=&amp;#34;120&amp;#34; ch=&amp;#34;2&amp;#34; aspectRatio=&amp;#34;16:9&amp;#34; offset=&amp;#34;0&amp;#34; umid=&amp;#34;060A2B340101010501010D4313000000A00A2242907305C0784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./CLIP/C0003M01.XML&amp;#34; type=&amp;#34;XML&amp;#34;/&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./THMBNL/C0003T01.JPG&amp;#34; type=&amp;#34;JPG&amp;#34;/&amp;gt;
		&amp;lt;/Material&amp;gt;
		&amp;lt;Material uri=&amp;#34;./CLIP/C0004.MP4&amp;#34; type=&amp;#34;MP4&amp;#34; videoType=&amp;#34;AVC_3840_2160_HP@L51&amp;#34; audioType=&amp;#34;LPCM16&amp;#34; fps=&amp;#34;29.97p&amp;#34; dur=&amp;#34;105&amp;#34; ch=&amp;#34;2&amp;#34; aspectRatio=&amp;#34;16:9&amp;#34; offset=&amp;#34;0&amp;#34; umid=&amp;#34;060A2B340101010501010D4313000000AEA46349907305C9784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./CLIP/C0004M01.XML&amp;#34; type=&amp;#34;XML&amp;#34;/&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./THMBNL/C0004T01.JPG&amp;#34; type=&amp;#34;JPG&amp;#34;/&amp;gt;
		&amp;lt;/Material&amp;gt;
		&amp;lt;Material uri=&amp;#34;./CLIP/C0005.MP4&amp;#34; type=&amp;#34;MP4&amp;#34; videoType=&amp;#34;AVC_3840_2160_HP@L51&amp;#34; audioType=&amp;#34;LPCM16&amp;#34; fps=&amp;#34;23.98p&amp;#34; dur=&amp;#34;84&amp;#34; ch=&amp;#34;2&amp;#34; aspectRatio=&amp;#34;16:9&amp;#34; offset=&amp;#34;0&amp;#34; umid=&amp;#34;060A2B340101010501010D4313000000B0398149907305CE784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./CLIP/C0005M01.XML&amp;#34; type=&amp;#34;XML&amp;#34;/&amp;gt;
			&amp;lt;RelevantInfo uri=&amp;#34;./THMBNL/C0005T01.JPG&amp;#34; type=&amp;#34;JPG&amp;#34;/&amp;gt;
		&amp;lt;/Material&amp;gt;
	&amp;lt;/Contents&amp;gt;
&amp;lt;/MediaProfile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;sidecar-xml&#34;&gt;Sidecar XML
&lt;/h2&gt;&lt;p&gt;These files are located inside &lt;code&gt;PRIVATE/M4ROOT/CLIP&lt;/code&gt; and sit alongside the actual XAVC-S MP4 files themselves. Interestingly, &lt;strong&gt;only FPS information is present in these sidecar XMLs&lt;/strong&gt;. Bitrate information is only present in the &lt;code&gt;M4ROOT/MEDIAPRO.XML&lt;/code&gt; file!&lt;/p&gt;
&lt;h3 id=&#34;xavc-s-hd-60-fps&#34;&gt;XAVC-S HD, 60 fps
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tcFps=&amp;quot;30&amp;quot; halfStep=&amp;quot;true&amp;quot;&lt;/code&gt; indicates 60 fps (i.e. 30 halved)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;NonRealTimeMeta xmlns=&amp;#34;urn:schemas-professionalDisc:nonRealTimeMeta:ver.2.00&amp;#34; xmlns:lib=&amp;#34;urn:schemas-professionalDisc:lib:ver.2.00&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; lastUpdate=&amp;#34;2016-01-03T06:10:57-04:00&amp;#34;&amp;gt;
	&amp;lt;TargetMaterial umidRef=&amp;#34;060A2B340101010501010D43130000004E41F241907305CE784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;/&amp;gt;
	&amp;lt;Duration value=&amp;#34;210&amp;#34;/&amp;gt;
	&amp;lt;LtcChangeTable tcFps=&amp;#34;30&amp;#34; halfStep=&amp;#34;true&amp;#34;&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;0&amp;#34; value=&amp;#34;40000000&amp;#34; status=&amp;#34;increment&amp;#34;/&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;209&amp;#34; value=&amp;#34;54830000&amp;#34; status=&amp;#34;end&amp;#34;/&amp;gt;
	&amp;lt;/LtcChangeTable&amp;gt;
	&amp;lt;CreationDate value=&amp;#34;2016-01-03T06:10:57-04:00&amp;#34;/&amp;gt;
	&amp;lt;Device manufacturer=&amp;#34;Sony&amp;#34; modelName=&amp;#34;FDR-AX100&amp;#34; serialNo=&amp;#34;1234567890&amp;#34;/&amp;gt;
	&amp;lt;RecordingMode type=&amp;#34;normal&amp;#34; cacheRec=&amp;#34;false&amp;#34;/&amp;gt;
&amp;lt;/NonRealTimeMeta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;xavc-s-hd-30-fps&#34;&gt;XAVC-S HD, 30 fps
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tcFps=&amp;quot;30&amp;quot; halfStep=&amp;quot;false&amp;quot;&lt;/code&gt; indicates 30 fps (i.e. 30 divided by 1)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;NonRealTimeMeta xmlns=&amp;#34;urn:schemas-professionalDisc:nonRealTimeMeta:ver.2.00&amp;#34; xmlns:lib=&amp;#34;urn:schemas-professionalDisc:lib:ver.2.00&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; lastUpdate=&amp;#34;2016-01-03T06:11:40-04:00&amp;#34;&amp;gt;
	&amp;lt;TargetMaterial umidRef=&amp;#34;060A2B340101010501010D431300000008DF1242907305DF784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;/&amp;gt;
	&amp;lt;Duration value=&amp;#34;165&amp;#34;/&amp;gt;
	&amp;lt;LtcChangeTable tcFps=&amp;#34;30&amp;#34; halfStep=&amp;#34;false&amp;#34;&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;0&amp;#34; value=&amp;#34;40000000&amp;#34; status=&amp;#34;increment&amp;#34;/&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;164&amp;#34; value=&amp;#34;54050000&amp;#34; status=&amp;#34;end&amp;#34;/&amp;gt;
	&amp;lt;/LtcChangeTable&amp;gt;
	&amp;lt;CreationDate value=&amp;#34;2016-01-03T06:11:40-04:00&amp;#34;/&amp;gt;
	&amp;lt;Device manufacturer=&amp;#34;Sony&amp;#34; modelName=&amp;#34;FDR-AX100&amp;#34; serialNo=&amp;#34;1234567890&amp;#34;/&amp;gt;
	&amp;lt;RecordingMode type=&amp;#34;normal&amp;#34; cacheRec=&amp;#34;false&amp;#34;/&amp;gt;
&amp;lt;/NonRealTimeMeta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;xavc-s-hd-24-fps&#34;&gt;XAVC-S HD, 24 fps
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tcFps=&amp;quot;24&amp;quot; halfStep=&amp;quot;false&amp;quot;&lt;/code&gt; indicates 24 fps&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;NonRealTimeMeta xmlns=&amp;#34;urn:schemas-professionalDisc:nonRealTimeMeta:ver.2.00&amp;#34; xmlns:lib=&amp;#34;urn:schemas-professionalDisc:lib:ver.2.00&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; lastUpdate=&amp;#34;2016-01-03T06:12:00-04:00&amp;#34;&amp;gt;
	&amp;lt;TargetMaterial umidRef=&amp;#34;060A2B340101010501010D4313000000A00A2242907305C0784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;/&amp;gt;
	&amp;lt;Duration value=&amp;#34;120&amp;#34;/&amp;gt;
	&amp;lt;LtcChangeTable tcFps=&amp;#34;24&amp;#34; halfStep=&amp;#34;false&amp;#34;&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;0&amp;#34; value=&amp;#34;00000000&amp;#34; status=&amp;#34;increment&amp;#34;/&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;119&amp;#34; value=&amp;#34;23040000&amp;#34; status=&amp;#34;end&amp;#34;/&amp;gt;
	&amp;lt;/LtcChangeTable&amp;gt;
	&amp;lt;CreationDate value=&amp;#34;2016-01-03T06:12:00-04:00&amp;#34;/&amp;gt;
	&amp;lt;Device manufacturer=&amp;#34;Sony&amp;#34; modelName=&amp;#34;FDR-AX100&amp;#34; serialNo=&amp;#34;1234567890&amp;#34;/&amp;gt;
	&amp;lt;RecordingMode type=&amp;#34;normal&amp;#34; cacheRec=&amp;#34;false&amp;#34;/&amp;gt;
&amp;lt;/NonRealTimeMeta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;xavc-s-4k-30-fps&#34;&gt;XAVC-S 4K, 30 fps
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tcFps=&amp;quot;30&amp;quot; halfStep=&amp;quot;false&amp;quot;&lt;/code&gt; indicates 30 fps, same as before&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;NonRealTimeMeta xmlns=&amp;#34;urn:schemas-professionalDisc:nonRealTimeMeta:ver.2.00&amp;#34; xmlns:lib=&amp;#34;urn:schemas-professionalDisc:lib:ver.2.00&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; lastUpdate=&amp;#34;2016-01-03T06:52:49-04:00&amp;#34;&amp;gt;
	&amp;lt;TargetMaterial umidRef=&amp;#34;060A2B340101010501010D4313000000AEA46349907305C9784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;/&amp;gt;
	&amp;lt;Duration value=&amp;#34;105&amp;#34;/&amp;gt;
	&amp;lt;LtcChangeTable tcFps=&amp;#34;30&amp;#34; halfStep=&amp;#34;false&amp;#34;&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;0&amp;#34; value=&amp;#34;40000000&amp;#34; status=&amp;#34;increment&amp;#34;/&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;104&amp;#34; value=&amp;#34;54030000&amp;#34; status=&amp;#34;end&amp;#34;/&amp;gt;
	&amp;lt;/LtcChangeTable&amp;gt;
	&amp;lt;CreationDate value=&amp;#34;2016-01-03T06:52:49-04:00&amp;#34;/&amp;gt;
	&amp;lt;Device manufacturer=&amp;#34;Sony&amp;#34; modelName=&amp;#34;FDR-AX100&amp;#34; serialNo=&amp;#34;1234567890&amp;#34;/&amp;gt;
	&amp;lt;RecordingMode type=&amp;#34;normal&amp;#34; cacheRec=&amp;#34;false&amp;#34;/&amp;gt;
&amp;lt;/NonRealTimeMeta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;xavc-s-4k-24-fps&#34;&gt;XAVC-S 4K, 24 fps
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tcFps=&amp;quot;24&amp;quot; halfStep=&amp;quot;false&amp;quot;&lt;/code&gt; indicates 24 fps, same as before&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;NonRealTimeMeta xmlns=&amp;#34;urn:schemas-professionalDisc:nonRealTimeMeta:ver.2.00&amp;#34; xmlns:lib=&amp;#34;urn:schemas-professionalDisc:lib:ver.2.00&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; lastUpdate=&amp;#34;2016-01-03T06:53:28-04:00&amp;#34;&amp;gt;
	&amp;lt;TargetMaterial umidRef=&amp;#34;060A2B340101010501010D4313000000B0398149907305CE784B87FFFEBA9815&amp;#34; status=&amp;#34;OK&amp;#34;/&amp;gt;
	&amp;lt;Duration value=&amp;#34;84&amp;#34;/&amp;gt;
	&amp;lt;LtcChangeTable tcFps=&amp;#34;24&amp;#34; halfStep=&amp;#34;false&amp;#34;&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;0&amp;#34; value=&amp;#34;00000000&amp;#34; status=&amp;#34;increment&amp;#34;/&amp;gt;
		&amp;lt;LtcChange frameCount=&amp;#34;83&amp;#34; value=&amp;#34;11030000&amp;#34; status=&amp;#34;end&amp;#34;/&amp;gt;
	&amp;lt;/LtcChangeTable&amp;gt;
	&amp;lt;CreationDate value=&amp;#34;2016-01-03T06:53:28-04:00&amp;#34;/&amp;gt;
	&amp;lt;Device manufacturer=&amp;#34;Sony&amp;#34; modelName=&amp;#34;FDR-AX100&amp;#34; serialNo=&amp;#34;1234567890&amp;#34;/&amp;gt;
	&amp;lt;RecordingMode type=&amp;#34;normal&amp;#34; cacheRec=&amp;#34;false&amp;#34;/&amp;gt;
&amp;lt;/NonRealTimeMeta&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;history&#34;&gt;History
&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[Updated May 14, 2018 with wording changes.]&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
